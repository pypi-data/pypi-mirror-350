// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.0
// source: divi/proto/trace/v1/trace.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SpanKind is the type of the span.
type Span_SpanKind int32

const (
	// Function represents a function call.
	Span_SPAN_KIND_FUNCTION Span_SpanKind = 0
	// LLM represents a llm api call.
	Span_SPAN_KIND_LLM Span_SpanKind = 1
	// EVALUATION represents an evaluation.
	Span_SPAN_KIND_EVALUATION Span_SpanKind = 2
)

// Enum value maps for Span_SpanKind.
var (
	Span_SpanKind_name = map[int32]string{
		0: "SPAN_KIND_FUNCTION",
		1: "SPAN_KIND_LLM",
		2: "SPAN_KIND_EVALUATION",
	}
	Span_SpanKind_value = map[string]int32{
		"SPAN_KIND_FUNCTION":   0,
		"SPAN_KIND_LLM":        1,
		"SPAN_KIND_EVALUATION": 2,
	}
)

func (x Span_SpanKind) Enum() *Span_SpanKind {
	p := new(Span_SpanKind)
	*p = x
	return p
}

func (x Span_SpanKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Span_SpanKind) Descriptor() protoreflect.EnumDescriptor {
	return file_divi_proto_trace_v1_trace_proto_enumTypes[0].Descriptor()
}

func (Span_SpanKind) Type() protoreflect.EnumType {
	return &file_divi_proto_trace_v1_trace_proto_enumTypes[0]
}

func (x Span_SpanKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Span_SpanKind.Descriptor instead.
func (Span_SpanKind) EnumDescriptor() ([]byte, []int) {
	return file_divi_proto_trace_v1_trace_proto_rawDescGZIP(), []int{1, 0}
}

type ScopeSpans struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A list of spans that originate from a resource.
	Spans         []*Span `protobuf:"bytes,2,rep,name=spans,proto3" json:"spans,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScopeSpans) Reset() {
	*x = ScopeSpans{}
	mi := &file_divi_proto_trace_v1_trace_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScopeSpans) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScopeSpans) ProtoMessage() {}

func (x *ScopeSpans) ProtoReflect() protoreflect.Message {
	mi := &file_divi_proto_trace_v1_trace_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScopeSpans.ProtoReflect.Descriptor instead.
func (*ScopeSpans) Descriptor() ([]byte, []int) {
	return file_divi_proto_trace_v1_trace_proto_rawDescGZIP(), []int{0}
}

func (x *ScopeSpans) GetSpans() []*Span {
	if x != nil {
		return x.Spans
	}
	return nil
}

type Span struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The trace_id is a unique identifier that represents a trace. It is a 16-byte array.
	TraceId []byte `protobuf:"bytes,1,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	// The span_id is a unique identifier that represents a span. It is an 8-byte array.
	SpanId []byte `protobuf:"bytes,2,opt,name=span_id,json=spanId,proto3" json:"span_id,omitempty"`
	// The parent_span_id is the span_id of the parent span. It is an 8-byte array.
	ParentSpanId []byte `protobuf:"bytes,3,opt,name=parent_span_id,json=parentSpanId,proto3" json:"parent_span_id,omitempty"`
	// The name of the span.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// The kind of the span.
	Kind Span_SpanKind `protobuf:"varint,5,opt,name=kind,proto3,enum=divi.proto.trace.v1.Span_SpanKind" json:"kind,omitempty"`
	// The start_time_unix_nano is the start time of the span in Unix nanoseconds.
	StartTimeUnixNano uint64 `protobuf:"fixed64,6,opt,name=start_time_unix_nano,json=startTimeUnixNano,proto3" json:"start_time_unix_nano,omitempty"`
	// The end_time_unix_nano is the end time of the span in Unix nanoseconds.
	EndTimeUnixNano uint64 `protobuf:"fixed64,7,opt,name=end_time_unix_nano,json=endTimeUnixNano,proto3" json:"end_time_unix_nano,omitempty"`
	// The metadata is a set of attributes that describe the span.
	Metadata      []*KeyValue `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Span) Reset() {
	*x = Span{}
	mi := &file_divi_proto_trace_v1_trace_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Span) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Span) ProtoMessage() {}

func (x *Span) ProtoReflect() protoreflect.Message {
	mi := &file_divi_proto_trace_v1_trace_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Span.ProtoReflect.Descriptor instead.
func (*Span) Descriptor() ([]byte, []int) {
	return file_divi_proto_trace_v1_trace_proto_rawDescGZIP(), []int{1}
}

func (x *Span) GetTraceId() []byte {
	if x != nil {
		return x.TraceId
	}
	return nil
}

func (x *Span) GetSpanId() []byte {
	if x != nil {
		return x.SpanId
	}
	return nil
}

func (x *Span) GetParentSpanId() []byte {
	if x != nil {
		return x.ParentSpanId
	}
	return nil
}

func (x *Span) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Span) GetKind() Span_SpanKind {
	if x != nil {
		return x.Kind
	}
	return Span_SPAN_KIND_FUNCTION
}

func (x *Span) GetStartTimeUnixNano() uint64 {
	if x != nil {
		return x.StartTimeUnixNano
	}
	return 0
}

func (x *Span) GetEndTimeUnixNano() uint64 {
	if x != nil {
		return x.EndTimeUnixNano
	}
	return 0
}

func (x *Span) GetMetadata() []*KeyValue {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_divi_proto_trace_v1_trace_proto protoreflect.FileDescriptor

var file_divi_proto_trace_v1_trace_proto_rawDesc = string([]byte{
	0x0a, 0x1f, 0x64, 0x69, 0x76, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x13, 0x64, 0x69, 0x76, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x21, 0x64, 0x69, 0x76, 0x69, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3d, 0x0a, 0x0a, 0x53, 0x63, 0x6f,
	0x70, 0x65, 0x53, 0x70, 0x61, 0x6e, 0x73, 0x12, 0x2f, 0x0a, 0x05, 0x73, 0x70, 0x61, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x69, 0x76, 0x69, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x61,
	0x6e, 0x52, 0x05, 0x73, 0x70, 0x61, 0x6e, 0x73, 0x22, 0x97, 0x03, 0x0a, 0x04, 0x53, 0x70, 0x61,
	0x6e, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x73, 0x70, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73,
	0x70, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x70, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x36, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e,
	0x64, 0x69, 0x76, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x61, 0x6e, 0x2e, 0x53, 0x70, 0x61, 0x6e, 0x4b, 0x69, 0x6e,
	0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x2f, 0x0a, 0x14, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x06, 0x52, 0x11, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x55, 0x6e, 0x69, 0x78, 0x4e, 0x61, 0x6e, 0x6f, 0x12, 0x2b, 0x0a, 0x12, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x06, 0x52, 0x0f, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69,
	0x78, 0x4e, 0x61, 0x6e, 0x6f, 0x12, 0x3a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x69, 0x76, 0x69, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4b,
	0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x4f, 0x0a, 0x08, 0x53, 0x70, 0x61, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x16, 0x0a,
	0x12, 0x53, 0x50, 0x41, 0x4e, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x46, 0x55, 0x4e, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x50, 0x41, 0x4e, 0x5f, 0x4b, 0x49,
	0x4e, 0x44, 0x5f, 0x4c, 0x4c, 0x4d, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x50, 0x41, 0x4e,
	0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x45, 0x56, 0x41, 0x4c, 0x55, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x02, 0x42, 0x0d, 0x5a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_divi_proto_trace_v1_trace_proto_rawDescOnce sync.Once
	file_divi_proto_trace_v1_trace_proto_rawDescData []byte
)

func file_divi_proto_trace_v1_trace_proto_rawDescGZIP() []byte {
	file_divi_proto_trace_v1_trace_proto_rawDescOnce.Do(func() {
		file_divi_proto_trace_v1_trace_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_divi_proto_trace_v1_trace_proto_rawDesc), len(file_divi_proto_trace_v1_trace_proto_rawDesc)))
	})
	return file_divi_proto_trace_v1_trace_proto_rawDescData
}

var file_divi_proto_trace_v1_trace_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_divi_proto_trace_v1_trace_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_divi_proto_trace_v1_trace_proto_goTypes = []any{
	(Span_SpanKind)(0), // 0: divi.proto.trace.v1.Span.SpanKind
	(*ScopeSpans)(nil), // 1: divi.proto.trace.v1.ScopeSpans
	(*Span)(nil),       // 2: divi.proto.trace.v1.Span
	(*KeyValue)(nil),   // 3: divi.proto.common.v1.KeyValue
}
var file_divi_proto_trace_v1_trace_proto_depIdxs = []int32{
	2, // 0: divi.proto.trace.v1.ScopeSpans.spans:type_name -> divi.proto.trace.v1.Span
	0, // 1: divi.proto.trace.v1.Span.kind:type_name -> divi.proto.trace.v1.Span.SpanKind
	3, // 2: divi.proto.trace.v1.Span.metadata:type_name -> divi.proto.common.v1.KeyValue
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_divi_proto_trace_v1_trace_proto_init() }
func file_divi_proto_trace_v1_trace_proto_init() {
	if File_divi_proto_trace_v1_trace_proto != nil {
		return
	}
	file_divi_proto_common_v1_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_divi_proto_trace_v1_trace_proto_rawDesc), len(file_divi_proto_trace_v1_trace_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_divi_proto_trace_v1_trace_proto_goTypes,
		DependencyIndexes: file_divi_proto_trace_v1_trace_proto_depIdxs,
		EnumInfos:         file_divi_proto_trace_v1_trace_proto_enumTypes,
		MessageInfos:      file_divi_proto_trace_v1_trace_proto_msgTypes,
	}.Build()
	File_divi_proto_trace_v1_trace_proto = out.File
	file_divi_proto_trace_v1_trace_proto_goTypes = nil
	file_divi_proto_trace_v1_trace_proto_depIdxs = nil
}
