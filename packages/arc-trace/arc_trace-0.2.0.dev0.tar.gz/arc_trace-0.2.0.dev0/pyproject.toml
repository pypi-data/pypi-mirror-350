[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "arc-trace"
dynamic = ["version"]
description = "Lightweight, framework-agnostic Python SDK for AI agent tracing with automatic prompt extraction"
readme = "README.md"
license = "MIT"
authors = [
    {name = "Arc Computer", email = "jarrod@arc.computer"}
]
keywords = ["ai", "agents", "tracing", "observability", "opentelemetry", "reinforcement-learning"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10", 
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: System :: Monitoring",
    "Topic :: System :: Logging",
]
requires-python = ">=3.9"
dependencies = [
    "opentelemetry-api>=1.20.0",
    "opentelemetry-sdk>=1.20.0", 
    "requests>=2.25.0",
    "pyyaml>=6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "pytest-asyncio>=0.21.0",
    "black>=22.0",
    "isort>=5.0",
    "flake8>=4.0",
    "mypy>=0.910",
    "pre-commit>=2.15.0",
    "build>=0.8.0",
    "twine>=4.0.0",
]
frameworks = [
    "openai>=1.0.0",
    "langchain>=0.1.0",
    "langchain-core>=0.1.0", 
    "llama-index>=0.9.0",
    "anthropic>=0.3.0",
    "langgraph>=0.1.0",
    "langsmith>=0.1.0",
]
all = [
    "arc-trace[dev,frameworks]",
]

[project.urls]
Homepage = "https://github.com/Arc-Computer/arc-tracing-sdk"
Documentation = "https://docs.arc.computer"
Repository = "https://github.com/Arc-Computer/arc-tracing-sdk"
"Bug Tracker" = "https://github.com/Arc-Computer/arc-tracing-sdk/issues"
"Discussions" = "https://github.com/Arc-Computer/arc-tracing-sdk/discussions"
Changelog = "https://github.com/Arc-Computer/arc-tracing-sdk/releases"

[project.scripts]
arc-trace = "arc_tracing.cli.main:main"

[tool.setuptools_scm]
write_to = "arc_tracing/_version.py"
version_scheme = "release-branch-semver"
local_scheme = "no-local-version"

[tool.setuptools.packages.find]
where = ["."]
include = ["arc_tracing*"]
exclude = ["tests*", "examples*", "docs*"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | arc_traces
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["arc_tracing"]
known_third_party = [
    "opentelemetry",
    "requests", 
    "yaml",
    "pytest",
    "openai",
    "langchain",
    "llama_index",
    "anthropic",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "opentelemetry.*",
    "requests.*",
    "yaml.*",
    "openai.*",
    "langchain.*",
    "llama_index.*", 
    "anthropic.*",
    "agents.*",
    "langgraph.*",
    "langsmith.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--disable-warnings",
    "--tb=short",
]
markers = [
    "integration: marks tests as integration tests (may require external frameworks)",
    "slow: marks tests as slow",
    "unit: marks tests as fast unit tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["arc_tracing"]
omit = [
    "*/tests/*",
    "*/test_*.py", 
    "*/__pycache__/*",
    "*/migrations/*",
    "arc_tracing/_version.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
skip_covered = false

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "E501"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
    ".tox",
    ".eggs",
    "*.egg",
    "arc_traces",
]