[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "rhoshift"
version = "0.1.3.2"
description = "RHOAI tool kit for managing and upgrading RHOAI"
requires-python = ">=3.8"
authors = [
    { name = "RHOAI Team" }
]
readme = "Readme.md"
license = { file = "LICENSE" }
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "pytest>=7.0.0",
    "openshift-client>=0.1.0",
    "boto3>=1.26.0",
    "python-dotenv>=0.19.0",
    "requests>=2.25.0",
    "kubernetes>=26.0.0",
]

[project.scripts]
rhoshift = "rhoshift.main:main"
run-upgrade-matrix = "rhoai_upgrade_matrix.cli:run_upgrade_matrix"

[tool.hatch.build.targets.wheel]
packages = ["rhoshift", "rhoai_upgrade_matrix", "utils", "cli", "logger"]

[tool.hatch.build.targets.wheel.shared-data]
"rhoai_upgrade_matrix/scripts/run_upgrade_matrix.sh" = "run_upgrade_matrix.sh"
"utils/operator/scripts/cleanup_all.sh" = "utils/operator/cleanup_all.sh"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "--verbose"

[tool.ruff]
line-length = 100
target-version = "py38"
select = ["E", "F", "B", "I"]
ignore = ["E501"]

[tool.ruff.isort]
known-first-party = ["rhoshift", "rhoai_upgrade_matrix", "utils", "cli", "logger"]

[tool.ruff.mccabe]
max-complexity = 10 