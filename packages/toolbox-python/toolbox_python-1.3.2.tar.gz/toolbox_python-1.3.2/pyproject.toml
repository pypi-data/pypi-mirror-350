[project]
name = "toolbox-python"
version = "1.3.2"
description = "Helper files/functions/classes for generic Python processes"
readme = "README.md"
license = "MIT"
authors = [
    {name="Chris Mahoney", email="toolbox-python@data-science-extensions.com"},
]
maintainers = [
    {name="Chris Mahoney", email="toolbox-python@data-science-extensions.com"},
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: MIT License",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Testing :: Unit",
    "Topic :: Utilities",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Intended Audience :: Developers",
]
requires-python = ">=3.9,<4.0"
dependencies = [
    "typeguard==4.*",
    "more-itertools==10.*",
]

[project.urls]
Homepage = "https://data-science-extensions.com/python-toolbox"
Documentation = "https://data-science-extensions.com/python-toolbox"
Repository = "https://github.com/data-science-extensions/toolbox-python"
Changelog = "https://github.com/data-science-extensions/toolbox-python/releases"
Issues = "https://github.com/data-science-extensions/toolbox-python/issues"

[dependency-groups]
dev = [
    "black==25.*",
    "blacken-docs==1.*",
    "codespell==2.*",
    "ipykernel==6.*",
    "isort==6.*",
    "pre-commit==4.*",
    "pycln==2.*",
    "pylint==3.*",
    "pyupgrade==3.*",
    # "ruff==0.*",
]
docs = [
    "black==25.*",
    "docstring-inheritance==2.*",
    "livereload==2.*",
    "mike==2.*",
    "mkdocs==1.*",
    "mkdocs-autorefs==1.*",
    "mkdocs-coverage==1.*",
    "mkdocs-material==9.*",
    "mkdocstrings==0.*",
    "mkdocstrings-python==1.*",
]
test = [
    "mypy==1.*",
    "parameterized==0.*",
    "pytest==8.*",
    "pytest-clarity==1.*",
    "pytest-cov==6.*",
    "pytest-icdiff==0.*",
    "pytest-sugar==1.*",
    "pytest-xdist==3.*",
    "requests==2.*",
]

[tool.black]
color = true
exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''

[tool.pytest.ini_options]
filterwarnings = [
    "ignore::typeguard.InstrumentationWarning",
    "ignore::DeprecationWarning",
]
addopts = [
    "--verbose",
    "--verbose",
    "--cov=src/toolbox_python",
    "--cov-report=term",
    "--cov-report=html:cov-report/html",
    "--cov-report=xml:cov-report/xml/cov-report.xml",
]
testpaths = [
    "src/tests",
]

[tool.mypy]
ignore_missing_imports = true
allow_redefinition = true
pretty = true
disable_error_code = [
    "valid-type",
    "attr-defined",
]

[tool.isort]
import_heading_future = "## Future Python Library Imports ----"
import_heading_stdlib = "## Python StdLib Imports ----"
import_heading_thirdparty = "## Python Third Party Imports ----"
import_heading_firstparty = "## Local First Party Imports ----"
import_heading_localfolder = "## Local Module Imports ----"
profile = "black"
split_on_trailing_comma = true
combine_as_imports = true
lines_after_imports = 2

# [tool.ruff.lint.isort]
# force-wrap-aliases = true
# split-on-trailing-comma = true
# combine-as-imports = true
# lines-after-imports = 2

[tool.codespell]
ignore-words-list = "demog"

[tool.pylint.main]
exit-zero = false
disable = [
    "C0103", # invalid-name
    "C0114", # missing-module-docstring
    "C0116", # missing-function-docstring
    "C0121", # singleton-comparison
    "C0201", # consider-iterating-dictionary
    "C0207", # use-maxsplit-arg
    "C0301", # line-too-long
    "C0302", # too-many-lines
    "C0411", # wrong-import-order
    "W0511", # fixme
    "W0602", # global-variable-not-assigned
    "W0603", # global-statement
    "W0612", # unused-variable
    "W0621", # redefined-outer-name
    "W0631", # undefined-loop-variable
    "W0718", # broad-exception-caught
    "W0719", # broad-exception-raised
    "W1309", # f-string-without-interpolation
    "R0914", # too-many-locals
    "R0915", # too-many-statements
    "R1705", # no-else-return
    "R1711", # useless-return
    "R1716", # chained-comparison
    "R1723", # no-else-break
    "R1735", # use-dict-literal
    "E0602", # undefined-variable
    "E0606", # possibly-used-before-assignment
    "E1136", # unsubscriptable-object
    "E1137", # unsupported-assignment-operation
]

[tool.bump_version.replacements]
files = [
    { file = "src/toolbox_python/__init__.py", pattern = "__version__ = \"{VERSION}\"" },
    { file = "src/tests/test_version.py", pattern = "__version__ = \"{VERSION}\"" },
    { file = "pyproject.toml", pattern = "version = \"{VERSION}\"" },
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = [
    "src/toolbox_python",
]
