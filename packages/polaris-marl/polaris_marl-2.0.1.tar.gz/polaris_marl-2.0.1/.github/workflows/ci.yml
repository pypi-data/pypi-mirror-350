name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        exclude:
          # Reduce matrix size by excluding some combinations
          - os: windows-latest
            python-version: "3.8"
          - os: macos-latest
            python-version: "3.8"

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Ensure full checkout

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Run tests
      run: |
        pytest tests/ -v --tb=short

  test-gnn:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.11"]

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Ensure full checkout

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install PyTorch first
      run: |
        python -m pip install --upgrade pip
        pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu

    - name: Install torch-geometric
      run: |
        pip install torch-geometric torch-scatter torch-sparse torch-cluster torch-spline-conv -f https://data.pyg.org/whl/torch-2.0.0+cpu.html || echo "torch-geometric installation failed, continuing..."

    - name: Install package
      run: |
        pip install -e ".[dev]"

    - name: Test GNN functionality (optional)
      run: |
        python -c "
        import polaris
        print('Package imported successfully')
        try:
            from polaris import POLARISAgent
            print('POLARISAgent imported successfully')
        except ImportError as e:
            print(f'POLARISAgent import failed (expected if torch-geometric missing): {e}')
        "
        pytest tests/ -v

  build-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Ensure full checkout
    
    - name: Debug - Check files present
      run: |
        echo "=== Current directory ==="
        pwd
        echo "=== Files in root ==="
        ls -la
        echo "=== README.md status ==="
        ls -la README.md || echo "README.md not found"
        echo "=== setup.py status ==="
        ls -la setup.py || echo "setup.py not found"
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: python -m build
    
    - name: Check package
      run: twine check dist/*
    
    - name: Test package installation
      run: |
        pip install dist/*.whl
        python -c "import polaris; print(polaris.get_info())"
    
    - name: Test console script (optional)
      run: |
        polaris-simulate --help || echo "Console script failed (expected if dependencies missing)" 