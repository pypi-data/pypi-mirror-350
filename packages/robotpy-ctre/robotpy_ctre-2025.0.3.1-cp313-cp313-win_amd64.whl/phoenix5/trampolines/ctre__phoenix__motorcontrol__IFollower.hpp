// This file is autogenerated. DO NOT EDIT

#pragma once
#include <semiwrap.h>

// wrapped header

#include <ctre/phoenix/motorcontrol/IFollower.h>

// from extra_includes
#include <ctre/phoenix/motorcontrol/IMotorController.h>

namespace ctre::phoenix::motorcontrol {

template <typename CfgBase = swgen::EmptyTrampolineCfg>
struct PyTrampolineCfg_IFollower : CfgBase
{
  using Base = ctre::phoenix::motorcontrol::IFollower;
  using override_base_Follow_RTIMotorController = ctre::phoenix::motorcontrol::IFollower;
  using override_base_ValueUpdated_v = ctre::phoenix::motorcontrol::IFollower;
};

template <typename PyTrampolineBase, typename PyTrampolineCfg>
struct PyTrampoline_IFollower : PyTrampolineBase {
  using PyTrampolineBase::PyTrampolineBase;

  #ifndef SWGEN_DISABLE_Follow_RTIMotorController
    void Follow(ctre::phoenix::motorcontrol::IMotorController& masterToFollow) override {
      using LookupBase = typename PyTrampolineCfg::Base;
      SEMIWRAP_OVERRIDE_PURE_NAME(IFollower, PYBIND11_TYPE(void), LookupBase,
        "follow", Follow, masterToFollow);
    }
  #endif

  #ifndef SWGEN_DISABLE_ValueUpdated_v
    void ValueUpdated() override {
      using LookupBase = typename PyTrampolineCfg::Base;
      SEMIWRAP_OVERRIDE_PURE_NAME(IFollower, PYBIND11_TYPE(void), LookupBase,
        "valueUpdated", ValueUpdated, );
    }
  #endif
};

}; // namespace ctre::phoenix::motorcontrol
