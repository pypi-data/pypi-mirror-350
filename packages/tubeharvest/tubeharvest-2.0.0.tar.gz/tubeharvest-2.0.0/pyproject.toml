[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "tubeharvest"
version = "2.0.0"
authors = [
    {name = "TubeHarvest Team", email = "contact@tubeharvest.com"},
]
description = "A comprehensive YouTube downloader with beautiful interactive console interface"
readme = "README.md"
license = "MIT"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",

    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Video",
    "Topic :: Internet :: WWW/HTTP",
    "Environment :: Console",
]
keywords = ["youtube", "downloader", "video", "audio", "playlist", "cli", "terminal"]
dependencies = [
    "yt-dlp>=2023.3.4",
    "tqdm>=4.65.0", 
    "requests>=2.28.2",
    "python-ffmpeg-video-streaming>=0.1.15",
    "colorama>=0.4.6",
    "rich>=13.7.0",
    "prompt-toolkit>=3.0.36",
    "click>=8.1.7",
    "inquirer>=3.1.3",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0", 
    "pytest-mock>=3.11.0",
    "pytest-xdist>=3.3.0",
    "black>=23.7.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "isort>=5.12.0",
    "pre-commit>=3.3.0",
    "bandit>=1.7.5",
    "safety>=2.3.0",
    "ipython>=8.14.0",
    "ipdb>=0.13.0",
    "tox>=4.6.0",
    "build>=0.10.0",
    "twine>=4.0.0",
]
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "pytest-xdist>=3.3.0",
    "coverage>=7.3.0",
]
docs = [
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.1.0",
    "myst-parser>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/msadeqsirjani/TubeHarvest"
Repository = "https://github.com/msadeqsirjani/TubeHarvest.git"
Documentation = "https://github.com/msadeqsirjani/TubeHarvest/wiki"
"Bug Tracker" = "https://github.com/msadeqsirjani/TubeHarvest/issues"

[project.scripts]
tubeharvest = "tubeharvest.cli.main:main"
tubeharvest-gui = "tubeharvest.cli.interactive:interactive_main"

[tool.setuptools.packages.find]
include = ["tubeharvest*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "yt_dlp.*",
    "inquirer.*",
    "ffmpeg.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["tubeharvest"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__main__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "build", "dist"]
skips = ["B101", "B601"] 