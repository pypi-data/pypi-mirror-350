name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to publish to'
        required: true
        default: 'testpypi'
        type: choice
        options:
        - testpypi
        - pypi

jobs:
  publish:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'pypi' }}
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine pytest black flake8
        pip install -e .[dev]
    
    - name: Run tests
      run: |
        python -m pytest tests/ -v
    
    - name: Check code quality
      run: |
        python -m black --check tubeharvest/
        python -m flake8 tubeharvest/
    
    - name: Build package
      run: |
        python -m build
    
    - name: Check package
      run: |
        python -m twine check dist/*
    
    - name: Publish to Test PyPI
      if: github.event.inputs.environment == 'testpypi' || github.event_name == 'workflow_dispatch'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      run: |
        python -m twine upload --repository testpypi dist/*
    
    - name: Publish to PyPI
      if: github.event_name == 'release' || github.event.inputs.environment == 'pypi'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        python -m twine upload dist/*
    
    - name: Create GitHub Release Assets
      if: github.event_name == 'release'
      run: |
        gh release upload ${{ github.event.release.tag_name }} dist/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 