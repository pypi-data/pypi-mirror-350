[project]
name = "aiotaskqueue"
version = "0.13.1"
description = "Asynchronous task queue framework"
authors = [
    { name = "Doctor", email = "thirvondukr@gmail.com" },
]
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "anyio>=4.6.2.post1",
    "msgspec>=0.18.6",
    "typing-extensions>=4.8.0",
]

[project.urls]
Repository = "https://github.com/ThirVondukr/aiotaskqueue"
Issues = "https://github.com/ThirVondukr/aiotaskqueue/issues"

[project.optional-dependencies]
redis = [
    "redis>=5.2.0",
]
scheduler = [
    "croniter>=5.0.1",
]

[dependency-groups]
docs = [
    "griffe-typingdoc>=0.2.7",
    "mkdocs-autorefs>=1.2.0",
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.5.46",
    "mkdocstrings[python]>=0.27.0",
    "black>=24.10.0",
]
test = [
    "coverage>=7.6.4",
    "pytest>=8.3.3",
    "time-machine>=2.16.0",
    "trio>=0.27.0",
]
linters = [
    "deptry>=0.20.0",
    "mypy>=1.13.0",
    "ruff>=0.8.0",
]
types = [
    "types-croniter>=4.0.0.20241030",
    "types-redis>=4.6.0.20241004",
]
dev = [
    "pydantic>=2.10.4",
    "testcontainers>=4.9.0",
]

[tool.uv]
default-groups = [
    "docs",
    "test",
    "linters",
    "types",
]

[tool.coverage.run]
source = ["aiotaskqueue"]
command_line = "-m pytest -vv"
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "class .*\\(.*\\bProtocol\\b.*\\):",
    "@(?:typing\\.)?overload",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
]
show_missing = true
skip_covered = true
skip_empty = true
precision = 2
fail_under = 70

[tool.pytest.ini_options]
pythonpath = [
    "."
]


[tool.mypy]
plugins = []
python_version = "3.11"

strict = true
follow_imports = "normal"
ignore_missing_imports = false

allow_redefinition = false
disallow_any_explicit = false
ignore_errors = false
local_partial_types = true
no_implicit_optional = true
strict_optional = true
warn_no_return = true
warn_return_any = true
warn_unreachable = true

pretty = true
show_column_numbers = true
show_error_codes = true


[tool.ruff]
src = ["src", "tests"]
target-version = "py311"

[tool.ruff.lint]
fixable = [
    "F",
    "E",
    "W",
    "I",
    "COM",
    "UP",
    "RUF",
]
unfixable = [
    "F841", # Variable  is assigned to but never used
]
select = ["ALL"]
ignore = [
    "E501", # Line Length
    "D10", # Disable mandatory docstrings
    "D203", # one-blank-line-before-class
    "D212", # multi-line-summary-first-line
    "PD", # pandas-vet
    "A005",
    "TC001",
    "TC002",
    "TC003",
    "EXE",
    "COM812",
    "ISC001",
    "D400",
]
[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "S311"]
"docs/*" = ["INP001"]

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["type"]


[tool.deptry.per_rule_ignores]
DEP003 = [
    "pydantic",
]
DEP004 = [
    "pydantic",
]

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.13.1"
tag_format = "$version"
update_changelog_on_bump = true
version_files = [
    "aiotaskqueue/__init__.py",
    "pyproject.toml:version"
]
