name: 🧪 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: 🐍 Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, "3.10", "3.11", "3.12"]

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: testpass
          POSTGRES_USER: testuser
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: 🛎️ Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: 📋 Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: 🎨 Code formatting check
      run: |
        black --check src/ tests/

    - name: 🔍 Linting
      run: |
        flake8 src/ tests/

    - name: 🔬 Type checking
      run: |
        mypy src/ --ignore-missing-imports

    - name: 🧪 Run tests
      env:
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: testdb
        DB_USER: testuser
        DB_PASSWORD: testpass
      run: |
        pytest tests/ -v --cov=src --cov-report=xml --cov-report=term-missing

    - name: 📊 Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  build:
    name: 📦 Build Package
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: 🛎️ Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: 📦 Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: 🏗️ Build package
      run: |
        python -m build

    - name: 🔍 Check package
      run: |
        twine check dist/*

    - name: 📄 Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  security:
    name: 🛡️ Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: 🛎️ Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: 🔒 Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install pip-audit bandit

    - name: 🚨 Security audit
      run: |
        # Check for known security vulnerabilities (non-interactive)
        pip-audit --format=json --output=safety-report.json || echo "pip-audit completed with warnings"
        
        # Static security analysis
        bandit -r src/ -f json -o bandit-report.json || echo "bandit completed with warnings"

    - name: 📊 Upload security report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-report
        path: |
          safety-report.json
          bandit-report.json

  docs:
    name: 📚 Documentation
    runs-on: ubuntu-latest

    steps:
    - name: 🛎️ Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: 📚 Install doc dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install sphinx sphinx-rtd-theme

    - name: 🏗️ Build documentation
      run: |
        # Create basic sphinx documentation if needed
        mkdir -p docs/_build
        echo "Documentation build placeholder" > docs/_build/index.html

    - name: 📄 Upload docs
      uses: actions/upload-artifact@v4
      with:
        name: documentation
        path: docs/_build/ 