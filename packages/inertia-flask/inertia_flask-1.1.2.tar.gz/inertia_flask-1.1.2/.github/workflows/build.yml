name: build
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
permissions:
  contents: write
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.13']
        os: [ubuntu-latest, macOS-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python with uv ${{ matrix.python-version }}
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          uv pip install -r requirements.txt
          uv pip install -r requirements-test.txt --upgrade
          uv pip install coveralls
          npm install -g pnpm

      - name: Run tests
        run: uv run pytest

      - name: Upload coverage data to coveralls.io
        run: coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: ${{ matrix.os }} - ${{ matrix.python-version }}
          COVERALLS_PARALLEL: true

  lint:
    name: Run Linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Super-linter
        uses: super-linter/super-linter@v7.3.0
        env:
          VALIDATE_PYTHON_RUFF: true
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  coveralls:
    name: Indicate completion to coveralls.io
    needs: test
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
      - name: Finished
        run: |
          pip3 install --upgrade coveralls
          coveralls --finish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [ test, coveralls ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Setup
        run: npm install -g semantic-release @semantic-release/github @semantic-release/changelog @semantic-release/commit-analyzer @semantic-release/git @semantic-release/release-notes-generator semantic-release-pypi

      - name: Set up Python with uv ${{ matrix.python-version }}
        uses: astral-sh/setup-uv@v5
        with:
          python-version: '3.13'

      - name: Install setuptools
        run: uv pip install --upgrade setuptools wheel twine tomlkit build

      - name: Release
        if: github.event_name == 'push'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: npx semantic-release