name: Tests

on:
  push:
    branches: [ main, dev ]
    paths:
      - 'src/**'
      - 'tests/**'
  pull_request:
    branches: [ main, dev ]
    paths:
      - 'src/**'
      - 'tests/**'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.12']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install Task
      uses: arduino/setup-task@v2
      with:
        version: 3.x
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Install dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install uv
        uv venv
        uv sync
    
    - name: Run tests with coverage
      shell: bash
      env:
        VIRTUAL_ENV: ${{ github.workspace }}/.venv
        PATH: ${{ github.workspace }}/.venv/bin:${{ env.PATH }}
        PYTHONPATH: ${{ github.workspace }}
        SKIP_GIT_TESTS: "1"  # Skip git-dependent tests in CI environment
        SKIP_DB_TESTS: "1"  # Skip database-dependent tests in CI environment
      run: task test:coverage:xml
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        fail_ci_if_error: true 

    - name: Upload coverage reports to Codacy
      uses: codacy/codacy-coverage-reporter-action@v1.3.0
      with:
        project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
        coverage-reports: ./coverage.xml