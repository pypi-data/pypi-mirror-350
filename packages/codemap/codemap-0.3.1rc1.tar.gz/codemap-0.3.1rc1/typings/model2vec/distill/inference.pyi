"""
This type stub file was generated by pyright.
"""

import numpy as np
import torch
from pathlib import Path
from typing import Protocol, Union
from transformers import PreTrainedModel, PreTrainedTokenizer

logger = ...
PathLike = Union[Path, str]
_DEFAULT_BATCH_SIZE = ...
class ModulewithWeights(Protocol):
    weight: torch.nn.Parameter
    ...


def create_output_embeddings_from_model_and_tokens(model: PreTrainedModel, tokenizer: PreTrainedTokenizer, tokens: list[str], device: str) -> tuple[list[str], np.ndarray]:
    """
    Create output embeddings for a bunch of tokens using a pretrained model.

    It does a forward pass for all tokens passed in `tokens`.

    :param model: The model to use.
        This should be a transformers model.
    :param tokenizer: The tokenizer to use.
    :param tokens: The tokens to use.
    :param device: The torch device to use.
    :return: The tokens and output embeddings.
    """
    ...

def create_output_embeddings_from_model(model: PreTrainedModel, tokenizer: PreTrainedTokenizer, device: str) -> tuple[list[str], np.ndarray]:
    """
    Create output embeddings for a bunch of tokens using a pretrained model.

    It does a forward pass for all tokens passed in the tokenizer vocabulary.

    :param model: The model to use.
        This should be a transformers model.
    :param tokenizer: The tokenizer to use.
    :param device: The torch device to use.
    :return: The tokens and output embeddings.
    """
    ...

