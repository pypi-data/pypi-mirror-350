"""
This type stub file was generated by pyright.
"""

import numpy as np
import pytest
from sklearn._min_dependencies import PYTEST_MIN_VERSION
from sklearn.utils.fixes import parse_version

if parse_version(pytest.__version__) < parse_version(PYTEST_MIN_VERSION):
    ...
scipy_datasets_require_network = ...
def raccoon_face_or_skip(): # -> ndarray[_Shape, dtype[Any]]:
    ...

dataset_fetchers = ...
if scipy_datasets_require_network:
    ...
_SKIP32_MARK = ...
@pytest.fixture(params=[pytest.param(np.float32, marks=_SKIP32_MARK), np.float64])
def global_dtype(request): # -> Generator[Any, Any, None]:
    ...

fetch_20newsgroups_fxt = ...
fetch_20newsgroups_vectorized_fxt = ...
fetch_california_housing_fxt = ...
fetch_covtype_fxt = ...
fetch_kddcup99_fxt = ...
fetch_lfw_pairs_fxt = ...
fetch_lfw_people_fxt = ...
fetch_olivetti_faces_fxt = ...
fetch_rcv1_fxt = ...
fetch_species_distributions_fxt = ...
raccoon_face_fxt = ...
def pytest_collection_modifyitems(config, items): # -> None:
    """Called after collect is completed.

    Parameters
    ----------
    config : pytest config
    items : list of collected items
    """
    ...

@pytest.fixture(scope="function")
def pyplot(): # -> Generator[Any, Any, None]:
    """Setup and teardown fixture for matplotlib.

    This fixture checks if we can import matplotlib. If not, the tests will be
    skipped. Otherwise, we close the figures before and after running the
    functions.

    Returns
    -------
    pyplot : module
        The ``matplotlib.pyplot`` module.
    """
    ...

def pytest_generate_tests(metafunc): # -> None:
    """Parametrization of global_random_seed fixture

    based on the SKLEARN_TESTS_GLOBAL_RANDOM_SEED environment variable.

    The goal of this fixture is to prevent tests that use it to be sensitive
    to a specific seed value while still being deterministic by default.

    See the documentation for the SKLEARN_TESTS_GLOBAL_RANDOM_SEED
    variable for instructions on how to use this fixture.

    https://scikit-learn.org/dev/computing/parallelism.html#sklearn-tests-global-random-seed

    """
    ...

def pytest_configure(config): # -> None:
    ...

@pytest.fixture
def hide_available_pandas(monkeypatch): # -> None:
    """Pretend pandas was not installed."""
    ...

@pytest.fixture
def print_changed_only_false(): # -> Generator[None, Any, None]:
    """Set `print_changed_only` to False for the duration of the test."""
    ...

