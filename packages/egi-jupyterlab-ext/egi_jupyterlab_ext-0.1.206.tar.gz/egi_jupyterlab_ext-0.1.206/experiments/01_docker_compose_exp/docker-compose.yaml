# This file is taken from the original repository here: https://github.com/hubblo-org/scaphandre/tree/main/docker-compose
# It has been changed so it sets the JupyterHub
# along with the Scaphandre metrics.
services:
  jupyterhub:
    image: jupyterhub/jupyterhub:latest
    volumes:
      - ./jupyterhub-conf:/srv/jupyterhub
    command: >
      bash -lc '
        # 1) create the Linux user & set its password
        useradd -m goncalo && echo "goncalo:goncalo" | chpasswd &&
        useradd -m shashikant && echo "shashikant:shashikant" | chpasswd &&
        useradd -m yuri && echo "yuri:yuri" | chpasswd &&
        useradd -m adnan && echo "adnan:adnan" | chpasswd &&
        useradd -m quint && echo "quint:quint" | chpasswd &&

        # 2) allow JupyterHub to auto-create system users
        export JUPYTERHUB_CREATE_SYSTEM_USERS=true &&

        # 3) install Notebook if you really need it
        apt-get update -y && apt-get install -y jupyter && pip install jupyter &&

        # 4) generate jupyterhub_config.py if missing
        if [ ! -f /srv/jupyterhub/jupyterhub_config.py ]; then
          echo ">>> Generating jupyterhub_config.py"
          jupyterhub --generate-config -f /srv/jupyterhub/jupyterhub_config.py
          echo "c.Authenticator.allowed_users = {\"goncalo\",\"shashikant\"}" \
            >> /srv/jupyterhub/jupyterhub_config.py
          echo "c.LocalAuthenticator.create_system_users = True" \
            >> /srv/jupyterhub/jupyterhub_config.py
        fi &&

        # 5) finally launch JupyterHub at /jupyter
        exec jupyterhub --base-url /jupyter
      '
    ports:
      - "8000:8000"
    networks:
      - scaphandre-network

  grafana:
    build:
      context: ./grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "secret"
      GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: "/var/lib/grafana/dashboards/sample/sample-dashboard.json"
      GF_SERVER_DOMAIN: "mc-a4.lab.uvalight.net"
      GF_SERVER_ROOT_URL: "https://mc-a4.lab.uvalight.net/grafana/"
      GF_SERVER_SERVE_FROM_SUB_PATH: "true"
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    networks:
      - scaphandre-network
    volumes:
      - type: bind
        source: "./dashboards/sample-dashboard.json"
        target: "/var/lib/grafana/dashboards/sample/sample-dashboard.json"

  scaphandre:
    image: hubblo/scaphandre
    privileged: true
    ports:
      - "8080:8080"
    volumes:
      - type: bind
        source: /sys/class/powercap
        target: /sys/class/powercap
      - type: bind
        source: /sys/class/hwmon
        target: /sys/class/hwmon
      - type: bind
        source: /proc
        target: /proc
    command: ["prometheus"]
    networks:
      - scaphandre-network

  prometheus:
    build:
      context: ./prom
    ports:
      - "9090:9090"
    volumes:
      - ./prom/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - promdata-scaphandre:/prometheus
    networks:
      - scaphandre-network

volumes:
  promdata-scaphandre:

networks:
  scaphandre-network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.33.0/24