[build-system]
requires = [
  "hatchling",
  "hatch-vcs",
]
build-backend = "hatchling.build"

[project]
name = "smpl_doc"
dynamic = ["version"]
description = 'SiMPLe magic documentation'
readme = "README.md"
requires-python = ">=3.8"
keywords = []
authors = [
  { name = "Alexander Puck Neuwirth", email = "alexander@neuwirth-informatik.de" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "smpl >= 1.5.0",
]

[project.urls]
Documentation = "https://smpl.readthedocs.io/en/latest/_autosummary/smpl_doc.doc.html#module-smpl_doc.dochttps://github.com/APN-Pucky/smpl_doc/"
Issues = "https://github.com/APN-Pucky/smpl_doc/issues"
Source = "https://github.com/APN-Pucky/smpl_doc/"


[project.optional-dependencies]
lint = [
    "ruff",
]
docs = [
    "sphinx",
    "sphinx-rtd-theme",
    "sphinxcontrib-napoleon",
    "sphinx-autoapi",
    "sphinx_autobuild",
    "pandoc",
    "numpydoc",
    "myst-parser",
    "toml",
]
test = [
    "pytest",
    "pytest-cov",
    "pytest-profiling",
]
dev = [
    "pre-commit",
]

[tool.hatch.envs.full]
features = [
  "dev",
  "docs",
  "test",
]

[tool.hatch.version]
source = "vcs"

[tool.ruff]
line-length = 79

[tool.ruff.lint]
extend-select = [
  "B",        # flake8-bugbear
  "I",        # isort
  "ARG",      # flake8-unused-arguments
  "C4",       # flake8-comprehensions
  "EM",       # flake8-errmsg
  "ICN",      # flake8-import-conventions
  "G",        # flake8-logging-format
  "PGH",      # pygrep-hooks
  "PIE",      # flake8-pie
  "PL",       # pylint
  "PT",       # flake8-pytest-style
  "RET",      # flake8-return
  "RUF",      # Ruff-specific
  "SIM",      # flake8-simplify
  "UP",       # pyupgrade
  "YTT",      # flake8-2020
  "EXE",      # flake8-executable
  "NPY",      # NumPy specific rules
  "PD",       # pandas-vet
  "FURB",     # refurb
  "PYI",      # flake8-pyi
]
ignore = [
  "PLR09",    # Too many <...>
  "PLR2004",  # Magic value used in comparison
  "ISC001",   # Conflicts with formatter
  "RUF012",   # TODO: mutable class attributes
  "SIM115",   # TODO: use context manager for opening files
]

[tool.pytest.ini_options]
minversion = "6.0"
junit_family = "xunit2"
log_cli_level = "info"
xfail_strict = true
testpaths = []
addopts = [
    "-v",
    "--doctest-modules",
    "--ignore=docs/source/conf.py",
    "-ra",
    "--strict-markers",
    "--strict-config",
]
filterwarnings = [
  #"error",
  "ignore:Integer weights indicate poissonian data:UserWarning"
]
