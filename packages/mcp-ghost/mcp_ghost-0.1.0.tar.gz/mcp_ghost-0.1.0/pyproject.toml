[build-system]
requires = ["setuptools>=61.0,<77.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mcp-ghost"
version = "0.1.0"
description = "Intelligent MCP tool orchestration library with Claude Desktop-level capabilities"
requires-python = ">=3.11"
readme = "README.md"
authors = [
    { name = "June Kim", email = "kim.june.01@gmail.com" }
]
keywords = ["mcp", "llm", "tool-orchestration", "ai", "automation", "claude", "openai", "gemini"]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

# Core dependencies - NO mcp-cli dependency
dependencies = [
    # MCP Protocol - Official SDK
    "mcp>=1.5.0",
    # LLM Providers
    "openai>=1.55.3",
    "anthropic>=0.51.0",
    "google-genai>=1.15.0",
    # Core utilities
    "python-dotenv>=1.0.1",
    "pydantic>=2.10.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.25.3",
    "pytest-mock>=3.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
]
testing = [
    "respx>=0.20.0",         # HTTP mocking
    "httpx>=0.25.0",
]

# [project.scripts]
# mcp-ghost = "mcp_ghost.cli:main"  # CLI not yet implemented

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"
markers = [
    "record_golden: Record new golden test",
    "unit: Unit tests", 
    "integration: Integration tests",
    "slow: Slow tests requiring API calls",
]

[tool.black]
line-length = 88
target-version = ['py311']

[tool.ruff]
line-length = 88
target-version = "py311"
