Metadata-Version: 2.4
Name: yaost
Version: 2.2.1
Summary: Yet another opensac translator
Project-URL: Repository, https://github.com/ariloulaleelay/yaost
Author-email: Andrey Proskurnev <andrey@proskurnev.ru>
License-Expression: MIT
License-File: LICENSE
Keywords: 3D CAD,OpenSCAD
Classifier: Development Status :: 4 - Beta
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.10
Requires-Dist: lazy>=1.4
Requires-Dist: pyinotify-elephant-fork>=0.0.1
Provides-Extra: gears
Requires-Dist: shapely>=2.1; extra == 'gears'
Description-Content-Type: text/markdown

# yaost

Yet another openscad translator.

Yaost - is python to openscad translator.

## Prerequisites
  - python >= 3.5
  - openscad >= 2019

## Quickstart
Create file example.py:

```python
#!/usr/bin/env python
from yaost import project, cube

p = Project('example project')

@p.add_part
def simple_cube():
    return cube(10, 10, 10)

if __name__ == '__main__':
    p.run()
```
Build scad file:

```bash
$ python3 example.py build-scad
```

Now you can see your scad model:
```
$ openscad scad/simple-cube.scad
```

To build stl, run:
```
$ python3 example.py build-stl
```
Your model will be at ```stl/simple-cube.stl```

You can run yaost in watch mode, it regenerates scad each time when you save python file:
```
$ python example.py watch
```
The open file with
```
$ openscad scad/simple-cube.scad
```
Change something in example.py (eg. ```cube(30, 10, 10)```) you should see changes in openscad viewer immediately.

See more in examples section.
