[project]
name = "{{ cookiecutter.project_name }}"
version = "0.0.0"
requires-python = ">=3.12"
description = "{{ cookiecutter.app_description }}"
readme = "README.md"
authors = [
    { name = "{{ cookiecutter.author_name }}", email = "{{ cookiecutter.author_email }}" },
]
dependencies = [
    "fastapi[standard]==0.115.12",
    "pydantic[email]==2.11.5",
    "pydantic_extra_types==2.10.4",
    "mrkutil==2.1.0",
    "redis==6.1.0",
    "assetsstore[minio,s3]==1.7.2",
    "sqlalchemy==2.0.41",
    "sqlalchemy-utils==0.41.2",
    "asyncpg==0.30.0",
    "PyJWT==2.10.1",
    "alembic==1.16.1",
    "passlib==1.7.4",
    "phonenumbers==9.0.5",
]

[project.optional-dependencies]
dev = [
    "coverage==7.8.2",
    "ruff==0.11.11",
    "pytest-mock==3.14.0",
    "freezegun==1.5.2",
    "pytest==8.3.5",
    "pytest-asyncio==1.0.0",
    "httpx==0.28.1",
    "ipython==9.2.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["./package"]

[project.scripts]
rest_api = "package.app.main:prod"
rest_api_dev = "package.app.main:dev"

[tool.coverage.run]
source = ["./"]
omit = [
    "package/app/main.py",
    "package/app/models/base.py",
    "package/app/schemas/*",
    "package/app/alembic/*",
    "package/tests/*",
]

[tool.coverage.report]
fail_under = 80
show_missing = true
exclude_lines = ["pragma: no cover"]

[tool.pytest.ini_options]
minversion = "6.0"
asyncio_mode = "auto"
testpaths = ["package/tests/"]

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
line-length = 80

[tool.ruff.lint]
ignore = ["E501"]

[tool.ruff.format]
exclude = ["*.pyi"]
