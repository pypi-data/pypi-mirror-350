Metadata-Version: 2.4
Name: uvinstaller
Version: 0.3.1
Summary: 基于UV和PyInstaller的Python项目自动打包工具
Project-URL: Homepage, https://github.com/yourusername/uvinstaller
Project-URL: Documentation, https://github.com/yourusername/uvinstaller#readme
Project-URL: Repository, https://github.com/yourusername/uvinstaller
Project-URL: Issues, https://github.com/yourusername/uvinstaller/issues
Project-URL: Changelog, https://github.com/yourusername/uvinstaller/blob/main/CHANGELOG.md
Author-email: uvinstaller <your-email@example.com>
Maintainer-email: uvinstaller <your-email@example.com>
License-Expression: MIT
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Requires-Python: >=3.8
Description-Content-Type: text/markdown

# uvi - 基于UV和PyInstaller的Python项目自动打包工具

## 项目简介
uvi是一个简化的Python项目自动打包工具，结合了UV的快速依赖管理和PyInstaller的可执行文件生成能力。

### 核心功能
- **自动安装UV环境**：如果系统中未安装UV，将自动安装
- 自动检测和读取项目依赖（requirements.txt）
- 使用UV创建和管理虚拟环境
- 自动执行PyInstaller打包流程，生成单个可执行文件
- 自动清理临时文件和目录

## 安装指南

### 系统要求
- Python 3.8+
- pip包管理器（用于安装本工具和UV）

**注意：** UV会在首次使用时自动安装，无需手动安装

### 安装步骤
```bash
# 安装命令
pip install uvinstaller
```

## 快速开始

### 基本用法
```bash
# 基本打包命令（首次使用会自动安装UV）
uvi your_project.py
```

## 功能详解

### 1. UV环境自动安装
- 首次运行时自动检测UV是否已安装
- 如果未安装，将自动执行 `pip install uv`
- 安装完成后自动验证UV环境可用性
- 支持网络重试机制，确保安装成功

### 2. 依赖检测与管理
- 支持requirements.txt文件
- 自动使用UV安装依赖

### 3. UV虚拟环境管理
- 自动创建隔离的虚拟环境
- 依赖解析和安装优化

### 4. PyInstaller打包流程
- 自动生成单个可执行文件
- 固定使用--onefile参数

### 5. 文件清理机制
- 自动清理build目录
- 自动删除.spec文件

## 命令行接口

### 基本命令
```bash
# 打包命令
uvi <entry_point>
```

### 使用示例
```bash
# 打包main.py为可执行文件
uvi main.py

# 打包app.py为可执行文件  
uvi app.py
```

## 工作流程

1. **检查UV环境**（新增）：自动检测并安装UV
2. 检查入口文件是否存在
3. 检测项目依赖（requirements.txt）
4. 创建UV虚拟环境
5. 安装项目依赖
6. 执行PyInstaller打包（--onefile模式）
7. 清理临时文件
8. 输出到dist目录

## 开发指南

### 项目结构
```
uvinstaller/
├── core/           # 核心功能模块
│   └── installer.py
├── cli/            # 命令行接口
│   └── main.py
└── __init__.py
```

## API参考

### 核心类和方法

```python
from uvinstaller import UVInstaller

# 基本使用示例
installer = UVInstaller()
installer.pack("main.py")
```

## 更新日志

### v0.2.0（当前版本）
- **新增**：UV自动安装功能
- **改进**：增强网络重试机制
- **改进**：更详细的错误处理和用户提示

### v0.1.0
- 基本打包功能
- UV环境管理
- PyInstaller集成

## 许可证
待定

## 联系方式
待定 