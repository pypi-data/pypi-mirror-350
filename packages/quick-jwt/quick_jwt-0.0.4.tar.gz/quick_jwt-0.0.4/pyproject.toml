[project]
requires-python = ">=3.12"
name = "quick-jwt"


[tool.poetry]
name = "quick-jwt"
version = "0.0.4"
description = "Quick JWT library for authorization in FastAPI applications"
readme = "README.md"
authors = ["Frolov Maxim <m.frolov.2003@gmail.com>"]
classifiers = [
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Typing :: Typed",
    "Framework :: AsyncIO",
    "Framework :: FastAPI",
    "Framework :: Pydantic",
    "Framework :: Pydantic :: 2",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Internet :: WWW/HTTP",
]

[tool.poetry.urls]
Homepage = "https://github.com/maxim-f1/quick_jwt"
Repository = "https://github.com/maxim-f1/quick_jwt"
Issues = "https://github.com/maxim-f1/quick_jwt/issues"
Changelog = "https://github.com/maxim-f1/quick_jwt/releases"

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.115.12"
pyjwt = "^2.10.1"
pydantic-settings = "^2.9.1"


[tool.poetry.group.develop.dependencies]
pytest = "^8.3.5"
httpx = "^0.28.1"
uvicorn = "^0.34.2"
coverage = "^7.8.0"
twine = "^6.1.0"
mypy = "^1.15.0"
ruff = "^0.11.10"
mkdocs-material = "^9.6.14"


[tool.mypy]
strict = true
files = "quick_jwt"
exclude = ["tests", "examples"]
plugins = "pydantic.mypy"
explicit_package_bases = true


[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".github",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

line-length = 120
indent-width = 4
target-version = "py312"

[tool.ruff.lint]
select = ["E", "F", "Q"]
ignore = ["Q000", "Q003"]
fixable = [
    "A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM",
    "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL",
    "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT",
]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "single"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = false
docstring-code-line-length = "dynamic"

[tool.ruff.lint.isort]
known-third-party = ["fastapi", "pydantic", "starlette"]


[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
