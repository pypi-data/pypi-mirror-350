[project]
name = "onnx-asr"
dynamic = []
description = "Automatic Speech Recognition in Python using ONNX models"
authors = [
    { name = "Ilya Stupakov", email = "istupakov@gmail.com" },
]
keywords = [
    "asr",
    "speech recognition",
    "onnx",
    "stt",
]
dependencies = [
    "numpy",
]
requires-python = ">=3.10"
readme = "README.md"
license = "MIT"
license-files = [
    "LICENSE",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Multimedia :: Sound/Audio :: Speech",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Typing :: Typed",
]
version = "0.6.1"

[project.urls]
Documentation = "https://github.com/istupakov/onnx-asr#readme"
"Release notes" = "https://github.com/istupakov/onnx-asr/releases"
Issues = "https://github.com/istupakov/onnx-asr/issues"
Source = "https://github.com/istupakov/onnx-asr"

[project.optional-dependencies]
cpu = [
    "onnxruntime>=1.18.1",
]
gpu = [
    "onnxruntime-gpu>=1.18.1",
]
hub = [
    "huggingface-hub",
]

[project.scripts]
onnx-asr = "onnx_asr.cli:run"

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[dependency-groups]
build = [
    "onnx>=1.17.0",
    "onnxscript>=0.2.5",
    "torch>=2.6.0",
    "torchaudio>=2.6.0",
]
asrs = [
    "kaldi-native-fbank>=1.21.1",
    "nemo-toolkit[asr]>=2.2.1",
    "openai-whisper>=20240930",
]
test = [
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "onnxruntime>=1.21.1",
    { include-group = "build" },
    { include-group = "asrs" },
]
lint = [
    "ruff>=0.11.6",
    "mypy>=1.15.0",
]

[tool.pdm]
distribution = true

[tool.pdm.version]
source = "scm"

[tool.pdm.build]
source-includes = [
    "preprocessors",
    "tests",
]

[tool.pdm.scripts.build_preprocessors]
call = "preprocessors.build:build"

[tool.pdm.scripts.post_install]
composite = [
    "build_preprocessors",
]

[tool.pdm.scripts.pre_build]
composite = [
    "pdm sync --no-self --group build",
]

[tool.pdm.scripts.lint]
composite = [
    "ruff format --diff",
    "ruff check",
    "mypy .",
]

[[tool.pdm.source]]
name = "torch-cpu"
url = "https://download.pytorch.org/whl/cpu"
include_packages = [
    "torch*",
]

[tool.mypy]
python_version = "3.10"
strict = true
pretty = true
untyped_calls_exclude = "onnxruntime"
exclude = [
    "^preprocessors.",
    "^tests.preprocessors.",
]

[[tool.mypy.overrides]]
module = [
    "onnxruntime.*",
]
follow_untyped_imports = true
implicit_reexport = true

[tool.ruff]
line-length = 130
indent-width = 4
target-version = "py310"
exclude = [
    "*.ipynb",
]

[tool.ruff.lint]
select = [
    "B",
    "C4",
    "D",
    "E",
    "F",
    "G",
    "I",
    "ISC",
    "LOG",
    "N",
    "NPY",
    "PERF",
    "PIE",
    "PYI",
    "RUF",
    "SIM",
    "SLOT",
    "T10",
    "TID",
    "TRY",
    "UP",
    "W",
    "YTT",
]
ignore = [
    "D203",
    "D213",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "D100",
    "D103",
    "D104",
]
"preprocessors/*" = [
    "D100",
    "D103",
    "D104",
    "N802",
    "N806",
    "F821",
]

[tool.pytest.ini_options]
filterwarnings = [
    "ignore::DeprecationWarning:google.protobuf.*",
    "ignore::DeprecationWarning:torchmetrics.*",
    "ignore::FutureWarning:onnxscript.*",
    "ignore::DeprecationWarning:importlib.*",
]
