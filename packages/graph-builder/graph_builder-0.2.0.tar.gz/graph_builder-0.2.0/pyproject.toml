[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "graph-builder"
dynamic = ["version"]
description = "Graph generation and storage library with update tracking"
readme = "README.md"
requires-python = ">=3.7"
license = "MIT"
authors = [
    { name = "Beanone Team", email = "beanone@example.com" }
]

classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

[project.urls]
Homepage = "https://github.com/beanone/graph_builder"
Repository = "https://github.com/beanone/graph_builder"

[tool.hatch.build.targets.wheel]
packages = ["graph_builder"]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "graph_builder/__init__.py"

[tool.pytest.ini_options]
addopts = "-ra -q --cov=graph_builder --cov-report=term-missing"
asyncio_default_fixture_loop_scope = "function"
testpaths = ["tests"]

[tool.coverage.run]
source = ["graph_builder"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
]

[tool.ruff]
line-length = 88
target-version = "py37"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "RUF", # ruff-specific rules
]
ignore = [
    "E501",  # line length violations
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.lint.isort]
known-first-party = ["graph_builder"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]  # noqa
"__init__.py" = ["F401"]  # noqa
