window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"grscheller.fp": {"fullname": "grscheller.fp", "modulename": "grscheller.fp", "kind": "module", "doc": "<h3 id=\"pythonic-functional-programming-tools\">Pythonic Functional Programming Tools</h3>\n"}, "grscheller.fp.iterables": {"fullname": "grscheller.fp.iterables", "modulename": "grscheller.fp.iterables", "kind": "module", "doc": "<h3 id=\"library-of-iterator-related-functions\">Library of iterator related functions.</h3>\n\n<ul>\n<li>iterables are not necessarily iterators</li>\n<li>at all times iterator protocol is assumed to be followed, that is\n<ul>\n<li>all iterators are assumed to be iterable</li>\n<li>for all iterators <code>foo</code> we assume <code>iter(foo) is foo</code></li>\n</ul></li>\n</ul>\n"}, "grscheller.fp.iterables.drop": {"fullname": "grscheller.fp.iterables.drop", "modulename": "grscheller.fp.iterables", "qualname": "drop", "kind": "function", "doc": "<p>Drop the next <code>n</code> values from <code>iterable</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">iterable</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">n</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Iterator</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.iterables.dropWhile": {"fullname": "grscheller.fp.iterables.dropWhile", "modulename": "grscheller.fp.iterables", "qualname": "dropWhile", "kind": "function", "doc": "<p>Drop initial values from <code>iterable</code> while predicate is true.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">iterable</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">pred</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Iterator</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.iterables.take": {"fullname": "grscheller.fp.iterables.take", "modulename": "grscheller.fp.iterables", "qualname": "take", "kind": "function", "doc": "<p>Take up to <code>n</code> values from <code>iterable</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">iterable</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">n</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Iterator</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.iterables.takeWhile": {"fullname": "grscheller.fp.iterables.takeWhile", "modulename": "grscheller.fp.iterables", "qualname": "takeWhile", "kind": "function", "doc": "<p>Yield values from <code>iterable</code> while predicate is true.</p>\n\n<ul>\n<li>potential value loss if iterable is iterator with external references</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">iterable</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">pred</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Iterator</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.iterables.concat": {"fullname": "grscheller.fp.iterables.concat", "modulename": "grscheller.fp.iterables", "qualname": "concat", "kind": "function", "doc": "<p>Sequentially concatenate multiple iterables together.</p>\n\n<ul>\n<li>pure Python version of standard library's itertools.chain</li>\n<li>iterator sequentially yields each iterable until all are exhausted</li>\n<li>an infinite iterable will prevent subsequent iterables from yielding any values</li>\n<li>performant to chain</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">iterables</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Iterator</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.iterables.merge": {"fullname": "grscheller.fp.iterables.merge", "modulename": "grscheller.fp.iterables", "qualname": "merge", "kind": "function", "doc": "<p>Shuffle together multiple iterables until one is exhausted.</p>\n\n<ul>\n<li>iterator yields until one of the iterables is exhausted</li>\n<li>if yield_partials is true, yield any unmatched yielded values from other iterables\n<ul>\n<li>prevents data lose if any of the iterables are iterators with external references</li>\n</ul></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">iterables</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">yield_partials</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Iterator</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.iterables.exhaust": {"fullname": "grscheller.fp.iterables.exhaust", "modulename": "grscheller.fp.iterables", "qualname": "exhaust", "kind": "function", "doc": "<p>Shuffle together multiple iterables until all are exhausted.</p>\n\n<ul>\n<li>iterator yields until all iterables are exhausted</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">iterables</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Iterator</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.iterables.FM": {"fullname": "grscheller.fp.iterables.FM", "modulename": "grscheller.fp.iterables", "qualname": "FM", "kind": "class", "doc": "<p></p>\n", "bases": "enum.Enum"}, "grscheller.fp.iterables.FM.CONCAT": {"fullname": "grscheller.fp.iterables.FM.CONCAT", "modulename": "grscheller.fp.iterables", "qualname": "FM.CONCAT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FM.CONCAT: 1&gt;"}, "grscheller.fp.iterables.FM.MERGE": {"fullname": "grscheller.fp.iterables.FM.MERGE", "modulename": "grscheller.fp.iterables", "qualname": "FM.MERGE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FM.MERGE: 2&gt;"}, "grscheller.fp.iterables.FM.EXHAUST": {"fullname": "grscheller.fp.iterables.FM.EXHAUST", "modulename": "grscheller.fp.iterables", "qualname": "FM.EXHAUST", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;FM.EXHAUST: 3&gt;"}, "grscheller.fp.iterables.accumulate": {"fullname": "grscheller.fp.iterables.accumulate", "modulename": "grscheller.fp.iterables", "qualname": "accumulate", "kind": "function", "doc": "<p>Returns an iterator of accumulated values.</p>\n\n<ul>\n<li>pure Python version of standard library's itertools.accumulate</li>\n<li>function f does not default to addition (for typing flexibility)</li>\n<li>begins accumulation with an optional starting value</li>\n<li>itertools.accumulate had mypy issues</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">iterable</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"o\">~</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">],</span> <span class=\"o\">~</span><span class=\"n\">L</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">initial</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">L</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Iterator</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">L</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.iterables.foldL": {"fullname": "grscheller.fp.iterables.foldL", "modulename": "grscheller.fp.iterables", "qualname": "foldL", "kind": "function", "doc": "<p>Folds an iterable left with optional initial value.</p>\n\n<ul>\n<li>traditional FP type order given for function f</li>\n<li>when an initial value is not given then ~L = ~D</li>\n<li>if iterable empty &amp; no initial value given, return empty MB()</li>\n<li>never returns if iterable generates an infinite iterator</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">iterable</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"o\">~</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">],</span> <span class=\"o\">~</span><span class=\"n\">L</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">initial</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">L</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">grscheller</span><span class=\"o\">.</span><span class=\"n\">fp</span><span class=\"o\">.</span><span class=\"n\">woException</span><span class=\"o\">.</span><span class=\"n\">MB</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">L</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.iterables.foldR": {"fullname": "grscheller.fp.iterables.foldR", "modulename": "grscheller.fp.iterables", "qualname": "foldR", "kind": "function", "doc": "<p>Folds a reversible iterable right with an optional initial value.</p>\n\n<ul>\n<li>iterable needs to be reversible</li>\n<li>traditional FP type order given for function f</li>\n<li>when initial value is not given then ~R = ~D</li>\n<li>if iterable empty &amp; no initial value given, return return empty MB()</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">iterable</span><span class=\"p\">:</span> <span class=\"n\">Reversible</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">,</span> <span class=\"o\">~</span><span class=\"n\">R</span><span class=\"p\">],</span> <span class=\"o\">~</span><span class=\"n\">R</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">initial</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">R</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">grscheller</span><span class=\"o\">.</span><span class=\"n\">fp</span><span class=\"o\">.</span><span class=\"n\">woException</span><span class=\"o\">.</span><span class=\"n\">MB</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">R</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.iterables.foldLsc": {"fullname": "grscheller.fp.iterables.foldLsc", "modulename": "grscheller.fp.iterables", "qualname": "foldLsc", "kind": "function", "doc": "<p>Short circuit version of foldL.</p>\n\n<ul>\n<li>Callable <code>stopfold</code> purpose is to prematurely stop fold before end\n<ul>\n<li>useful for infinite iterables</li>\n</ul></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">iterable</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"o\">~</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">],</span> <span class=\"o\">~</span><span class=\"n\">L</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">initial</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">L</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">stopfold</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">,</span> <span class=\"o\">~</span><span class=\"n\">S</span><span class=\"p\">],</span> <span class=\"n\">grscheller</span><span class=\"o\">.</span><span class=\"n\">fp</span><span class=\"o\">.</span><span class=\"n\">woException</span><span class=\"o\">.</span><span class=\"n\">MB</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">S</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"o\">&lt;</span><span class=\"k\">lambda</span><span class=\"o\">&gt;&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">istate</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">S</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">grscheller</span><span class=\"o\">.</span><span class=\"n\">fp</span><span class=\"o\">.</span><span class=\"n\">woException</span><span class=\"o\">.</span><span class=\"n\">MB</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">L</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.iterables.foldRsc": {"fullname": "grscheller.fp.iterables.foldRsc", "modulename": "grscheller.fp.iterables", "qualname": "foldRsc", "kind": "function", "doc": "<p>Short circuit version of foldR.</p>\n\n<ul>\n<li>Callable <code>startfold</code> purpose is to start fold before end\n<ul>\n<li>does NOT start fold at end and prematurely stop</li>\n<li>useful for infinite and non-reversible iterables</li>\n</ul></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">iterable</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">,</span> <span class=\"o\">~</span><span class=\"n\">R</span><span class=\"p\">],</span> <span class=\"o\">~</span><span class=\"n\">R</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">initial</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">R</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">startfold</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">,</span> <span class=\"o\">~</span><span class=\"n\">S</span><span class=\"p\">],</span> <span class=\"n\">grscheller</span><span class=\"o\">.</span><span class=\"n\">fp</span><span class=\"o\">.</span><span class=\"n\">woException</span><span class=\"o\">.</span><span class=\"n\">MB</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">S</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"o\">&lt;</span><span class=\"k\">lambda</span><span class=\"o\">&gt;&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">istate</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">S</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">grscheller</span><span class=\"o\">.</span><span class=\"n\">fp</span><span class=\"o\">.</span><span class=\"n\">woException</span><span class=\"o\">.</span><span class=\"n\">MB</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">R</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.nothingness": {"fullname": "grscheller.fp.nothingness", "modulename": "grscheller.fp.nothingness", "kind": "module", "doc": "<h3 id=\"singleton-class-representing-nothingness\">Singleton class representing nothingness</h3>\n"}, "grscheller.fp.nothingness.noValue": {"fullname": "grscheller.fp.nothingness.noValue", "modulename": "grscheller.fp.nothingness", "qualname": "noValue", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Final[grscheller.fp.nothingness._NoValue]", "default_value": "noValue"}, "grscheller.fp.woException": {"fullname": "grscheller.fp.woException", "modulename": "grscheller.fp.woException", "kind": "module", "doc": "<h3 id=\"maybe-and-either-monads\">Maybe and Either Monads.</h3>\n\n<p>Functional data types to use in lieu of exceptions.</p>\n\n<h5 id=\"monadic-types\">Monadic types:</h5>\n\n<ul>\n<li><strong>MB:</strong> Maybe monad</li>\n<li><strong>XOR:</strong> Left biased Either monad</li>\n</ul>\n"}, "grscheller.fp.woException.MB": {"fullname": "grscheller.fp.woException.MB", "modulename": "grscheller.fp.woException", "qualname": "MB", "kind": "class", "doc": "<h4 id=\"maybe-monad\">Maybe Monad</h4>\n\n<p>Class wrapping a potentially missing value.</p>\n\n<ul>\n<li>where <code>MB(value)</code> contains a possible value of type <code>~D</code></li>\n<li><code>MB( )</code> semantically represent a non-existent or missing value of type ~D</li>\n<li>immutable, a <code>MB</code> does not change after being created\n<ul>\n<li>immutable semantics, map &amp; flatMap return new instances</li>\n<li>warning: contained values need not be immutable</li>\n<li>warning: not hashable if a mutable value is contained</li>\n</ul></li>\n<li>implementation detail:\n<ul>\n<li><code>MB( )</code> contains <code>sentinel</code> as a sentinel value\n<ul>\n<li>as a result, a MB cannot semantically contain the <code>sentinel</code> value</li>\n</ul></li>\n</ul></li>\n<li>raises <code>ValueError</code> if empty and get method not given a default value</li>\n</ul>\n", "bases": "typing.Generic[~D]"}, "grscheller.fp.woException.MB.__init__": {"fullname": "grscheller.fp.woException.MB.__init__", "modulename": "grscheller.fp.woException", "qualname": "MB.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">,</span> <span class=\"n\">grscheller</span><span class=\"o\">.</span><span class=\"n\">fp</span><span class=\"o\">.</span><span class=\"n\">nothingness</span><span class=\"o\">.</span><span class=\"n\">_NoValue</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">noValue</span></span>)</span>"}, "grscheller.fp.woException.MB.get": {"fullname": "grscheller.fp.woException.MB.get", "modulename": "grscheller.fp.woException", "qualname": "MB.get", "kind": "function", "doc": "<p>Return the contained value if it exists, otherwise an alternate value.</p>\n\n<ul>\n<li>alternate value must me of type ~D</li>\n<li>raises <code>ValueError</code> if an alternate value is not provided but needed</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">alt</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">,</span> <span class=\"n\">grscheller</span><span class=\"o\">.</span><span class=\"n\">fp</span><span class=\"o\">.</span><span class=\"n\">nothingness</span><span class=\"o\">.</span><span class=\"n\">_NoValue</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">noValue</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">,</span> <span class=\"n\">Never</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.woException.MB.map": {"fullname": "grscheller.fp.woException.MB.map", "modulename": "grscheller.fp.woException", "qualname": "MB.map", "kind": "function", "doc": "<p>Map function f over the 0 or 1 elements of this data structure.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">],</span> <span class=\"o\">~</span><span class=\"n\">U</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">grscheller</span><span class=\"o\">.</span><span class=\"n\">fp</span><span class=\"o\">.</span><span class=\"n\">woException</span><span class=\"o\">.</span><span class=\"n\">MB</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">U</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.woException.MB.flatmap": {"fullname": "grscheller.fp.woException.MB.flatmap", "modulename": "grscheller.fp.woException", "qualname": "MB.flatmap", "kind": "function", "doc": "<p>Map MB with function f and flatten.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">],</span> <span class=\"n\">grscheller</span><span class=\"o\">.</span><span class=\"n\">fp</span><span class=\"o\">.</span><span class=\"n\">woException</span><span class=\"o\">.</span><span class=\"n\">MB</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">U</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">grscheller</span><span class=\"o\">.</span><span class=\"n\">fp</span><span class=\"o\">.</span><span class=\"n\">woException</span><span class=\"o\">.</span><span class=\"n\">MB</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">U</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.woException.XOR": {"fullname": "grscheller.fp.woException.XOR", "modulename": "grscheller.fp.woException", "qualname": "XOR", "kind": "class", "doc": "<h4 id=\"either-monad\">Either Monad</h4>\n\n<p>Class semantically containing either a \"left\" or a \"right\" value,\nbut not both.</p>\n\n<ul>\n<li>implements a left biased Either Monad\n<ul>\n<li><code>XOR(left: L, right: R)</code> produces a \"left\" value\n<ul>\n<li>with a default potential \"right\" value</li>\n</ul></li>\n<li><code>XOR(left)</code> produces a \"left\" value</li>\n<li><code>XOR(right=right)</code> produces a \"right\" value</li>\n</ul></li>\n<li>in a Boolean context, returns True if a \"left\", False if a \"right\"</li>\n<li>two <code>XOR</code> objects compare as equal when\n<ul>\n<li>both are left values or both are right values which\n<ul>\n<li>contain the same value or</li>\n<li>whose values compare as equal</li>\n</ul></li>\n</ul></li>\n<li>immutable, an <code>XOR</code> does not change after being created\n<ul>\n<li>immutable semantics, map &amp; flatMap return new instances</li>\n<li>warning: contained values need not be immutable</li>\n<li>warning: not hashable if value or potential right value mutable</li>\n</ul></li>\n<li><code>get</code> and <code>getRight</code> methods can raises <code>ValueError</code> when\n<ul>\n<li>a \"right\" value is needed but a potential \"right\" value was not given</li>\n</ul></li>\n</ul>\n", "bases": "typing.Generic[~L, ~R]"}, "grscheller.fp.woException.XOR.__init__": {"fullname": "grscheller.fp.woException.XOR.__init__", "modulename": "grscheller.fp.woException", "qualname": "XOR.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">left</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"n\">grscheller</span><span class=\"o\">.</span><span class=\"n\">fp</span><span class=\"o\">.</span><span class=\"n\">nothingness</span><span class=\"o\">.</span><span class=\"n\">_NoValue</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">noValue</span>,</span><span class=\"param\">\t<span class=\"n\">right</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">R</span><span class=\"p\">,</span> <span class=\"n\">grscheller</span><span class=\"o\">.</span><span class=\"n\">fp</span><span class=\"o\">.</span><span class=\"n\">nothingness</span><span class=\"o\">.</span><span class=\"n\">_NoValue</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">noValue</span></span>)</span>"}, "grscheller.fp.woException.XOR.get": {"fullname": "grscheller.fp.woException.XOR.get", "modulename": "grscheller.fp.woException", "qualname": "XOR.get", "kind": "function", "doc": "<p>Get value if a Left.</p>\n\n<ul>\n<li>if the XOR is a left, return its value</li>\n<li>otherwise, return alt: L if it is provided</li>\n<li>alternate value must me of type ~L</li>\n<li>raises <code>ValueError</code> if an alternate value is not provided but needed</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">alt</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"n\">grscheller</span><span class=\"o\">.</span><span class=\"n\">fp</span><span class=\"o\">.</span><span class=\"n\">nothingness</span><span class=\"o\">.</span><span class=\"n\">_NoValue</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">noValue</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"n\">Never</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.woException.XOR.getRight": {"fullname": "grscheller.fp.woException.XOR.getRight", "modulename": "grscheller.fp.woException", "qualname": "XOR.getRight", "kind": "function", "doc": "<p>Get value of <code>XOR</code> if a Right, potential right value if a left.</p>\n\n<ul>\n<li>if XOR is a right, return its value\n<ul>\n<li>otherwise return a provided alternate value of type ~R</li>\n</ul></li>\n<li>if XOR is a left, return the potential right value\n<ul>\n<li>raises <code>ValueError</code> if a potential right value was not provided</li>\n</ul></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">alt</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">R</span><span class=\"p\">,</span> <span class=\"n\">grscheller</span><span class=\"o\">.</span><span class=\"n\">fp</span><span class=\"o\">.</span><span class=\"n\">nothingness</span><span class=\"o\">.</span><span class=\"n\">_NoValue</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">noValue</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">R</span><span class=\"p\">,</span> <span class=\"n\">Never</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.woException.XOR.makeRight": {"fullname": "grscheller.fp.woException.XOR.makeRight", "modulename": "grscheller.fp.woException", "qualname": "XOR.makeRight", "kind": "function", "doc": "<p>Make right</p>\n\n<p>Return a new instance transformed into a right <code>XOR</code>. Change the right\nvalue to <code>right</code> if given.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">right</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">R</span><span class=\"p\">,</span> <span class=\"n\">grscheller</span><span class=\"o\">.</span><span class=\"n\">fp</span><span class=\"o\">.</span><span class=\"n\">nothingness</span><span class=\"o\">.</span><span class=\"n\">_NoValue</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">noValue</span></span><span class=\"return-annotation\">) -> <span class=\"n\">grscheller</span><span class=\"o\">.</span><span class=\"n\">fp</span><span class=\"o\">.</span><span class=\"n\">woException</span><span class=\"o\">.</span><span class=\"n\">XOR</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"o\">~</span><span class=\"n\">R</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.woException.XOR.swapRight": {"fullname": "grscheller.fp.woException.XOR.swapRight", "modulename": "grscheller.fp.woException", "qualname": "XOR.swapRight", "kind": "function", "doc": "<p>Swap in a new right value, returns a new instance with a new right\n(or potential right) value.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">right</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">R</span></span><span class=\"return-annotation\">) -> <span class=\"n\">grscheller</span><span class=\"o\">.</span><span class=\"n\">fp</span><span class=\"o\">.</span><span class=\"n\">woException</span><span class=\"o\">.</span><span class=\"n\">XOR</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"o\">~</span><span class=\"n\">R</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.woException.XOR.map": {"fullname": "grscheller.fp.woException.XOR.map", "modulename": "grscheller.fp.woException", "qualname": "XOR.map", "kind": "function", "doc": "<p>Map over if a left value.</p>\n\n<ul>\n<li>if <code>XOR</code> is a \"left\" then map <code>f</code> over its value\n<ul>\n<li>if <code>f</code> successful return a left XOR[S, R]</li>\n<li>if <code>f</code> unsuccessful return right <code>XOR</code>\n<ul>\n<li>swallows any exceptions <code>f</code> may throw</li>\n</ul></li>\n</ul></li>\n<li>if <code>XOR</code> is a \"right\"\n<ul>\n<li>return new <code>XOR(right=self._right): XOR[S, R]</code></li>\n<li>use method mapRight to adjust the returned value</li>\n</ul></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"o\">~</span><span class=\"n\">L</span><span class=\"p\">],</span> <span class=\"o\">~</span><span class=\"n\">U</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">grscheller</span><span class=\"o\">.</span><span class=\"n\">fp</span><span class=\"o\">.</span><span class=\"n\">woException</span><span class=\"o\">.</span><span class=\"n\">XOR</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">U</span><span class=\"p\">,</span> <span class=\"o\">~</span><span class=\"n\">R</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.woException.XOR.mapRight": {"fullname": "grscheller.fp.woException.XOR.mapRight", "modulename": "grscheller.fp.woException", "qualname": "XOR.mapRight", "kind": "function", "doc": "<p>Map over a right or potential right value.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">g</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"o\">~</span><span class=\"n\">R</span><span class=\"p\">],</span> <span class=\"o\">~</span><span class=\"n\">R</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">grscheller</span><span class=\"o\">.</span><span class=\"n\">fp</span><span class=\"o\">.</span><span class=\"n\">woException</span><span class=\"o\">.</span><span class=\"n\">XOR</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"o\">~</span><span class=\"n\">R</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.woException.XOR.flatMap": {"fullname": "grscheller.fp.woException.XOR.flatMap", "modulename": "grscheller.fp.woException", "qualname": "XOR.flatMap", "kind": "function", "doc": "<p>Flatmap - Monadically bind</p>\n\n<ul>\n<li>map over then flatten left values</li>\n<li>propagate right values</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"o\">~</span><span class=\"n\">L</span><span class=\"p\">],</span> <span class=\"n\">grscheller</span><span class=\"o\">.</span><span class=\"n\">fp</span><span class=\"o\">.</span><span class=\"n\">woException</span><span class=\"o\">.</span><span class=\"n\">XOR</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">U</span><span class=\"p\">,</span> <span class=\"o\">~</span><span class=\"n\">R</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">grscheller</span><span class=\"o\">.</span><span class=\"n\">fp</span><span class=\"o\">.</span><span class=\"n\">woException</span><span class=\"o\">.</span><span class=\"n\">XOR</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">U</span><span class=\"p\">,</span> <span class=\"o\">~</span><span class=\"n\">R</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.woException.mb_to_xor": {"fullname": "grscheller.fp.woException.mb_to_xor", "modulename": "grscheller.fp.woException", "qualname": "mb_to_xor", "kind": "function", "doc": "<p>Convert a MB to an XOR.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">m</span><span class=\"p\">:</span> <span class=\"n\">grscheller</span><span class=\"o\">.</span><span class=\"n\">fp</span><span class=\"o\">.</span><span class=\"n\">woException</span><span class=\"o\">.</span><span class=\"n\">MB</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">right</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">R</span></span><span class=\"return-annotation\">) -> <span class=\"n\">grscheller</span><span class=\"o\">.</span><span class=\"n\">fp</span><span class=\"o\">.</span><span class=\"n\">woException</span><span class=\"o\">.</span><span class=\"n\">XOR</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">,</span> <span class=\"o\">~</span><span class=\"n\">R</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "grscheller.fp.woException.xor_to_mb": {"fullname": "grscheller.fp.woException.xor_to_mb", "modulename": "grscheller.fp.woException", "qualname": "xor_to_mb", "kind": "function", "doc": "<p>Convert an XOR to a MB.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">e</span><span class=\"p\">:</span> <span class=\"n\">grscheller</span><span class=\"o\">.</span><span class=\"n\">fp</span><span class=\"o\">.</span><span class=\"n\">woException</span><span class=\"o\">.</span><span class=\"n\">XOR</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">,</span> <span class=\"o\">~</span><span class=\"n\">U</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">grscheller</span><span class=\"o\">.</span><span class=\"n\">fp</span><span class=\"o\">.</span><span class=\"n\">woException</span><span class=\"o\">.</span><span class=\"n\">MB</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">D</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}}, "docInfo": {"grscheller.fp": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 6}, "grscheller.fp.iterables": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 62}, "grscheller.fp.iterables.drop": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 14}, "grscheller.fp.iterables.dropWhile": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 59, "bases": 0, "doc": 14}, "grscheller.fp.iterables.take": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 14}, "grscheller.fp.iterables.takeWhile": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 59, "bases": 0, "doc": 29}, "grscheller.fp.iterables.concat": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 52}, "grscheller.fp.iterables.merge": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 60}, "grscheller.fp.iterables.exhaust": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 24}, "grscheller.fp.iterables.FM": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 3}, "grscheller.fp.iterables.FM.CONCAT": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "grscheller.fp.iterables.FM.MERGE": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "grscheller.fp.iterables.FM.EXHAUST": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 3}, "grscheller.fp.iterables.accumulate": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 97, "bases": 0, "doc": 53}, "grscheller.fp.iterables.foldL": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 112, "bases": 0, "doc": 61}, "grscheller.fp.iterables.foldR": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 112, "bases": 0, "doc": 60}, "grscheller.fp.iterables.foldLsc": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 215, "bases": 0, "doc": 36}, "grscheller.fp.iterables.foldRsc": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 215, "bases": 0, "doc": 49}, "grscheller.fp.nothingness": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 6}, "grscheller.fp.nothingness.noValue": {"qualname": 1, "fullname": 4, "annotation": 5, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "grscheller.fp.woException": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 43}, "grscheller.fp.woException.MB": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 155}, "grscheller.fp.woException.MB.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 3}, "grscheller.fp.woException.MB.get": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 77, "bases": 0, "doc": 42}, "grscheller.fp.woException.MB.map": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 63, "bases": 0, "doc": 16}, "grscheller.fp.woException.MB.flatmap": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 84, "bases": 0, "doc": 10}, "grscheller.fp.woException.XOR": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 229}, "grscheller.fp.woException.XOR.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 100, "bases": 0, "doc": 3}, "grscheller.fp.woException.XOR.get": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 77, "bases": 0, "doc": 57}, "grscheller.fp.woException.XOR.getRight": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 77, "bases": 0, "doc": 77}, "grscheller.fp.woException.XOR.makeRight": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 94, "bases": 0, "doc": 28}, "grscheller.fp.woException.XOR.swapRight": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 57, "bases": 0, "doc": 21}, "grscheller.fp.woException.XOR.map": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 71, "bases": 0, "doc": 108}, "grscheller.fp.woException.XOR.mapRight": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 71, "bases": 0, "doc": 11}, "grscheller.fp.woException.XOR.flatMap": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 100, "bases": 0, "doc": 22}, "grscheller.fp.woException.mb_to_xor": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 87, "bases": 0, "doc": 9}, "grscheller.fp.woException.xor_to_mb": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 9}}, "length": 37, "save": true}, "index": {"qualname": {"root": {"docs": {"grscheller.fp.woException.MB.__init__": {"tf": 1}, "grscheller.fp.woException.XOR.__init__": {"tf": 1}}, "df": 2, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"grscheller.fp.iterables.drop": {"tf": 1}}, "df": 1, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.dropWhile": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.take": {"tf": 1}}, "df": 1, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.takeWhile": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {"grscheller.fp.woException.mb_to_xor": {"tf": 1}, "grscheller.fp.woException.xor_to_mb": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.FM.CONCAT": {"tf": 1}}, "df": 2}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.merge": {"tf": 1}, "grscheller.fp.iterables.FM.MERGE": {"tf": 1}}, "df": 2}}}}, "b": {"docs": {"grscheller.fp.woException.MB": {"tf": 1}, "grscheller.fp.woException.MB.__init__": {"tf": 1}, "grscheller.fp.woException.MB.get": {"tf": 1}, "grscheller.fp.woException.MB.map": {"tf": 1}, "grscheller.fp.woException.MB.flatmap": {"tf": 1}, "grscheller.fp.woException.mb_to_xor": {"tf": 1}, "grscheller.fp.woException.xor_to_mb": {"tf": 1}}, "df": 7}, "a": {"docs": {}, "df": 0, "p": {"docs": {"grscheller.fp.woException.MB.map": {"tf": 1}, "grscheller.fp.woException.XOR.map": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.woException.XOR.mapRight": {"tf": 1}}, "df": 1}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.woException.XOR.makeRight": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables.exhaust": {"tf": 1}, "grscheller.fp.iterables.FM.EXHAUST": {"tf": 1}}, "df": 2}}}}}}}, "f": {"docs": {}, "df": 0, "m": {"docs": {"grscheller.fp.iterables.FM": {"tf": 1}, "grscheller.fp.iterables.FM.CONCAT": {"tf": 1}, "grscheller.fp.iterables.FM.MERGE": {"tf": 1}, "grscheller.fp.iterables.FM.EXHAUST": {"tf": 1}}, "df": 4}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.iterables.foldL": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "c": {"docs": {"grscheller.fp.iterables.foldLsc": {"tf": 1}}, "df": 1}}}, "r": {"docs": {"grscheller.fp.iterables.foldR": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "c": {"docs": {"grscheller.fp.iterables.foldRsc": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"grscheller.fp.woException.MB.flatmap": {"tf": 1}, "grscheller.fp.woException.XOR.flatMap": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.accumulate": {"tf": 1}}, "df": 1}}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.nothingness.noValue": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.woException.MB.__init__": {"tf": 1}, "grscheller.fp.woException.XOR.__init__": {"tf": 1}}, "df": 2}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.woException.MB.get": {"tf": 1}, "grscheller.fp.woException.XOR.get": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.woException.XOR.getRight": {"tf": 1}}, "df": 1}}}}}}}}, "x": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.woException.XOR": {"tf": 1}, "grscheller.fp.woException.XOR.__init__": {"tf": 1}, "grscheller.fp.woException.XOR.get": {"tf": 1}, "grscheller.fp.woException.XOR.getRight": {"tf": 1}, "grscheller.fp.woException.XOR.makeRight": {"tf": 1}, "grscheller.fp.woException.XOR.swapRight": {"tf": 1}, "grscheller.fp.woException.XOR.map": {"tf": 1}, "grscheller.fp.woException.XOR.mapRight": {"tf": 1}, "grscheller.fp.woException.XOR.flatMap": {"tf": 1}, "grscheller.fp.woException.mb_to_xor": {"tf": 1}, "grscheller.fp.woException.xor_to_mb": {"tf": 1}}, "df": 11}}}, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.woException.XOR.swapRight": {"tf": 1}}, "df": 1}}}}}}}}}}}, "fullname": {"root": {"docs": {"grscheller.fp.woException.MB.__init__": {"tf": 1}, "grscheller.fp.woException.XOR.__init__": {"tf": 1}}, "df": 2, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp": {"tf": 1}, "grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.iterables.drop": {"tf": 1}, "grscheller.fp.iterables.dropWhile": {"tf": 1}, "grscheller.fp.iterables.take": {"tf": 1}, "grscheller.fp.iterables.takeWhile": {"tf": 1}, "grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1}, "grscheller.fp.iterables.exhaust": {"tf": 1}, "grscheller.fp.iterables.FM": {"tf": 1}, "grscheller.fp.iterables.FM.CONCAT": {"tf": 1}, "grscheller.fp.iterables.FM.MERGE": {"tf": 1}, "grscheller.fp.iterables.FM.EXHAUST": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.iterables.foldL": {"tf": 1}, "grscheller.fp.iterables.foldR": {"tf": 1}, "grscheller.fp.iterables.foldLsc": {"tf": 1}, "grscheller.fp.iterables.foldRsc": {"tf": 1}, "grscheller.fp.nothingness": {"tf": 1}, "grscheller.fp.nothingness.noValue": {"tf": 1}, "grscheller.fp.woException": {"tf": 1}, "grscheller.fp.woException.MB": {"tf": 1}, "grscheller.fp.woException.MB.__init__": {"tf": 1}, "grscheller.fp.woException.MB.get": {"tf": 1}, "grscheller.fp.woException.MB.map": {"tf": 1}, "grscheller.fp.woException.MB.flatmap": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1}, "grscheller.fp.woException.XOR.__init__": {"tf": 1}, "grscheller.fp.woException.XOR.get": {"tf": 1}, "grscheller.fp.woException.XOR.getRight": {"tf": 1}, "grscheller.fp.woException.XOR.makeRight": {"tf": 1}, "grscheller.fp.woException.XOR.swapRight": {"tf": 1}, "grscheller.fp.woException.XOR.map": {"tf": 1}, "grscheller.fp.woException.XOR.mapRight": {"tf": 1}, "grscheller.fp.woException.XOR.flatMap": {"tf": 1}, "grscheller.fp.woException.mb_to_xor": {"tf": 1}, "grscheller.fp.woException.xor_to_mb": {"tf": 1}}, "df": 37}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.woException.MB.get": {"tf": 1}, "grscheller.fp.woException.XOR.get": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.woException.XOR.getRight": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "p": {"docs": {"grscheller.fp": {"tf": 1}, "grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.iterables.drop": {"tf": 1}, "grscheller.fp.iterables.dropWhile": {"tf": 1}, "grscheller.fp.iterables.take": {"tf": 1}, "grscheller.fp.iterables.takeWhile": {"tf": 1}, "grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1}, "grscheller.fp.iterables.exhaust": {"tf": 1}, "grscheller.fp.iterables.FM": {"tf": 1}, "grscheller.fp.iterables.FM.CONCAT": {"tf": 1}, "grscheller.fp.iterables.FM.MERGE": {"tf": 1}, "grscheller.fp.iterables.FM.EXHAUST": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.iterables.foldL": {"tf": 1}, "grscheller.fp.iterables.foldR": {"tf": 1}, "grscheller.fp.iterables.foldLsc": {"tf": 1}, "grscheller.fp.iterables.foldRsc": {"tf": 1}, "grscheller.fp.nothingness": {"tf": 1}, "grscheller.fp.nothingness.noValue": {"tf": 1}, "grscheller.fp.woException": {"tf": 1}, "grscheller.fp.woException.MB": {"tf": 1}, "grscheller.fp.woException.MB.__init__": {"tf": 1}, "grscheller.fp.woException.MB.get": {"tf": 1}, "grscheller.fp.woException.MB.map": {"tf": 1}, "grscheller.fp.woException.MB.flatmap": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1}, "grscheller.fp.woException.XOR.__init__": {"tf": 1}, "grscheller.fp.woException.XOR.get": {"tf": 1}, "grscheller.fp.woException.XOR.getRight": {"tf": 1}, "grscheller.fp.woException.XOR.makeRight": {"tf": 1}, "grscheller.fp.woException.XOR.swapRight": {"tf": 1}, "grscheller.fp.woException.XOR.map": {"tf": 1}, "grscheller.fp.woException.XOR.mapRight": {"tf": 1}, "grscheller.fp.woException.XOR.flatMap": {"tf": 1}, "grscheller.fp.woException.mb_to_xor": {"tf": 1}, "grscheller.fp.woException.xor_to_mb": {"tf": 1}}, "df": 37}, "m": {"docs": {"grscheller.fp.iterables.FM": {"tf": 1}, "grscheller.fp.iterables.FM.CONCAT": {"tf": 1}, "grscheller.fp.iterables.FM.MERGE": {"tf": 1}, "grscheller.fp.iterables.FM.EXHAUST": {"tf": 1}}, "df": 4}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.iterables.foldL": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "c": {"docs": {"grscheller.fp.iterables.foldLsc": {"tf": 1}}, "df": 1}}}, "r": {"docs": {"grscheller.fp.iterables.foldR": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "c": {"docs": {"grscheller.fp.iterables.foldRsc": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"grscheller.fp.woException.MB.flatmap": {"tf": 1}, "grscheller.fp.woException.XOR.flatMap": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.iterables.drop": {"tf": 1}, "grscheller.fp.iterables.dropWhile": {"tf": 1}, "grscheller.fp.iterables.take": {"tf": 1}, "grscheller.fp.iterables.takeWhile": {"tf": 1}, "grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1}, "grscheller.fp.iterables.exhaust": {"tf": 1}, "grscheller.fp.iterables.FM": {"tf": 1}, "grscheller.fp.iterables.FM.CONCAT": {"tf": 1}, "grscheller.fp.iterables.FM.MERGE": {"tf": 1}, "grscheller.fp.iterables.FM.EXHAUST": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.iterables.foldL": {"tf": 1}, "grscheller.fp.iterables.foldR": {"tf": 1}, "grscheller.fp.iterables.foldLsc": {"tf": 1}, "grscheller.fp.iterables.foldRsc": {"tf": 1}}, "df": 17}}}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.woException.MB.__init__": {"tf": 1}, "grscheller.fp.woException.XOR.__init__": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"grscheller.fp.iterables.drop": {"tf": 1}}, "df": 1, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.dropWhile": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.take": {"tf": 1}}, "df": 1, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.takeWhile": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {"grscheller.fp.woException.mb_to_xor": {"tf": 1}, "grscheller.fp.woException.xor_to_mb": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.FM.CONCAT": {"tf": 1}}, "df": 2}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.merge": {"tf": 1}, "grscheller.fp.iterables.FM.MERGE": {"tf": 1}}, "df": 2}}}}, "b": {"docs": {"grscheller.fp.woException.MB": {"tf": 1}, "grscheller.fp.woException.MB.__init__": {"tf": 1}, "grscheller.fp.woException.MB.get": {"tf": 1}, "grscheller.fp.woException.MB.map": {"tf": 1}, "grscheller.fp.woException.MB.flatmap": {"tf": 1}, "grscheller.fp.woException.mb_to_xor": {"tf": 1}, "grscheller.fp.woException.xor_to_mb": {"tf": 1}}, "df": 7}, "a": {"docs": {}, "df": 0, "p": {"docs": {"grscheller.fp.woException.MB.map": {"tf": 1}, "grscheller.fp.woException.XOR.map": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.woException.XOR.mapRight": {"tf": 1}}, "df": 1}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.woException.XOR.makeRight": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables.exhaust": {"tf": 1}, "grscheller.fp.iterables.FM.EXHAUST": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.accumulate": {"tf": 1}}, "df": 1}}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.nothingness": {"tf": 1}, "grscheller.fp.nothingness.noValue": {"tf": 1}}, "df": 2}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.nothingness.noValue": {"tf": 1}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.woException": {"tf": 1}, "grscheller.fp.woException.MB": {"tf": 1}, "grscheller.fp.woException.MB.__init__": {"tf": 1}, "grscheller.fp.woException.MB.get": {"tf": 1}, "grscheller.fp.woException.MB.map": {"tf": 1}, "grscheller.fp.woException.MB.flatmap": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1}, "grscheller.fp.woException.XOR.__init__": {"tf": 1}, "grscheller.fp.woException.XOR.get": {"tf": 1}, "grscheller.fp.woException.XOR.getRight": {"tf": 1}, "grscheller.fp.woException.XOR.makeRight": {"tf": 1}, "grscheller.fp.woException.XOR.swapRight": {"tf": 1}, "grscheller.fp.woException.XOR.map": {"tf": 1}, "grscheller.fp.woException.XOR.mapRight": {"tf": 1}, "grscheller.fp.woException.XOR.flatMap": {"tf": 1}, "grscheller.fp.woException.mb_to_xor": {"tf": 1}, "grscheller.fp.woException.xor_to_mb": {"tf": 1}}, "df": 17}}}}}}}}}}}, "x": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.woException.XOR": {"tf": 1}, "grscheller.fp.woException.XOR.__init__": {"tf": 1}, "grscheller.fp.woException.XOR.get": {"tf": 1}, "grscheller.fp.woException.XOR.getRight": {"tf": 1}, "grscheller.fp.woException.XOR.makeRight": {"tf": 1}, "grscheller.fp.woException.XOR.swapRight": {"tf": 1}, "grscheller.fp.woException.XOR.map": {"tf": 1}, "grscheller.fp.woException.XOR.mapRight": {"tf": 1}, "grscheller.fp.woException.XOR.flatMap": {"tf": 1}, "grscheller.fp.woException.mb_to_xor": {"tf": 1}, "grscheller.fp.woException.xor_to_mb": {"tf": 1}}, "df": 11}}}, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.woException.XOR.swapRight": {"tf": 1}}, "df": 1}}}}}}}}}}}, "annotation": {"root": {"docs": {"grscheller.fp.nothingness.noValue": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.nothingness.noValue": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "p": {"docs": {"grscheller.fp.nothingness.noValue": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.nothingness.noValue": {"tf": 1}}, "df": 1}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.nothingness.noValue": {"tf": 1}}, "df": 1}}}}}}}}}, "default_value": {"root": {"1": {"docs": {"grscheller.fp.iterables.FM.CONCAT": {"tf": 1}}, "df": 1}, "2": {"docs": {"grscheller.fp.iterables.FM.MERGE": {"tf": 1}}, "df": 1}, "3": {"docs": {"grscheller.fp.iterables.FM.EXHAUST": {"tf": 1}}, "df": 1}, "docs": {"grscheller.fp.iterables.FM.CONCAT": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.FM.MERGE": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.FM.EXHAUST": {"tf": 1.4142135623730951}}, "df": 3, "l": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables.FM.CONCAT": {"tf": 1}, "grscheller.fp.iterables.FM.MERGE": {"tf": 1}, "grscheller.fp.iterables.FM.EXHAUST": {"tf": 1}}, "df": 3}}, "f": {"docs": {}, "df": 0, "m": {"docs": {"grscheller.fp.iterables.FM.CONCAT": {"tf": 1}, "grscheller.fp.iterables.FM.MERGE": {"tf": 1}, "grscheller.fp.iterables.FM.EXHAUST": {"tf": 1}}, "df": 3}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables.FM.CONCAT": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables.FM.CONCAT": {"tf": 1}, "grscheller.fp.iterables.FM.MERGE": {"tf": 1}, "grscheller.fp.iterables.FM.EXHAUST": {"tf": 1}}, "df": 3}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.FM.MERGE": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables.FM.EXHAUST": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.nothingness.noValue": {"tf": 1}}, "df": 1}}}}}}}}}, "signature": {"root": {"docs": {"grscheller.fp.iterables.drop": {"tf": 6.164414002968976}, "grscheller.fp.iterables.dropWhile": {"tf": 7.0710678118654755}, "grscheller.fp.iterables.take": {"tf": 6.164414002968976}, "grscheller.fp.iterables.takeWhile": {"tf": 7.0710678118654755}, "grscheller.fp.iterables.concat": {"tf": 5.656854249492381}, "grscheller.fp.iterables.merge": {"tf": 6.782329983125268}, "grscheller.fp.iterables.exhaust": {"tf": 5.656854249492381}, "grscheller.fp.iterables.accumulate": {"tf": 9.1104335791443}, "grscheller.fp.iterables.foldL": {"tf": 9.746794344808963}, "grscheller.fp.iterables.foldR": {"tf": 9.746794344808963}, "grscheller.fp.iterables.foldLsc": {"tf": 13.379088160259652}, "grscheller.fp.iterables.foldRsc": {"tf": 13.379088160259652}, "grscheller.fp.woException.MB.__init__": {"tf": 6.557438524302}, "grscheller.fp.woException.MB.get": {"tf": 8.06225774829855}, "grscheller.fp.woException.MB.map": {"tf": 7.280109889280518}, "grscheller.fp.woException.MB.flatmap": {"tf": 8.366600265340756}, "grscheller.fp.woException.XOR.__init__": {"tf": 9.16515138991168}, "grscheller.fp.woException.XOR.get": {"tf": 8.06225774829855}, "grscheller.fp.woException.XOR.getRight": {"tf": 8.06225774829855}, "grscheller.fp.woException.XOR.makeRight": {"tf": 8.888194417315589}, "grscheller.fp.woException.XOR.swapRight": {"tf": 6.928203230275509}, "grscheller.fp.woException.XOR.map": {"tf": 7.745966692414834}, "grscheller.fp.woException.XOR.mapRight": {"tf": 7.745966692414834}, "grscheller.fp.woException.XOR.flatMap": {"tf": 9.16515138991168}, "grscheller.fp.woException.mb_to_xor": {"tf": 8.54400374531753}, "grscheller.fp.woException.xor_to_mb": {"tf": 7.874007874011811}}, "df": 26, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.drop": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.dropWhile": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.take": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.takeWhile": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1}, "grscheller.fp.iterables.exhaust": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.foldL": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.foldR": {"tf": 1}, "grscheller.fp.iterables.foldLsc": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.foldRsc": {"tf": 1.4142135623730951}}, "df": 12, "s": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1}, "grscheller.fp.iterables.exhaust": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.iterables.drop": {"tf": 1}, "grscheller.fp.iterables.dropWhile": {"tf": 1}, "grscheller.fp.iterables.take": {"tf": 1}, "grscheller.fp.iterables.takeWhile": {"tf": 1}, "grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1}, "grscheller.fp.iterables.exhaust": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}}, "df": 8}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables.drop": {"tf": 1}, "grscheller.fp.iterables.take": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.iterables.foldL": {"tf": 1}, "grscheller.fp.iterables.foldR": {"tf": 1}, "grscheller.fp.iterables.foldLsc": {"tf": 1}, "grscheller.fp.iterables.foldRsc": {"tf": 1}}, "df": 5}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.foldLsc": {"tf": 1}, "grscheller.fp.iterables.foldRsc": {"tf": 1}}, "df": 2}}}}}}, "d": {"docs": {"grscheller.fp.iterables.drop": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.dropWhile": {"tf": 1.7320508075688772}, "grscheller.fp.iterables.take": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.takeWhile": {"tf": 1.7320508075688772}, "grscheller.fp.iterables.concat": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.merge": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.exhaust": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.accumulate": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.foldL": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.foldR": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.foldLsc": {"tf": 1.7320508075688772}, "grscheller.fp.iterables.foldRsc": {"tf": 1.7320508075688772}, "grscheller.fp.woException.MB.__init__": {"tf": 1}, "grscheller.fp.woException.MB.get": {"tf": 1.4142135623730951}, "grscheller.fp.woException.MB.map": {"tf": 1}, "grscheller.fp.woException.MB.flatmap": {"tf": 1}, "grscheller.fp.woException.mb_to_xor": {"tf": 1.4142135623730951}, "grscheller.fp.woException.xor_to_mb": {"tf": 1.4142135623730951}}, "df": 18}, "n": {"docs": {"grscheller.fp.iterables.drop": {"tf": 1}, "grscheller.fp.iterables.take": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.iterables.foldL": {"tf": 1}, "grscheller.fp.iterables.foldR": {"tf": 1}, "grscheller.fp.iterables.foldLsc": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.foldRsc": {"tf": 1.4142135623730951}}, "df": 5}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.woException.MB.__init__": {"tf": 1}, "grscheller.fp.woException.MB.get": {"tf": 1}, "grscheller.fp.woException.XOR.__init__": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR.get": {"tf": 1}, "grscheller.fp.woException.XOR.getRight": {"tf": 1}, "grscheller.fp.woException.XOR.makeRight": {"tf": 1}}, "df": 6}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.woException.MB.__init__": {"tf": 1.4142135623730951}, "grscheller.fp.woException.MB.get": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR.__init__": {"tf": 2}, "grscheller.fp.woException.XOR.get": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR.getRight": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR.makeRight": {"tf": 1.4142135623730951}}, "df": 6}}}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.woException.MB.get": {"tf": 1}, "grscheller.fp.woException.XOR.get": {"tf": 1}, "grscheller.fp.woException.XOR.getRight": {"tf": 1}}, "df": 3}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.iterables.dropWhile": {"tf": 1}, "grscheller.fp.iterables.takeWhile": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.iterables.merge": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.dropWhile": {"tf": 1}, "grscheller.fp.iterables.takeWhile": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.iterables.foldL": {"tf": 1}, "grscheller.fp.iterables.foldR": {"tf": 1}, "grscheller.fp.iterables.foldLsc": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.foldRsc": {"tf": 1.4142135623730951}, "grscheller.fp.woException.MB.map": {"tf": 1}, "grscheller.fp.woException.MB.flatmap": {"tf": 1}, "grscheller.fp.woException.XOR.map": {"tf": 1}, "grscheller.fp.woException.XOR.mapRight": {"tf": 1}, "grscheller.fp.woException.XOR.flatMap": {"tf": 1}}, "df": 12}}}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.iterables.dropWhile": {"tf": 1}, "grscheller.fp.iterables.takeWhile": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1}}, "df": 3}}}}, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.iterables.merge": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {"grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.iterables.foldL": {"tf": 1}, "grscheller.fp.iterables.foldR": {"tf": 1}, "grscheller.fp.iterables.foldLsc": {"tf": 1}, "grscheller.fp.iterables.foldRsc": {"tf": 1}, "grscheller.fp.woException.MB.map": {"tf": 1}, "grscheller.fp.woException.MB.flatmap": {"tf": 1}, "grscheller.fp.woException.XOR.map": {"tf": 1}, "grscheller.fp.woException.XOR.flatMap": {"tf": 1}}, "df": 9, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.merge": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {"grscheller.fp.iterables.foldL": {"tf": 1}, "grscheller.fp.iterables.foldR": {"tf": 1}, "grscheller.fp.iterables.foldLsc": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.foldRsc": {"tf": 1.4142135623730951}, "grscheller.fp.woException.MB.__init__": {"tf": 1}, "grscheller.fp.woException.MB.get": {"tf": 1}, "grscheller.fp.woException.MB.map": {"tf": 1}, "grscheller.fp.woException.MB.flatmap": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR.__init__": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR.get": {"tf": 1}, "grscheller.fp.woException.XOR.getRight": {"tf": 1}, "grscheller.fp.woException.XOR.makeRight": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR.swapRight": {"tf": 1}, "grscheller.fp.woException.XOR.map": {"tf": 1}, "grscheller.fp.woException.XOR.mapRight": {"tf": 1}, "grscheller.fp.woException.XOR.flatMap": {"tf": 1.4142135623730951}, "grscheller.fp.woException.mb_to_xor": {"tf": 1.4142135623730951}, "grscheller.fp.woException.xor_to_mb": {"tf": 1.4142135623730951}}, "df": 18}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.iterables.foldLsc": {"tf": 1}, "grscheller.fp.iterables.foldRsc": {"tf": 1}}, "df": 2}}}}}}}}, "l": {"docs": {"grscheller.fp.iterables.accumulate": {"tf": 2}, "grscheller.fp.iterables.foldL": {"tf": 2}, "grscheller.fp.iterables.foldLsc": {"tf": 2}, "grscheller.fp.woException.XOR.__init__": {"tf": 1}, "grscheller.fp.woException.XOR.get": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR.makeRight": {"tf": 1}, "grscheller.fp.woException.XOR.swapRight": {"tf": 1}, "grscheller.fp.woException.XOR.map": {"tf": 1}, "grscheller.fp.woException.XOR.mapRight": {"tf": 1}, "grscheller.fp.woException.XOR.flatMap": {"tf": 1}}, "df": 10, "t": {"docs": {"grscheller.fp.iterables.foldLsc": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.foldRsc": {"tf": 1.4142135623730951}}, "df": 2}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {"grscheller.fp.iterables.foldLsc": {"tf": 1}, "grscheller.fp.iterables.foldRsc": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.woException.XOR.__init__": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.iterables.foldL": {"tf": 1}, "grscheller.fp.iterables.foldR": {"tf": 1}, "grscheller.fp.iterables.foldLsc": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.foldRsc": {"tf": 1.4142135623730951}}, "df": 5}}}}}}}}, "g": {"docs": {"grscheller.fp.woException.XOR.mapRight": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.iterables.foldL": {"tf": 1}, "grscheller.fp.iterables.foldR": {"tf": 1}, "grscheller.fp.iterables.foldLsc": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.foldRsc": {"tf": 1.4142135623730951}, "grscheller.fp.woException.MB.__init__": {"tf": 1}, "grscheller.fp.woException.MB.get": {"tf": 1}, "grscheller.fp.woException.MB.map": {"tf": 1}, "grscheller.fp.woException.MB.flatmap": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR.__init__": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR.get": {"tf": 1}, "grscheller.fp.woException.XOR.getRight": {"tf": 1}, "grscheller.fp.woException.XOR.makeRight": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR.swapRight": {"tf": 1}, "grscheller.fp.woException.XOR.map": {"tf": 1}, "grscheller.fp.woException.XOR.mapRight": {"tf": 1}, "grscheller.fp.woException.XOR.flatMap": {"tf": 1.4142135623730951}, "grscheller.fp.woException.mb_to_xor": {"tf": 1.4142135623730951}, "grscheller.fp.woException.xor_to_mb": {"tf": 1.4142135623730951}}, "df": 18}}}}}}}}}, "t": {"docs": {"grscheller.fp.iterables.foldLsc": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.foldRsc": {"tf": 1.4142135623730951}}, "df": 2}}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.iterables.foldL": {"tf": 1}, "grscheller.fp.iterables.foldR": {"tf": 1}, "grscheller.fp.iterables.foldLsc": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.foldRsc": {"tf": 1.4142135623730951}, "grscheller.fp.woException.MB.map": {"tf": 1}, "grscheller.fp.woException.MB.flatmap": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR.makeRight": {"tf": 1}, "grscheller.fp.woException.XOR.swapRight": {"tf": 1}, "grscheller.fp.woException.XOR.map": {"tf": 1}, "grscheller.fp.woException.XOR.mapRight": {"tf": 1}, "grscheller.fp.woException.XOR.flatMap": {"tf": 1.4142135623730951}, "grscheller.fp.woException.mb_to_xor": {"tf": 1.4142135623730951}, "grscheller.fp.woException.xor_to_mb": {"tf": 1.4142135623730951}}, "df": 13}}}}}}}}}}}, "m": {"docs": {"grscheller.fp.woException.mb_to_xor": {"tf": 1}}, "df": 1, "b": {"docs": {"grscheller.fp.iterables.foldL": {"tf": 1}, "grscheller.fp.iterables.foldR": {"tf": 1}, "grscheller.fp.iterables.foldLsc": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.foldRsc": {"tf": 1.4142135623730951}, "grscheller.fp.woException.MB.map": {"tf": 1}, "grscheller.fp.woException.MB.flatmap": {"tf": 1.4142135623730951}, "grscheller.fp.woException.mb_to_xor": {"tf": 1}, "grscheller.fp.woException.xor_to_mb": {"tf": 1}}, "df": 8}}, "r": {"docs": {"grscheller.fp.iterables.foldR": {"tf": 2}, "grscheller.fp.iterables.foldRsc": {"tf": 2}, "grscheller.fp.woException.XOR.__init__": {"tf": 1}, "grscheller.fp.woException.XOR.getRight": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR.makeRight": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR.swapRight": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR.map": {"tf": 1}, "grscheller.fp.woException.XOR.mapRight": {"tf": 1.7320508075688772}, "grscheller.fp.woException.XOR.flatMap": {"tf": 1.4142135623730951}, "grscheller.fp.woException.mb_to_xor": {"tf": 1.4142135623730951}}, "df": 10, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.foldR": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.woException.XOR.__init__": {"tf": 1}, "grscheller.fp.woException.XOR.makeRight": {"tf": 1}, "grscheller.fp.woException.XOR.swapRight": {"tf": 1}, "grscheller.fp.woException.mb_to_xor": {"tf": 1}}, "df": 4}}}}}, "s": {"docs": {"grscheller.fp.iterables.foldLsc": {"tf": 1.7320508075688772}, "grscheller.fp.iterables.foldRsc": {"tf": 1.7320508075688772}}, "df": 2, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.iterables.foldLsc": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.iterables.foldRsc": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"grscheller.fp.woException.MB.get": {"tf": 1}, "grscheller.fp.woException.MB.map": {"tf": 1}, "grscheller.fp.woException.MB.flatmap": {"tf": 1}, "grscheller.fp.woException.XOR.get": {"tf": 1}, "grscheller.fp.woException.XOR.getRight": {"tf": 1}, "grscheller.fp.woException.XOR.makeRight": {"tf": 1}, "grscheller.fp.woException.XOR.swapRight": {"tf": 1}, "grscheller.fp.woException.XOR.map": {"tf": 1}, "grscheller.fp.woException.XOR.mapRight": {"tf": 1}, "grscheller.fp.woException.XOR.flatMap": {"tf": 1}}, "df": 10}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.woException.MB.__init__": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {"grscheller.fp.woException.MB.map": {"tf": 1.4142135623730951}, "grscheller.fp.woException.MB.flatmap": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR.map": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR.flatMap": {"tf": 1.4142135623730951}, "grscheller.fp.woException.xor_to_mb": {"tf": 1}}, "df": 5, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.woException.MB.__init__": {"tf": 1}, "grscheller.fp.woException.MB.get": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR.__init__": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR.get": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR.getRight": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR.makeRight": {"tf": 1}}, "df": 6}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.woException.MB.get": {"tf": 1}, "grscheller.fp.woException.XOR.get": {"tf": 1}, "grscheller.fp.woException.XOR.getRight": {"tf": 1}}, "df": 3}}}, "x": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.woException.XOR.makeRight": {"tf": 1}, "grscheller.fp.woException.XOR.swapRight": {"tf": 1}, "grscheller.fp.woException.XOR.map": {"tf": 1}, "grscheller.fp.woException.XOR.mapRight": {"tf": 1}, "grscheller.fp.woException.XOR.flatMap": {"tf": 1.4142135623730951}, "grscheller.fp.woException.mb_to_xor": {"tf": 1}, "grscheller.fp.woException.xor_to_mb": {"tf": 1}}, "df": 7}}}, "e": {"docs": {"grscheller.fp.woException.xor_to_mb": {"tf": 1}}, "df": 1}}}, "bases": {"root": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"grscheller.fp.iterables.FM": {"tf": 1.4142135623730951}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.woException.MB": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1}}, "df": 2}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "~": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.woException.MB": {"tf": 1}}, "df": 1}, "l": {"docs": {"grscheller.fp.woException.XOR": {"tf": 1}}, "df": 1}}}}}}}}}}, "r": {"docs": {"grscheller.fp.woException.XOR": {"tf": 1}}, "df": 1}}}, "doc": {"root": {"0": {"docs": {"grscheller.fp.woException.MB.map": {"tf": 1}}, "df": 1}, "1": {"docs": {"grscheller.fp.woException.MB.map": {"tf": 1}}, "df": 1}, "docs": {"grscheller.fp": {"tf": 1.4142135623730951}, "grscheller.fp.iterables": {"tf": 4.795831523312719}, "grscheller.fp.iterables.drop": {"tf": 2.6457513110645907}, "grscheller.fp.iterables.dropWhile": {"tf": 2.23606797749979}, "grscheller.fp.iterables.take": {"tf": 2.6457513110645907}, "grscheller.fp.iterables.takeWhile": {"tf": 3.3166247903554}, "grscheller.fp.iterables.concat": {"tf": 3.872983346207417}, "grscheller.fp.iterables.merge": {"tf": 4.123105625617661}, "grscheller.fp.iterables.exhaust": {"tf": 3}, "grscheller.fp.iterables.FM": {"tf": 1.7320508075688772}, "grscheller.fp.iterables.FM.CONCAT": {"tf": 1.7320508075688772}, "grscheller.fp.iterables.FM.MERGE": {"tf": 1.7320508075688772}, "grscheller.fp.iterables.FM.EXHAUST": {"tf": 1.7320508075688772}, "grscheller.fp.iterables.accumulate": {"tf": 4}, "grscheller.fp.iterables.foldL": {"tf": 4}, "grscheller.fp.iterables.foldR": {"tf": 4}, "grscheller.fp.iterables.foldLsc": {"tf": 4.123105625617661}, "grscheller.fp.iterables.foldRsc": {"tf": 4.358898943540674}, "grscheller.fp.nothingness": {"tf": 1.4142135623730951}, "grscheller.fp.nothingness.noValue": {"tf": 1.7320508075688772}, "grscheller.fp.woException": {"tf": 4.47213595499958}, "grscheller.fp.woException.MB": {"tf": 7.745966692414834}, "grscheller.fp.woException.MB.__init__": {"tf": 1.7320508075688772}, "grscheller.fp.woException.MB.get": {"tf": 3.605551275463989}, "grscheller.fp.woException.MB.map": {"tf": 1.7320508075688772}, "grscheller.fp.woException.MB.flatmap": {"tf": 1.7320508075688772}, "grscheller.fp.woException.XOR": {"tf": 9.219544457292887}, "grscheller.fp.woException.XOR.__init__": {"tf": 1.7320508075688772}, "grscheller.fp.woException.XOR.get": {"tf": 4.123105625617661}, "grscheller.fp.woException.XOR.getRight": {"tf": 5.196152422706632}, "grscheller.fp.woException.XOR.makeRight": {"tf": 3}, "grscheller.fp.woException.XOR.swapRight": {"tf": 1.7320508075688772}, "grscheller.fp.woException.XOR.map": {"tf": 7.0710678118654755}, "grscheller.fp.woException.XOR.mapRight": {"tf": 1.7320508075688772}, "grscheller.fp.woException.XOR.flatMap": {"tf": 3.1622776601683795}, "grscheller.fp.woException.mb_to_xor": {"tf": 1.7320508075688772}, "grscheller.fp.woException.xor_to_mb": {"tf": 1.7320508075688772}}, "df": 37, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "c": {"docs": {"grscheller.fp": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.iterables": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.woException.MB.get": {"tf": 1}, "grscheller.fp.woException.XOR.get": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR.getRight": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.woException.XOR": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.woException.XOR.flatMap": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.dropWhile": {"tf": 1}, "grscheller.fp.iterables.takeWhile": {"tf": 1}}, "df": 2}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1}}, "df": 1, "s": {"docs": {"grscheller.fp.iterables.merge": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.iterables.foldLsc": {"tf": 1}, "grscheller.fp.iterables.foldRsc": {"tf": 1}}, "df": 2}}}}}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.iterables.takeWhile": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1.7320508075688772}, "grscheller.fp.woException.XOR.getRight": {"tf": 1.7320508075688772}, "grscheller.fp.woException.XOR.swapRight": {"tf": 1}, "grscheller.fp.woException.XOR.mapRight": {"tf": 1}}, "df": 5, "l": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.woException.MB": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.woException.MB": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}}, "df": 2}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.foldLsc": {"tf": 1}, "grscheller.fp.iterables.foldRsc": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.iterables.merge": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {"grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.iterables.foldL": {"tf": 1}, "grscheller.fp.iterables.foldR": {"tf": 1}, "grscheller.fp.woException.MB.map": {"tf": 1}, "grscheller.fp.woException.MB.flatmap": {"tf": 1}, "grscheller.fp.woException.XOR.map": {"tf": 2}}, "df": 6, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.iterables.foldL": {"tf": 1}, "grscheller.fp.iterables.foldR": {"tf": 1}, "grscheller.fp.woException.MB.map": {"tf": 1}, "grscheller.fp.woException.MB.flatmap": {"tf": 1}}, "df": 5, "a": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp": {"tf": 1}, "grscheller.fp.woException": {"tf": 1}}, "df": 2}}, "s": {"docs": {"grscheller.fp.iterables": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.iterables": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {"grscheller.fp.iterables.foldLsc": {"tf": 1}, "grscheller.fp.iterables.foldRsc": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"grscheller.fp.iterables.foldL": {"tf": 1}, "grscheller.fp.iterables.foldR": {"tf": 1}}, "df": 2}, "l": {"docs": {"grscheller.fp.iterables.foldLsc": {"tf": 1}}, "df": 1}, "r": {"docs": {"grscheller.fp.iterables.foldRsc": {"tf": 1}}, "df": 1}}}, "r": {"docs": {"grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.iterables.foldL": {"tf": 1}, "grscheller.fp.iterables.foldR": {"tf": 1}, "grscheller.fp.iterables.foldLsc": {"tf": 1}, "grscheller.fp.iterables.foldRsc": {"tf": 1}}, "df": 6}, "o": {"docs": {"grscheller.fp.iterables": {"tf": 1.7320508075688772}}, "df": 1}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"grscheller.fp.iterables.drop": {"tf": 1}, "grscheller.fp.iterables.dropWhile": {"tf": 1}, "grscheller.fp.iterables.take": {"tf": 1}, "grscheller.fp.iterables.takeWhile": {"tf": 1}, "grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1}}, "df": 6}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.iterables.accumulate": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"grscheller.fp.woException.MB": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1}, "grscheller.fp.woException.XOR.flatMap": {"tf": 1}}, "df": 3}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.woException.MB.flatmap": {"tf": 1}, "grscheller.fp.woException.XOR.flatMap": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {"grscheller.fp.iterables.foldL": {"tf": 1}, "grscheller.fp.iterables.foldR": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.woException.XOR": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"grscheller.fp.iterables": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.take": {"tf": 1}, "grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.iterables.foldR": {"tf": 1}, "grscheller.fp.iterables.foldLsc": {"tf": 1}, "grscheller.fp.iterables.foldRsc": {"tf": 1}, "grscheller.fp.woException": {"tf": 1}, "grscheller.fp.woException.XOR.makeRight": {"tf": 1}, "grscheller.fp.woException.XOR.map": {"tf": 1}, "grscheller.fp.woException.mb_to_xor": {"tf": 1}, "grscheller.fp.woException.xor_to_mb": {"tf": 1}}, "df": 12, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1}, "grscheller.fp.iterables.exhaust": {"tf": 1}}, "df": 3}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.iterables": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables": {"tf": 1}}, "df": 1}}, "e": {"docs": {"grscheller.fp.iterables.drop": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1.4142135623730951}, "grscheller.fp.woException.MB": {"tf": 1}, "grscheller.fp.woException.MB.get": {"tf": 1}, "grscheller.fp.woException.MB.map": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1}, "grscheller.fp.woException.XOR.get": {"tf": 1}, "grscheller.fp.woException.XOR.getRight": {"tf": 1}, "grscheller.fp.woException.XOR.makeRight": {"tf": 1}, "grscheller.fp.woException.XOR.map": {"tf": 1}}, "df": 10, "n": {"docs": {"grscheller.fp.iterables.foldL": {"tf": 1}, "grscheller.fp.iterables.foldR": {"tf": 1}, "grscheller.fp.woException.XOR.map": {"tf": 1}, "grscheller.fp.woException.XOR.flatMap": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.woException.MB.map": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"grscheller.fp.woException.XOR.map": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.dropWhile": {"tf": 1}, "grscheller.fp.iterables.takeWhile": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1}}, "df": 4}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.iterables.foldL": {"tf": 1}, "grscheller.fp.iterables.foldR": {"tf": 1}}, "df": 2}}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.woException.XOR.makeRight": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.take": {"tf": 1}}, "df": 1}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.iterables.accumulate": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"grscheller.fp.iterables.foldL": {"tf": 1}, "grscheller.fp.iterables.foldR": {"tf": 1}, "grscheller.fp.woException.MB": {"tf": 1.4142135623730951}, "grscheller.fp.woException.MB.get": {"tf": 1}, "grscheller.fp.woException.XOR.get": {"tf": 1}, "grscheller.fp.woException.XOR.getRight": {"tf": 1}}, "df": 6, "s": {"docs": {"grscheller.fp.woException": {"tf": 1.4142135623730951}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"grscheller.fp.woException.XOR": {"tf": 1}}, "df": 1}}}, "l": {"docs": {"grscheller.fp.iterables.foldL": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1}, "grscheller.fp.woException.XOR.get": {"tf": 1.4142135623730951}}, "df": 3, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "u": {"docs": {"grscheller.fp.woException": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.iterables.takeWhile": {"tf": 1}}, "df": 1}, "e": {"docs": {"grscheller.fp.iterables.merge": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables.foldL": {"tf": 1}, "grscheller.fp.woException": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 2.8284271247461903}, "grscheller.fp.woException.XOR.get": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR.getRight": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR.map": {"tf": 1.7320508075688772}, "grscheller.fp.woException.XOR.flatMap": {"tf": 1}}, "df": 7}}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {"grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.accumulate": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.foldLsc": {"tf": 1}, "grscheller.fp.iterables.foldRsc": {"tf": 1}, "grscheller.fp.woException": {"tf": 1}, "grscheller.fp.woException.MB": {"tf": 1.4142135623730951}, "grscheller.fp.woException.MB.get": {"tf": 1}, "grscheller.fp.woException.MB.map": {"tf": 1}, "grscheller.fp.woException.XOR.get": {"tf": 1}, "grscheller.fp.woException.XOR.getRight": {"tf": 1.4142135623730951}}, "df": 12}, "n": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.merge": {"tf": 1.4142135623730951}}, "df": 1}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.iterables.merge": {"tf": 1}}, "df": 1, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.woException.MB.get": {"tf": 1}, "grscheller.fp.woException.XOR.get": {"tf": 1}, "grscheller.fp.woException.XOR.getRight": {"tf": 1}}, "df": 3}}}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.iterables.foldL": {"tf": 1}, "grscheller.fp.iterables.foldR": {"tf": 1}}, "df": 3}}}}}}}, "r": {"docs": {"grscheller.fp.woException.MB": {"tf": 1}, "grscheller.fp.woException.MB.map": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 2}, "grscheller.fp.woException.XOR.swapRight": {"tf": 1}, "grscheller.fp.woException.XOR.mapRight": {"tf": 1}}, "df": 5, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.iterables.foldL": {"tf": 1}, "grscheller.fp.iterables.foldR": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.woException.MB.map": {"tf": 1}, "grscheller.fp.woException.XOR.map": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR.mapRight": {"tf": 1}, "grscheller.fp.woException.XOR.flatMap": {"tf": 1}}, "df": 4}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.woException.XOR": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.woException.MB.get": {"tf": 1}, "grscheller.fp.woException.XOR.get": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.iterables": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.iterables": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.takeWhile": {"tf": 1}, "grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1}, "grscheller.fp.iterables.exhaust": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.iterables.foldL": {"tf": 1}}, "df": 7, "s": {"docs": {"grscheller.fp.iterables": {"tf": 1.7320508075688772}, "grscheller.fp.iterables.merge": {"tf": 1}}, "df": 2}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.iterables.drop": {"tf": 1}, "grscheller.fp.iterables.dropWhile": {"tf": 1}, "grscheller.fp.iterables.take": {"tf": 1}, "grscheller.fp.iterables.takeWhile": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.concat": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.foldL": {"tf": 1.7320508075688772}, "grscheller.fp.iterables.foldR": {"tf": 1.7320508075688772}}, "df": 8, "s": {"docs": {"grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.iterables.concat": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.merge": {"tf": 2}, "grscheller.fp.iterables.exhaust": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.foldLsc": {"tf": 1}, "grscheller.fp.iterables.foldRsc": {"tf": 1}}, "df": 6}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "s": {"docs": {"grscheller.fp.woException.XOR.get": {"tf": 1}, "grscheller.fp.woException.XOR.getRight": {"tf": 1}, "grscheller.fp.woException.XOR.map": {"tf": 1}}, "df": 3}}, "s": {"docs": {"grscheller.fp.iterables": {"tf": 1.7320508075688772}, "grscheller.fp.iterables.dropWhile": {"tf": 1}, "grscheller.fp.iterables.takeWhile": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.merge": {"tf": 1.7320508075688772}, "grscheller.fp.iterables.foldL": {"tf": 1}, "grscheller.fp.iterables.foldR": {"tf": 1}, "grscheller.fp.iterables.foldLsc": {"tf": 1}, "grscheller.fp.iterables.foldRsc": {"tf": 1}, "grscheller.fp.woException.MB": {"tf": 1}, "grscheller.fp.woException.MB.get": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1}, "grscheller.fp.woException.XOR.get": {"tf": 1.7320508075688772}, "grscheller.fp.woException.XOR.getRight": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR.map": {"tf": 1.4142135623730951}}, "df": 14, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.iterables.accumulate": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"grscheller.fp.woException": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1}, "grscheller.fp.woException.XOR.swapRight": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.iterables.dropWhile": {"tf": 1}, "grscheller.fp.iterables.foldL": {"tf": 1.7320508075688772}, "grscheller.fp.iterables.foldR": {"tf": 1.7320508075688772}}, "df": 3}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.foldL": {"tf": 1}, "grscheller.fp.iterables.foldLsc": {"tf": 1}, "grscheller.fp.iterables.foldRsc": {"tf": 1}}, "df": 4}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.woException.XOR.makeRight": {"tf": 1}, "grscheller.fp.woException.XOR.swapRight": {"tf": 1}}, "df": 2, "s": {"docs": {"grscheller.fp.woException.MB": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1}}, "df": 2}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"grscheller.fp.woException.XOR.makeRight": {"tf": 1}}, "df": 1}}}, "f": {"docs": {"grscheller.fp.iterables.takeWhile": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.foldL": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.foldR": {"tf": 1}, "grscheller.fp.woException.MB": {"tf": 1.4142135623730951}, "grscheller.fp.woException.MB.get": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR": {"tf": 1.7320508075688772}, "grscheller.fp.woException.XOR.get": {"tf": 2}, "grscheller.fp.woException.XOR.getRight": {"tf": 2.23606797749979}, "grscheller.fp.woException.XOR.makeRight": {"tf": 1}, "grscheller.fp.woException.XOR.map": {"tf": 2.23606797749979}}, "df": 11}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.woException.MB": {"tf": 1.7320508075688772}, "grscheller.fp.woException.XOR": {"tf": 1.7320508075688772}}, "df": 2}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.woException.MB": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"grscheller.fp.woException.XOR": {"tf": 1}}, "df": 1}}}}}}}}}}, "r": {"docs": {"grscheller.fp.iterables.foldR": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1}, "grscheller.fp.woException.XOR.getRight": {"tf": 1}, "grscheller.fp.woException.XOR.map": {"tf": 1.4142135623730951}}, "df": 4, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.iterables": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.iterables.takeWhile": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1}}, "df": 2}}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.iterables.foldL": {"tf": 1}, "grscheller.fp.iterables.foldR": {"tf": 1.4142135623730951}, "grscheller.fp.woException.MB": {"tf": 1}, "grscheller.fp.woException.MB.get": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1}, "grscheller.fp.woException.XOR.get": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR.getRight": {"tf": 1.7320508075688772}, "grscheller.fp.woException.XOR.makeRight": {"tf": 1}, "grscheller.fp.woException.XOR.map": {"tf": 1.7320508075688772}}, "df": 9, "s": {"docs": {"grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.iterables.foldL": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1}, "grscheller.fp.woException.XOR.swapRight": {"tf": 1}}, "df": 4}, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.woException.XOR.map": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.foldR": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.foldRsc": {"tf": 1}}, "df": 2}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.woException.MB": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.nothingness": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.woException.MB": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables.foldR": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 3.3166247903554}, "grscheller.fp.woException.XOR.getRight": {"tf": 2.23606797749979}, "grscheller.fp.woException.XOR.makeRight": {"tf": 2}, "grscheller.fp.woException.XOR.swapRight": {"tf": 1.7320508075688772}, "grscheller.fp.woException.XOR.map": {"tf": 2}, "grscheller.fp.woException.XOR.mapRight": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR.flatMap": {"tf": 1}}, "df": 8}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.woException.MB": {"tf": 1}, "grscheller.fp.woException.MB.get": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1}, "grscheller.fp.woException.XOR.get": {"tf": 1}, "grscheller.fp.woException.XOR.getRight": {"tf": 1}}, "df": 5}}}}}}, "a": {"docs": {"grscheller.fp.iterables.foldR": {"tf": 1}, "grscheller.fp.woException.MB": {"tf": 3}, "grscheller.fp.woException.XOR": {"tf": 3.4641016151377544}, "grscheller.fp.woException.XOR.get": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR.getRight": {"tf": 2.449489742783178}, "grscheller.fp.woException.XOR.makeRight": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR.swapRight": {"tf": 1.7320508075688772}, "grscheller.fp.woException.XOR.map": {"tf": 2}, "grscheller.fp.woException.XOR.mapRight": {"tf": 1}, "grscheller.fp.woException.mb_to_xor": {"tf": 1}, "grscheller.fp.woException.xor_to_mb": {"tf": 1}}, "df": 11, "r": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1}, "grscheller.fp.iterables.exhaust": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR": {"tf": 1.4142135623730951}}, "df": 5}}, "t": {"docs": {"grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.iterables.foldRsc": {"tf": 1}}, "df": 2}, "l": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.iterables": {"tf": 1.7320508075688772}, "grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.exhaust": {"tf": 1.4142135623730951}}, "df": 3}, "t": {"docs": {"grscheller.fp.woException.XOR.get": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.woException.MB.get": {"tf": 1.7320508075688772}, "grscheller.fp.woException.XOR.get": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR.getRight": {"tf": 1}}, "df": 3}}}}}}}}, "s": {"docs": {"grscheller.fp.woException.MB": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables": {"tf": 1}}, "df": 1, "d": {"docs": {"grscheller.fp.iterables": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "n": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.foldL": {"tf": 1.7320508075688772}, "grscheller.fp.iterables.foldR": {"tf": 1}, "grscheller.fp.woException.MB.get": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR": {"tf": 1}, "grscheller.fp.woException.XOR.get": {"tf": 1}, "grscheller.fp.woException.mb_to_xor": {"tf": 1}, "grscheller.fp.woException.xor_to_mb": {"tf": 1}}, "df": 9, "y": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR.map": {"tf": 1}}, "df": 3}, "d": {"docs": {"grscheller.fp.iterables.foldRsc": {"tf": 1.4142135623730951}, "grscheller.fp.woException": {"tf": 1}, "grscheller.fp.woException.MB": {"tf": 1}, "grscheller.fp.woException.MB.flatmap": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1}}, "df": 5}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.accumulate": {"tf": 1.4142135623730951}}, "df": 1, "d": {"docs": {"grscheller.fp.iterables.accumulate": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.iterables.accumulate": {"tf": 1}}, "df": 1}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.iterables.accumulate": {"tf": 1}}, "df": 1}}}}}}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.woException.XOR.map": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"grscheller.fp.iterables.foldL": {"tf": 1}, "grscheller.fp.iterables.foldR": {"tf": 1}, "grscheller.fp.woException.MB": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1}}, "df": 4}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.woException.MB": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {"grscheller.fp.iterables.drop": {"tf": 1}, "grscheller.fp.iterables.take": {"tf": 1}}, "df": 2, "o": {"docs": {"grscheller.fp.iterables.foldL": {"tf": 1}, "grscheller.fp.iterables.foldR": {"tf": 1}}, "df": 2, "t": {"docs": {"grscheller.fp.iterables": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.iterables.foldL": {"tf": 1}, "grscheller.fp.iterables.foldR": {"tf": 1}, "grscheller.fp.iterables.foldRsc": {"tf": 1}, "grscheller.fp.woException.MB": {"tf": 2}, "grscheller.fp.woException.MB.get": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 2.23606797749979}, "grscheller.fp.woException.XOR.get": {"tf": 1}, "grscheller.fp.woException.XOR.getRight": {"tf": 1}}, "df": 10, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.nothingness": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {"grscheller.fp.iterables.foldRsc": {"tf": 1}, "grscheller.fp.woException.MB": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.iterables": {"tf": 1}}, "df": 1}}}}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables.drop": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.iterables.foldL": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.woException.MB": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1}}, "df": 2, "s": {"docs": {"grscheller.fp.iterables.foldR": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.woException.MB.get": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1}, "grscheller.fp.woException.XOR.get": {"tf": 1}}, "df": 3}}}}, "w": {"docs": {"grscheller.fp.woException.MB": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1}, "grscheller.fp.woException.XOR.makeRight": {"tf": 1}, "grscheller.fp.woException.XOR.swapRight": {"tf": 1.7320508075688772}, "grscheller.fp.woException.XOR.map": {"tf": 1}}, "df": 5}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.foldR": {"tf": 1}, "grscheller.fp.woException.MB": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1}}, "df": 4, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.iterables.accumulate": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.foldLsc": {"tf": 1}, "grscheller.fp.iterables.foldRsc": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.woException.MB": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.woException": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.woException.XOR.flatMap": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.woException.MB.get": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR.get": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"grscheller.fp.woException.XOR": {"tf": 1.7320508075688772}}, "df": 1}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.woException.XOR": {"tf": 1}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables": {"tf": 1}}, "df": 1}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.dropWhile": {"tf": 1}, "grscheller.fp.iterables.takeWhile": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"grscheller.fp.woException.XOR": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.iterables.foldL": {"tf": 1}, "grscheller.fp.iterables.foldR": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1.4142135623730951}}, "df": 3}, "r": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.woException.MB": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.woException.XOR": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"grscheller.fp.iterables.takeWhile": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.iterables.foldL": {"tf": 1}, "grscheller.fp.iterables.foldR": {"tf": 1}, "grscheller.fp.woException.MB.flatmap": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1}, "grscheller.fp.woException.XOR.swapRight": {"tf": 1}}, "df": 8}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.woException.MB": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.woException.MB": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "s": {"docs": {"grscheller.fp.woException.XOR": {"tf": 1}, "grscheller.fp.woException.XOR.getRight": {"tf": 1}}, "df": 2}}}, "d": {"docs": {"grscheller.fp.iterables.foldL": {"tf": 1}, "grscheller.fp.iterables.foldR": {"tf": 1}, "grscheller.fp.woException.MB": {"tf": 1.4142135623730951}, "grscheller.fp.woException.MB.get": {"tf": 1}}, "df": 4, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"grscheller.fp.iterables.drop": {"tf": 1}, "grscheller.fp.iterables.dropWhile": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"grscheller.fp.iterables.merge": {"tf": 1}, "grscheller.fp.woException": {"tf": 1}, "grscheller.fp.woException.MB.map": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.iterables.foldRsc": {"tf": 1}, "grscheller.fp.woException.MB": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.woException.MB": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.woException.MB": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.takeWhile": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.iterables.foldL": {"tf": 1.7320508075688772}, "grscheller.fp.iterables.foldR": {"tf": 1.7320508075688772}, "grscheller.fp.woException.MB": {"tf": 2.8284271247461903}, "grscheller.fp.woException.MB.get": {"tf": 2}, "grscheller.fp.woException.XOR": {"tf": 3.1622776601683795}, "grscheller.fp.woException.XOR.get": {"tf": 2}, "grscheller.fp.woException.XOR.getRight": {"tf": 2.449489742783178}, "grscheller.fp.woException.XOR.makeRight": {"tf": 1}, "grscheller.fp.woException.XOR.swapRight": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR.map": {"tf": 1.7320508075688772}, "grscheller.fp.woException.XOR.mapRight": {"tf": 1}}, "df": 13, "s": {"docs": {"grscheller.fp.iterables.drop": {"tf": 1}, "grscheller.fp.iterables.dropWhile": {"tf": 1}, "grscheller.fp.iterables.take": {"tf": 1}, "grscheller.fp.iterables.takeWhile": {"tf": 1}, "grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.woException.MB": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 2}, "grscheller.fp.woException.XOR.flatMap": {"tf": 1.4142135623730951}}, "df": 10}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.woException.MB": {"tf": 1}, "grscheller.fp.woException.MB.get": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1}, "grscheller.fp.woException.XOR.get": {"tf": 1}, "grscheller.fp.woException.XOR.getRight": {"tf": 1}}, "df": 5}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}, "grscheller.fp.iterables.foldLsc": {"tf": 1}, "grscheller.fp.iterables.foldRsc": {"tf": 1}}, "df": 4}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {"grscheller.fp.iterables.take": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.exhaust": {"tf": 1.4142135623730951}}, "df": 3}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.iterables.merge": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.woException.XOR.map": {"tf": 1}}, "df": 1}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.woException": {"tf": 1}, "grscheller.fp.woException.XOR.map": {"tf": 1}}, "df": 2, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.iterables.foldLsc": {"tf": 1}, "grscheller.fp.iterables.foldRsc": {"tf": 1}}, "df": 2}}}}}}, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.iterables.takeWhile": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1}, "grscheller.fp.iterables.exhaust": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.iterables.merge": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.iterables.takeWhile": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1}}, "df": 2}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.exhaust": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.woException": {"tf": 1}, "grscheller.fp.woException.XOR.map": {"tf": 1}}, "df": 2}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.woException.MB": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"grscheller.fp.woException.MB.get": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.iterables.foldL": {"tf": 1.4142135623730951}, "grscheller.fp.iterables.foldR": {"tf": 1.4142135623730951}, "grscheller.fp.woException.MB": {"tf": 1}}, "df": 3}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.iterables.foldLsc": {"tf": 1}, "grscheller.fp.iterables.foldRsc": {"tf": 1.4142135623730951}}, "df": 2}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.woException": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR": {"tf": 1.7320508075688772}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.woException.MB.map": {"tf": 1}}, "df": 1}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.woException.XOR": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "s": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.woException.MB": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"grscheller.fp.woException.MB": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1}}, "df": 2}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.woException.MB": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"grscheller.fp.woException.XOR.map": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.accumulate": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables.foldRsc": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.iterables.accumulate": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.iterables.foldRsc": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"grscheller.fp.iterables.foldLsc": {"tf": 1}, "grscheller.fp.iterables.foldRsc": {"tf": 1}}, "df": 2, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.iterables.foldLsc": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.woException.MB.map": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"grscheller.fp.woException.XOR.map": {"tf": 1}}, "df": 1}}}}}}}}}, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.merge": {"tf": 1}, "grscheller.fp.iterables.exhaust": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables.foldLsc": {"tf": 1}, "grscheller.fp.iterables.foldRsc": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.nothingness": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.woException.XOR": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"grscheller.fp.woException.XOR.swapRight": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.woException.XOR.map": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.woException.MB": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1}}, "df": 2, "s": {"docs": {"grscheller.fp.woException.MB": {"tf": 1.4142135623730951}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.woException.MB": {"tf": 1.4142135623730951}, "grscheller.fp.woException.MB.get": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.woException.XOR": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.woException.XOR": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.woException.mb_to_xor": {"tf": 1}, "grscheller.fp.woException.xor_to_mb": {"tf": 1}}, "df": 2}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.woException.XOR": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1.4142135623730951}}, "df": 1}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.woException.MB": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1}, "grscheller.fp.woException.XOR.makeRight": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.iterables.foldLsc": {"tf": 1}, "grscheller.fp.iterables.foldRsc": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.foldLsc": {"tf": 1}, "grscheller.fp.iterables.foldRsc": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {"grscheller.fp.woException.XOR": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.woException.MB": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.nothingness": {"tf": 1}, "grscheller.fp.woException.MB": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.woException.MB": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1}}, "df": 2}}}}}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.iterables.concat": {"tf": 1}, "grscheller.fp.iterables.merge": {"tf": 1}, "grscheller.fp.iterables.exhaust": {"tf": 1}}, "df": 3}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.woException.MB": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.woException.MB.get": {"tf": 1}, "grscheller.fp.woException.XOR.get": {"tf": 1}}, "df": 2}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.iterables.accumulate": {"tf": 1}}, "df": 1}}}, "b": {"docs": {"grscheller.fp.iterables.foldL": {"tf": 1}, "grscheller.fp.iterables.foldR": {"tf": 1}, "grscheller.fp.woException": {"tf": 1}, "grscheller.fp.woException.MB": {"tf": 2.23606797749979}, "grscheller.fp.woException.MB.flatmap": {"tf": 1}, "grscheller.fp.woException.mb_to_xor": {"tf": 1}, "grscheller.fp.woException.xor_to_mb": {"tf": 1}}, "df": 7}, "a": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.woException.XOR.map": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.woException": {"tf": 1.4142135623730951}, "grscheller.fp.woException.MB": {"tf": 1}}, "df": 2}}}, "p": {"docs": {"grscheller.fp.woException.MB": {"tf": 1}, "grscheller.fp.woException.MB.map": {"tf": 1}, "grscheller.fp.woException.MB.flatmap": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1}, "grscheller.fp.woException.XOR.map": {"tf": 1.4142135623730951}, "grscheller.fp.woException.XOR.mapRight": {"tf": 1}, "grscheller.fp.woException.XOR.flatMap": {"tf": 1}}, "df": 7, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.woException.XOR.map": {"tf": 1}}, "df": 1}}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.woException.XOR.makeRight": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.woException": {"tf": 1.4142135623730951}, "grscheller.fp.woException.MB": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"grscheller.fp.woException": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "c": {"docs": {"grscheller.fp.woException": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"grscheller.fp.woException.XOR.flatMap": {"tf": 1}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"grscheller.fp.woException.MB": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "e": {"docs": {"grscheller.fp.woException.MB.get": {"tf": 1}, "grscheller.fp.woException.XOR.get": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.woException.MB": {"tf": 1}, "grscheller.fp.woException.XOR.map": {"tf": 1}}, "df": 2, "s": {"docs": {"grscheller.fp.woException.XOR": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"grscheller.fp.iterables.accumulate": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"grscheller.fp.woException.MB": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1}}, "df": 2}}}}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"grscheller.fp.iterables.foldL": {"tf": 1.7320508075688772}, "grscheller.fp.iterables.foldR": {"tf": 1.7320508075688772}, "grscheller.fp.woException.MB": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1}, "grscheller.fp.woException.XOR.makeRight": {"tf": 1}}, "df": 5}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.iterables.foldL": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"grscheller.fp.woException.MB": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 1}, "grscheller.fp.woException.XOR.get": {"tf": 1}, "grscheller.fp.woException.XOR.getRight": {"tf": 1}}, "df": 4, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"grscheller.fp.woException.XOR": {"tf": 1}}, "df": 1}}}}}}}}, "x": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"grscheller.fp.woException": {"tf": 1}, "grscheller.fp.woException.XOR": {"tf": 2.23606797749979}, "grscheller.fp.woException.XOR.get": {"tf": 1}, "grscheller.fp.woException.XOR.getRight": {"tf": 1.7320508075688772}, "grscheller.fp.woException.XOR.makeRight": {"tf": 1}, "grscheller.fp.woException.XOR.map": {"tf": 2}, "grscheller.fp.woException.mb_to_xor": {"tf": 1}, "grscheller.fp.woException.xor_to_mb": {"tf": 1}}, "df": 8, "[": {"docs": {}, "df": 0, "s": {"docs": {"grscheller.fp.woException.XOR.map": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();