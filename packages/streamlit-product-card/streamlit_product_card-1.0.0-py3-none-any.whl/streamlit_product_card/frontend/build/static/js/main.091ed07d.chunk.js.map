{"version":3,"sources":["stCard.tsx","index.tsx"],"names":["transformKebabCaseStyles","styleObj","str","newStyles","key","Object","prototype","hasOwnProperty","call","replace","match","char","toUpperCase","globalStyles","css","_templateObject","taggedTemplateLiteral","ProductCardComponent","sendClickEvent","Streamlit","setComponentValue","clickEventId","Date","now","onCardClick","_this","props","args","buttonText","trim","onButtonClick","e","stopPropagation","setComponentReady","setFrameHeight","_this$props","this","theme","react_default","a","createElement","style","color","padding","productName","_args$description","description","price","productImage","picturePosition","enableAnimation","styles","fontUrl","imageWidthPercent","imageAspectRatio","imageObjectFit","mobileBreakpointBehavior","userCardStyles","card","userImageStyles","image","userTextStyles","text","userTitleStyles","title","userPriceStyles","userButtonStyles","button","isHorizontalLayout","showButton","rawBorderRadius","borderRadius","cardRadius","concat","Title","styled","h3","objectSpread","margin","fontSize","textColor","fontWeight","Text","div","lineHeight","PriceTag","primaryColor","Button","backgroundColor","border","cursor","alignSelf","marginTop","descContent","map","line","i","length","Fragment","emotion_react_browser_esm","dangerouslySetInnerHTML","__html","StyledCard","userCardStyleProps","isHorizontalProp","cardBorderRadiusProp","enableAnimationProp","themeFont","font","themeSecondaryBackgroundColor","secondaryBackgroundColor","onClick","picturePositionProp","mobileBreakpointBehaviorProp","hasButton","StyledImageContainer","imageWidthPercentProp","imageAspectRatioProp","ImgComponent","src","alt","userImageStyleProps","imageObjectFitProp","StyledContent","userContentStyleProps","StreamlitComponentBase","img","imageSpecificAspectRatio","baseImageStyles","display","width","height","objectFit","aspectRatio","isCurrentlyHorizontal","window","innerWidth","baseStyles","justifyContent","alignItems","overflow","flexShrink","undefined","marginLeft","marginRight","marginBottom","propAspectRatio","responsiveStyles","mobileSpecificStyles","flexBasis","@media (max-width: 600px)","fontFamily","boxShadow","position","flexDirection","conditionalStyles","willChange","transition","transform","mobileFlexDirection","minWidth","boxSizing","flexGrow","mobileSpecificContentStyles","paddingTop","paddingBottom","withStreamlitConnection","ReactDOM","render","StrictMode","stCard","document","getElementById"],"mappings":"qPAcMA,EAA2B,SAACC,GAChC,IAAKA,EAAU,MAAO,GACtB,IANoBC,EAMdC,EAAoC,GAC1C,IAAK,IAAMC,KAAOH,EACZI,OAAOC,UAAUC,eAAeC,KAAKP,EAAUG,KACjDD,GATgBD,EASOE,EARpBF,EAAIO,QAAQ,eAAgB,SAACC,EAAOC,GAAR,OAAiBA,EAAKC,kBAQtBX,EAASG,IAG5C,OAAOD,GAwCHU,EAAeC,YAAHC,MAAAV,OAAAW,EAAA,EAAAX,CAAA,kJAYZY,6MAUIC,eAAiB,WACvBC,IAAUC,kBAAkB,CAAEC,aAAcC,KAAKC,WAG3CC,YAAc,WACfC,EAAKC,MAAMC,KAAKC,YAAoD,KAAtCH,EAAKC,MAAMC,KAAKC,WAAWC,QAC1DJ,EAAKP,oBAIHY,cAAgB,SACtBC,GAEAA,EAAEC,kBACFP,EAAKP,qGAtBLC,IAAUc,oBACVd,IAAUe,8DAIVf,IAAUe,kDAoBQ,IAAAC,EACMC,KAAKV,MAArBC,EADUQ,EACVR,KAAMU,EADIF,EACJE,MACd,IAAKA,EACH,OACEC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,MAAO,MAAOC,QAAS,KAArC,6EAJc,IAWhBC,EAaEjB,EAbFiB,YAXgBC,EAwBdlB,EAZFmB,mBAZgB,IAAAD,EAYF,GAZEA,EAahBE,EAWEpB,EAXFoB,MACAC,EAUErB,EAVFqB,aACApB,EASED,EATFC,WACAqB,EAQEtB,EARFsB,gBACAC,EAOEvB,EAPFuB,gBACAC,EAMExB,EANFwB,OACAC,EAKEzB,EALFyB,QACAC,EAIE1B,EAJF0B,kBACAC,EAGE3B,EAHF2B,iBACAC,EAEE5B,EAFF4B,eACAC,EACE7B,EADF6B,yBAIIC,EAAiBzD,EAAyBmD,EAAOO,MACjDC,EAAkB3D,EAAyBmD,EAAOS,OAClDC,EAAiB7D,EAAyBmD,EAAOW,MACjDC,EAAkB/D,EAAyBmD,EAAOa,OAClDC,EAAkBjE,EAAyBmD,EAAOJ,OAClDmB,EAAmBlE,EAAyBmD,EAAOgB,QAEnDC,EACgB,SAApBnB,GAAkD,UAApBA,EAE1BoB,EAAazC,GAAoC,KAAtBA,EAAWC,OAGtCyC,EAAkBb,EAAec,aACjCC,EACuB,kBAApBF,EACHA,EACA,GAAAG,OAA2B,kBAApBH,EACJA,EANa,GAKhB,MAKAI,EAAQC,IAAOC,GAAPvE,OAAAwE,EAAA,EAAAxE,CAAA,CACZyE,OAAQ,EACRC,SAAU,wCACVrC,MAAOL,EAAM2C,UACbC,WAAY,KACTlB,IAGCmB,EAAOP,IAAOQ,IAAP9E,OAAAwE,EAAA,EAAAxE,CAAA,CACX0E,SAAU,sCACVrC,MAAOL,EAAM2C,UACbF,OAAQ,aACRM,WAAY,KACTvB,IAGCwB,EAAWV,IAAOQ,IAAP9E,OAAAwE,EAAA,EAAAxE,CAAA,CACf0E,SAAU,sCACVE,WAAY,IACZvC,MAAOL,EAAMiD,cACVrB,IAGCsB,EAASZ,IAAOR,OAAP9D,OAAAwE,EAAA,EAAAxE,CAAA,CACbmF,gBAAiBnD,EAAMiD,aACvB5C,MAAO,OACP+C,OAAQ,OACR9C,QAAS,YACT4B,aAAc,EACdmB,OAAQ,UACRX,SAAU,sCACVY,UAAWvB,EAAqB,aAAe,SAC/CwB,UAAW,QACR1B,IAGC2B,EAA2B/C,EAAYgD,IAC3C,SAACC,EAAcC,GAAf,OACE1D,EAAAC,EAAAC,cAAA,QAAMpC,IAAK4F,GACRD,EACAC,EAAIlD,EAAYmD,OAAQ,GAAK3D,EAAAC,EAAAC,cAAA,cAKpC,OACEF,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2D,SAAA,KACE5D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAQhD,OAAQtC,IACfuC,GACCd,EAAAC,EAAAC,cAAA,SAAO4D,wBAAyB,CAAEC,OAAM,gBAAA5B,OAAkBrB,EAAlB,UAE1Cd,EAAAC,EAAAC,cAAC8D,EAAD,CACEC,mBAAoB9C,EACpB+C,iBAAkBpC,EAClBqC,qBAAsBjC,EACtBkC,oBAAqBxD,EACrByD,UAAWtE,EAAMuE,KACjBC,8BAA+BxE,EAAMyE,yBACrCC,QAAS3E,KAAKZ,YACdwF,oBAAqB/D,EACrBgE,6BAA8BzD,EAC9B0D,UAAW7C,IAEW,QAApBpB,GAAiD,SAApBA,IAA+BD,GAC1DV,EAAAC,EAAAC,cAAC2E,EAAD,CACEX,iBAAkBpC,EAClBgD,sBAAuB/D,EACvB2D,oBAAqB/D,EACrBgE,6BAA8BzD,EAC9B6D,qBAAsB/D,EACtBmD,qBAAsBjC,GAEtBlC,EAAAC,EAAAC,cAAC8E,EAAD,CACEC,IAAKvE,EACLwE,IAAK5E,EACL6E,oBAAqB9D,EACrB0D,qBAAsB/D,EACtBoE,mBAAoBnE,KAK5BjB,EAAAC,EAAAC,cAACmF,EAAD,CACEnB,iBAAkBpC,EAClBwD,sBAAuB/D,EACvBoD,6BAA8BzD,EAC9BwD,oBAAqB/D,GAErBX,EAAAC,EAAAC,cAACkC,EAAD,KAAQ9B,GACPE,EAAYmD,OAAS,GAAK3D,EAAAC,EAAAC,cAAC0C,EAAD,KAAOW,GACjC9C,GAAST,EAAAC,EAAAC,cAAC6C,EAAD,KAAWtC,GACpBsB,GACC/B,EAAAC,EAAAC,cAAC+C,EAAD,CAAQwB,QAAS3E,KAAKN,eAAgBF,KAIpB,WAApBqB,GAAoD,UAApBA,IAAgCD,GAC7DV,EAAAC,EAAAC,cAAC2E,EAAD,CACCX,iBAAkBpC,EAClBgD,sBAAuB/D,EACvB2D,oBAAqB/D,EACrBgE,6BAA8BzD,EAC9B6D,qBAAsB/D,EACtBmD,qBAAsBjC,GAEtBlC,EAAAC,EAAAC,cAAC8E,EAAD,CACEC,IAAKvE,EACLwE,IAAK5E,EACL6E,oBAAqB9D,EACrB0D,qBAAsB/D,EACtBoE,mBAAoBnE,cA1LHsE,KAuO7BP,EAAe3C,IAAOmD,IAAuB,SAAApG,GACjD,IAAIqG,EACJ,OAAQrG,EAAM2F,sBACZ,IAAK,SACHU,EAA2B,OAC3B,MACF,QACEA,EAA0D,QAA/BrG,EAAM2F,qBAAiC,QAAU3F,EAAM2F,qBAGtF,IAAMW,EAAuC,CAC3CC,QAAS,QACTC,MAAO,OACPC,OAAqC,SAA7BJ,GAAsE,WAA/BrG,EAAM2F,qBAAoC,OAAS,OAClGe,UAAW1G,EAAM+F,oBAAoBW,WAAa1G,EAAMgG,oBAM1D,MAJmC,WAA/BhG,EAAM2F,uBACRW,EAAgBK,YAAcN,GAGzB1H,OAAAwE,EAAA,EAAAxE,CAAA,GACF2H,EACAtG,EAAM+F,oBAFX,CAGEW,UAAW1G,EAAM+F,oBAAoBW,WAAa1G,EAAMgG,oBACnB,WAA/BhG,EAAM2F,uBAAsC3F,EAAM+F,oBAAoBY,aACxE,CAAEA,YAAaN,MAIjBZ,EAAuBxC,IAAOQ,IAA+B,SAAAzD,GACjE,IAAM4G,EAAwB5G,EAAM8E,qBACS,cAAvC9E,EAAMuF,8BAAuF,iBAAvCvF,EAAMuF,+BAC1C,qBAAXsB,QAA0BA,OAAOC,YAAc,KAEtDC,EAAuE,CAC3ER,QAAS,OACTS,eAAgB,SAChBC,WAAY,SACZC,SAAU,SACVC,WAAYP,EAAwB,OAAIQ,EACxCZ,MAAOI,EAAqB,GAAA7D,OAAM/C,EAAM0F,sBAAZ,KAAuC,OACnE2B,WAAYT,GAAuD,UAA9B5G,EAAMsF,oBAAkC,OAAS,IACtFgC,YAAaV,GAAuD,SAA9B5G,EAAMsF,oBAAiC,OAAS,IACtFpB,UAAY0C,GAAuD,WAA9B5G,EAAMsF,oBAA4C,IAAT,OAC9EiC,aAAeX,GAAuD,QAA9B5G,EAAMsF,oBAAyC,IAAT,OAC9EzC,aAAc7C,EAAM8E,iBACc,SAA9B9E,EAAMsF,oBAAN,GAAAvC,OACK/C,EAAM+E,qBADX,SAAAhC,OACuC/C,EAAM+E,sBAD7C,KAAAhC,OAEO/C,EAAM+E,qBAFb,KAAAhC,OAEqC/C,EAAM+E,qBAF3C,MAG8B,QAA9B/E,EAAMsF,oBAAN,GAAAvC,OACG/C,EAAM+E,qBADT,KAAAhC,OACiC/C,EAAM+E,qBADvC,eAAAhC,OAEO/C,EAAM+E,qBAFb,KAAAhC,OAEqC/C,EAAM+E,uBAG3CyC,EAAkBxH,EAAM2F,qBACN,WAApB6B,IACAT,EAAWJ,YAAkC,QAApBa,EAA4B,QAAUA,GAGnE,IAAIC,EAAmB,GACvB,GAAIzH,EAAM8E,mBAA4D,cAAvC9E,EAAMuF,8BAAuF,iBAAvCvF,EAAMuF,8BAAkD,CAC3I,IAAMmC,EAAwD,CAC1DlB,MAAO,OACPmB,UAAW,OACXR,gBAAYC,EACZC,WAAY,IACZC,YAAa,IACbpD,UAAW,IACXqD,aAAc,IACd1E,aAAqD,cAAvC7C,EAAMuF,6BAAN,GAAAxC,OACL/C,EAAM+E,qBADD,KAAAhC,OACyB/C,EAAM+E,qBAD/B,eAAAhC,OAED/C,EAAM+E,qBAFL,KAAAhC,OAE6B/C,EAAM+E,uBAEV,cAAvC/E,EAAMuF,6BACNmC,EAAqBH,aAAe,OAEpCG,EAAqBxD,UAAY,OAErCuD,EAAmB,CACfG,4BAA6BF,GAGnC,OAAO/I,OAAAwE,EAAA,EAAAxE,CAAA,GACFoI,EACAU,KAID7C,EAAa3B,IAAOQ,IAAqB,SAAAzD,GAC7C,IAAM+G,EAAkC,CACtCR,QAAS,OACTC,MAAO,OACPC,OAAQ,OACRoB,WAAU,GAAA9E,OAAK/C,EAAMiF,UAAX,gBACVnB,gBAAiB9D,EAAMmF,8BACvBtC,aAAc7C,EAAM+E,qBACpB+C,UAAW,8BACXZ,SAAU,SACVa,SAAU,WACV/D,OAAQhE,EAAMwF,UAAY,UAAaxF,EAAMqF,QAAU,UAAY,UACnE2C,cAAehI,EAAM8E,iBAAmB,MAAQ,UAG5CmD,EAA4C,GAclD,GAZIjI,EAAMgF,sBACRiD,EAAkBC,WAAa,wBAC/BD,EAAkBE,WAAa,0DAC/BF,EAAkB,WAAa,CAC7BG,UAAW,cACXN,UAAW,+BAEbG,EAAkB,YAAc,CAC9BG,UAAW,gBAIXpI,EAAM8E,iBAAkB,CAC1B,IAAIuD,EAAkD,SAEX,cAAvCrI,EAAMuF,6BACN8C,EAAoD,UAA9BrI,EAAMsF,oBAAkC,iBAAmB,SACnC,iBAAvCtF,EAAMuF,+BACb8C,EAAoD,SAA9BrI,EAAMsF,oBAAiC,iBAAmB,UAExC,cAAvCtF,EAAMuF,8BAAuF,iBAAvCvF,EAAMuF,+BAC7D0C,EAAkB,6BAAlBtJ,OAAAwE,EAAA,EAAAxE,CAAA,GACMsJ,EAAkB,6BADxB,CAEED,cAAeK,KAKvB,OAAO1J,OAAAwE,EAAA,EAAAxE,CAAA,GACFoI,EACAkB,EACAjI,EAAM6E,sBAIPoB,EAAgBhD,IAAOQ,IAAwB,SAAAzD,GACnD,IAAM+G,EAAkC,CACtCR,QAAS,OACTyB,cAAe,SACfhB,eAAgB,SAChB/F,QAAS,OACTqH,SAAU,EACVC,UAAW,aACXC,SAAUxI,EAAM8E,iBAAmB,OAAIsC,EACvCO,UAAW3H,EAAM8E,iBAAmB,MAAQ,OAC5C0B,MAAO,QAGHiB,EAA2C,GACjD,GAAIzH,EAAM8E,mBAA4D,cAAvC9E,EAAMuF,8BAAuF,iBAAvCvF,EAAMuF,8BAAkD,CAC1I,IAAMkD,EAAmD,CACtDD,SAAU,EACVb,UAAW,OACXnB,MAAO,OACPvF,QAAS,QAE+B,cAAvCjB,EAAMuF,+BACPkD,EAA4BC,WAA4C,SAA9B1I,EAAMsF,qBAAgE,UAA9BtF,EAAMsF,oBAAmC,MAAQ,QAE3F,iBAAvCtF,EAAMuF,+BACPkD,EAA4BE,cAA+C,SAA9B3I,EAAMsF,qBAAgE,UAA9BtF,EAAMsF,oBAAmC,MAAQ,QAEzImC,EAAiB,6BAA+BgB,EAGnD,OAAO9J,OAAAwE,EAAA,EAAAxE,CAAA,GACFoI,EACAU,EACAzH,EAAMkG,yBAIE0C,cAAwBrJ,GC9dvCsJ,IAASC,OACPlI,EAAAC,EAAAC,cAACF,EAAAC,EAAMkI,WAAP,KACEnI,EAAAC,EAAAC,cAACkI,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.091ed07d.chunk.js","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\";\nimport React, { ReactNode } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Global, css } from '@emotion/react'; \nimport * as CSS from 'csstype'; \n\nconst kebabToCamel = (str: string): string => {\n  return str.replace(/-([a-z0-9])/g, (match, char) => char.toUpperCase());\n};\n\nconst transformKebabCaseStyles = (styleObj?: { [key: string]: any }): React.CSSProperties => {\n  if (!styleObj) return {};\n  const newStyles: { [key: string]: any } = {}; \n  for (const key in styleObj) {\n    if (Object.prototype.hasOwnProperty.call(styleObj, key)) {\n      newStyles[kebabToCamel(key)] = styleObj[key];\n    }\n  }\n  return newStyles as React.CSSProperties; \n};\n\ntype PicturePosition = \"top\" | \"bottom\" | \"left\" | \"right\";\ntype MobileBreakpointBehavior = \"stack top\" | \"stack bottom\" | \"shrink\" | \"none\";\ntype EmotionCompatibleStyle = { [key: string]: any };\n\ninterface ProductCardArgs {\n  productName: string;\n  description?: string[];\n  price?: string;\n  productImage?: string;\n  buttonText: string; \n  picturePosition: PicturePosition;\n  enableAnimation: boolean;\n  imageWidthPercent: number;\n  imageAspectRatio: string; \n  imageObjectFit: CSS.Property.ObjectFit; \n  mobileBreakpointBehavior: MobileBreakpointBehavior;\n  fontUrl?: string;\n  styles: { \n    card?: EmotionCompatibleStyle; \n    title?: EmotionCompatibleStyle;\n    text?: EmotionCompatibleStyle;\n    price?: EmotionCompatibleStyle;\n    button?: EmotionCompatibleStyle;\n    image?: EmotionCompatibleStyle; \n  };\n}\n\ninterface ProductCardProps {\n  args: ProductCardArgs;\n  theme?: {\n    font?: string;\n    secondaryBackgroundColor?: string;\n    textColor?: string;\n    primaryColor?: string;\n  };\n}\n\nconst globalStyles = css`\n  body {\n    margin: 0; \n    padding: 10px; \n    box-sizing: border-box;\n  }\n  #root { \n    width: 100%;\n    height: 100%;\n  }\n`;\n\nclass ProductCardComponent extends StreamlitComponentBase<ProductCardProps> {\n  componentDidMount(): void {\n    Streamlit.setComponentReady();\n    Streamlit.setFrameHeight();\n  }\n\n  componentDidUpdate(): void {\n    Streamlit.setFrameHeight();\n  }\n\n  private sendClickEvent = (): void => {\n    Streamlit.setComponentValue({ clickEventId: Date.now() });\n  }\n\n  private onCardClick = (): void => {\n    if (!this.props.args.buttonText || this.props.args.buttonText.trim() === \"\") {\n        this.sendClickEvent();\n    }\n  };\n\n  private onButtonClick = (\n    e: React.MouseEvent<HTMLButtonElement>\n  ): void => {\n    e.stopPropagation(); \n    this.sendClickEvent();\n  };\n\n  render(): ReactNode {\n    const { args, theme } = this.props;\n    if (!theme) {\n      return (\n        <div style={{ color: \"red\", padding: 10 }}>\n          ⚠️ Streamlit theme not found — upgrade to Streamlit 1.10+.\n        </div>\n      );\n    }\n\n    const {\n      productName,\n      description = [],\n      price,\n      productImage,\n      buttonText, \n      picturePosition,\n      enableAnimation,\n      styles, \n      fontUrl,\n      imageWidthPercent,\n      imageAspectRatio,\n      imageObjectFit,\n      mobileBreakpointBehavior,\n    } = args;\n\n    // Transform kebab-case keys from Python styles to camelCase for React/Emotion\n    const userCardStyles = transformKebabCaseStyles(styles.card);\n    const userImageStyles = transformKebabCaseStyles(styles.image);\n    const userTextStyles = transformKebabCaseStyles(styles.text);\n    const userTitleStyles = transformKebabCaseStyles(styles.title);\n    const userPriceStyles = transformKebabCaseStyles(styles.price);\n    const userButtonStyles = transformKebabCaseStyles(styles.button);\n\n    const isHorizontalLayout =\n      picturePosition === \"left\" || picturePosition === \"right\";\n    \n    const showButton = buttonText && buttonText.trim() !== \"\";\n\n    const defaultRadius = 12;\n    const rawBorderRadius = userCardStyles.borderRadius; \n    const cardRadius =\n      typeof rawBorderRadius === \"string\"\n        ? rawBorderRadius\n        : typeof rawBorderRadius === \"number\"\n        ? `${rawBorderRadius}px`\n        : `${defaultRadius}px`;\n\n    // Define styled components by merging defaults and user styles into a single object\n    const Title = styled.h3({ \n      margin: 0,\n      fontSize: \"clamp(0.9rem, 0.5vw + 0.8rem, 1.2rem)\",\n      color: theme.textColor, \n      fontWeight: 600,\n      ...userTitleStyles, // User styles spread last to override defaults\n    });\n\n    const Text = styled.div({\n      fontSize: \"clamp(0.8rem, 0.4vw + 0.7rem, 1rem)\",\n      color: theme.textColor,\n      margin: \"8px 0 12px\",\n      lineHeight: 1.5,\n      ...userTextStyles,\n    });\n\n    const PriceTag = styled.div({\n      fontSize: \"clamp(1rem, 0.6vw + 0.8rem, 1.5rem)\",\n      fontWeight: 600,\n      color: theme.primaryColor,\n      ...userPriceStyles,\n    });\n\n    const Button = styled.button({\n      backgroundColor: theme.primaryColor,\n      color: \"#fff\",\n      border: \"none\",\n      padding: \"10px 16px\",\n      borderRadius: 6,\n      cursor: \"pointer\",\n      fontSize: \"clamp(0.8rem, 0.5vw + 0.7rem, 1rem)\",\n      alignSelf: isHorizontalLayout ? \"flex-start\" : \"center\",\n      marginTop: \"auto\",\n      ...userButtonStyles,\n    });\n\n    const descContent: ReactNode[] = description.map(\n      (line: string, i: number) => (\n        <span key={i}>\n          {line}\n          {i < description.length -1 && <br />}\n        </span>\n      )\n    );\n    \n    return (\n      <>\n        <Global styles={globalStyles} /> \n        {fontUrl && (\n          <style dangerouslySetInnerHTML={{ __html: `@import url('${fontUrl}');` }} />\n        )}\n        <StyledCard\n          userCardStyleProps={userCardStyles} \n          isHorizontalProp={isHorizontalLayout}\n          cardBorderRadiusProp={cardRadius}\n          enableAnimationProp={enableAnimation}\n          themeFont={theme.font}\n          themeSecondaryBackgroundColor={theme.secondaryBackgroundColor}\n          onClick={this.onCardClick} \n          picturePositionProp={picturePosition} \n          mobileBreakpointBehaviorProp={mobileBreakpointBehavior}\n          hasButton={showButton} \n        >\n          {(picturePosition === \"top\" || picturePosition === \"left\") && productImage && (\n              <StyledImageContainer\n                isHorizontalProp={isHorizontalLayout}\n                imageWidthPercentProp={imageWidthPercent}\n                picturePositionProp={picturePosition}\n                mobileBreakpointBehaviorProp={mobileBreakpointBehavior}\n                imageAspectRatioProp={imageAspectRatio} \n                cardBorderRadiusProp={cardRadius} \n              >\n                <ImgComponent\n                  src={productImage}\n                  alt={productName}\n                  userImageStyleProps={userImageStyles} \n                  imageAspectRatioProp={imageAspectRatio} \n                  imageObjectFitProp={imageObjectFit}\n                />\n              </StyledImageContainer>\n            )}\n\n          <StyledContent\n            isHorizontalProp={isHorizontalLayout}\n            userContentStyleProps={userTextStyles} \n            mobileBreakpointBehaviorProp={mobileBreakpointBehavior}\n            picturePositionProp={picturePosition} \n          >\n            <Title>{productName}</Title>\n            {description.length > 0 && <Text>{descContent}</Text>}\n            {price && <PriceTag>{price}</PriceTag>}\n            {showButton && ( \n              <Button onClick={this.onButtonClick}>{buttonText}</Button>\n            )}\n          </StyledContent>\n\n          {(picturePosition === \"bottom\" || picturePosition === \"right\") && productImage && (\n               <StyledImageContainer\n                isHorizontalProp={isHorizontalLayout}\n                imageWidthPercentProp={imageWidthPercent}\n                picturePositionProp={picturePosition}\n                mobileBreakpointBehaviorProp={mobileBreakpointBehavior}\n                imageAspectRatioProp={imageAspectRatio}\n                cardBorderRadiusProp={cardRadius} \n              >\n                <ImgComponent\n                  src={productImage}\n                  alt={productName}\n                  userImageStyleProps={userImageStyles} \n                  imageAspectRatioProp={imageAspectRatio}\n                  imageObjectFitProp={imageObjectFit}\n                />\n              </StyledImageContainer>\n            )}\n        </StyledCard>\n      </>\n    );\n  }\n}\n\ninterface StyledCardProps {\n  userCardStyleProps: React.CSSProperties; \n  isHorizontalProp: boolean;\n  cardBorderRadiusProp: string;\n  enableAnimationProp: boolean;\n  themeFont?: string;\n  themeSecondaryBackgroundColor?: string;\n  onClick?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  picturePositionProp: PicturePosition; \n  mobileBreakpointBehaviorProp: MobileBreakpointBehavior; \n  hasButton: boolean; \n}\n\ninterface StyledImageContainerProps {\n  isHorizontalProp: boolean;\n  imageWidthPercentProp: number;\n  picturePositionProp: PicturePosition;\n  mobileBreakpointBehaviorProp: MobileBreakpointBehavior; \n  imageAspectRatioProp: string; \n  cardBorderRadiusProp: string; \n}\n\ninterface ImgComponentProps {\n  userImageStyleProps: React.CSSProperties; \n  imageAspectRatioProp: string;\n  imageObjectFitProp: CSS.Property.ObjectFit; \n}\n\ninterface StyledContentProps {\n  isHorizontalProp: boolean;\n  userContentStyleProps: React.CSSProperties; \n  mobileBreakpointBehaviorProp: MobileBreakpointBehavior; \n  picturePositionProp: PicturePosition;\n}\n\nconst ImgComponent = styled.img<ImgComponentProps>(props => {\n  let imageSpecificAspectRatio: CSS.Property.AspectRatio;\n  switch (props.imageAspectRatioProp) {\n    case \"native\":\n      imageSpecificAspectRatio = \"auto\";\n      break;\n    default:\n      imageSpecificAspectRatio = props.imageAspectRatioProp === \"1/1\" ? \"1 / 1\" : props.imageAspectRatioProp;\n  }\n\n  const baseImageStyles: React.CSSProperties = {\n    display: \"block\",\n    width: \"100%\", \n    height: imageSpecificAspectRatio === \"auto\" && props.imageAspectRatioProp === \"native\" ? \"auto\" : \"100%\",\n    objectFit: props.userImageStyleProps.objectFit || props.imageObjectFitProp,\n  };\n  if (props.imageAspectRatioProp === \"native\") { \n    baseImageStyles.aspectRatio = imageSpecificAspectRatio;\n  }\n\n  return {\n    ...baseImageStyles,\n    ...props.userImageStyleProps, \n    objectFit: props.userImageStyleProps.objectFit || props.imageObjectFitProp,\n    ...( (props.imageAspectRatioProp === \"native\" && !props.userImageStyleProps.aspectRatio) && \n        { aspectRatio: imageSpecificAspectRatio } )\n  };\n});\n\nconst StyledImageContainer = styled.div<StyledImageContainerProps>(props => {\n  const isCurrentlyHorizontal = props.isHorizontalProp &&\n    !( (props.mobileBreakpointBehaviorProp === 'stack top' || props.mobileBreakpointBehaviorProp === 'stack bottom') && \n        typeof window !== 'undefined' && window.innerWidth <= 600);\n\n  const baseStyles: CSS.Properties<string | number> & { [key: string]: any } = { \n    display: 'flex', \n    justifyContent: 'center',\n    alignItems: 'center',\n    overflow: 'hidden', \n    flexShrink: isCurrentlyHorizontal ? 0 : undefined, \n    width: isCurrentlyHorizontal ? `${props.imageWidthPercentProp}%` : \"100%\",\n    marginLeft: isCurrentlyHorizontal && props.picturePositionProp === \"right\" ? \"12px\" : \"0\",\n    marginRight: isCurrentlyHorizontal && props.picturePositionProp === \"left\" ? \"12px\" : \"0\",\n    marginTop: !isCurrentlyHorizontal && props.picturePositionProp === \"bottom\" ? \"12px\" : \"0\",\n    marginBottom: !isCurrentlyHorizontal && props.picturePositionProp === \"top\" ? \"12px\" : \"0\",\n    borderRadius: props.isHorizontalProp\n      ? props.picturePositionProp === \"left\"\n        ? `${props.cardBorderRadiusProp} 0 0 ${props.cardBorderRadiusProp}`\n        : `0 ${props.cardBorderRadiusProp} ${props.cardBorderRadiusProp} 0`\n      : props.picturePositionProp === \"top\"\n      ? `${props.cardBorderRadiusProp} ${props.cardBorderRadiusProp} 0 0`\n      : `0 0 ${props.cardBorderRadiusProp} ${props.cardBorderRadiusProp}`,\n  };\n  \n  const propAspectRatio = props.imageAspectRatioProp;\n  if (propAspectRatio !== \"native\") { \n      baseStyles.aspectRatio = propAspectRatio === \"1/1\" ? \"1 / 1\" : propAspectRatio;\n  }\n\n  let responsiveStyles = {};\n  if (props.isHorizontalProp && (props.mobileBreakpointBehaviorProp === 'stack top' || props.mobileBreakpointBehaviorProp === 'stack bottom')) {\n    const mobileSpecificStyles: CSS.Properties<string | number> = {\n        width: \"100%\", \n        flexBasis: \"auto\", \n        flexShrink: undefined,\n        marginLeft: \"0\",\n        marginRight: \"0\",\n        marginTop: \"0\", \n        marginBottom: \"0\",\n        borderRadius: props.mobileBreakpointBehaviorProp === 'stack top' \n            ? `${props.cardBorderRadiusProp} ${props.cardBorderRadiusProp} 0 0` \n            : `0 0 ${props.cardBorderRadiusProp} ${props.cardBorderRadiusProp}`,\n    };\n    if (props.mobileBreakpointBehaviorProp === 'stack top') { \n        mobileSpecificStyles.marginBottom = \"12px\";\n    } else { \n        mobileSpecificStyles.marginTop = \"12px\";\n    }\n    responsiveStyles = {\n        \"@media (max-width: 600px)\": mobileSpecificStyles\n    };\n  }\n  return {\n    ...baseStyles,\n    ...responsiveStyles, \n  };\n});\n\nconst StyledCard = styled.div<StyledCardProps>(props => {\n  const baseStyles: React.CSSProperties = {\n    display: \"flex\",\n    width: \"100%\", \n    height: \"auto\",\n    fontFamily: `${props.themeFont}, sans-serif`,\n    backgroundColor: props.themeSecondaryBackgroundColor,\n    borderRadius: props.cardBorderRadiusProp,\n    boxShadow: \"0 6px 20px rgba(0,0,0,0.08)\", \n    overflow: \"hidden\", \n    position: \"relative\",\n    cursor: props.hasButton ? \"default\" : (props.onClick ? \"pointer\" : \"default\"),\n    flexDirection: props.isHorizontalProp ? \"row\" : \"column\",\n  };\n\n  const conditionalStyles: { [key: string]: any } = {}; \n\n  if (props.enableAnimationProp) {\n    conditionalStyles.willChange = \"transform, box-shadow\"; \n    conditionalStyles.transition = \"transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out\"; \n    conditionalStyles[\"&:hover\"] = { \n      transform: \"scale(1.03)\",\n      boxShadow: \"0 8px 25px rgba(0,0,0,0.12)\",\n    };\n    conditionalStyles[\"&:active\"] = { \n      transform: \"scale(0.98)\",\n    };\n  }\n  \n  if (props.isHorizontalProp) { \n    let mobileFlexDirection: CSS.Property.FlexDirection = \"column\"; \n\n    if (props.mobileBreakpointBehaviorProp === \"stack top\") {\n        mobileFlexDirection = props.picturePositionProp === \"right\" ? \"column-reverse\" : \"column\";\n    } else if (props.mobileBreakpointBehaviorProp === \"stack bottom\") {\n        mobileFlexDirection = props.picturePositionProp === \"left\" ? \"column-reverse\" : \"column\";\n    }\n     if (props.mobileBreakpointBehaviorProp === \"stack top\" || props.mobileBreakpointBehaviorProp === \"stack bottom\") {\n        conditionalStyles[\"@media (max-width: 600px)\"] = {\n          ...(conditionalStyles[\"@media (max-width: 600px)\"] as object), \n          flexDirection: mobileFlexDirection, \n        };\n     }\n  }\n  \n  return {\n    ...baseStyles,\n    ...conditionalStyles,\n    ...props.userCardStyleProps, \n  };\n});\n\nconst StyledContent = styled.div<StyledContentProps>(props => {\n  const baseStyles: React.CSSProperties = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\", \n    padding: \"20px\",\n    minWidth: 0, \n    boxSizing: \"border-box\",\n    flexGrow: props.isHorizontalProp ? 1 : undefined, \n    flexBasis: props.isHorizontalProp ? \"0px\" : \"auto\",  \n    width: \"100%\", \n  };\n  \n  const responsiveStyles: { [key: string]: any } = {}; \n  if (props.isHorizontalProp && (props.mobileBreakpointBehaviorProp === 'stack top' || props.mobileBreakpointBehaviorProp === 'stack bottom')) {\n     const mobileSpecificContentStyles: React.CSSProperties = {\n        flexGrow: 0, \n        flexBasis: \"auto\",\n        width: \"100%\", \n        padding: \"20px\", \n     };\n     if (props.mobileBreakpointBehaviorProp === 'stack top'){ \n        mobileSpecificContentStyles.paddingTop = (props.picturePositionProp === \"left\" || props.picturePositionProp === \"right\") ? \"0px\" : \"20px\";\n     }\n     if (props.mobileBreakpointBehaviorProp === 'stack bottom'){ \n        mobileSpecificContentStyles.paddingBottom = (props.picturePositionProp === \"left\" || props.picturePositionProp === \"right\") ? \"0px\" : \"20px\";\n     }\n     responsiveStyles[\"@media (max-width: 600px)\"] = mobileSpecificContentStyles;\n  }\n\n  return {\n    ...baseStyles,\n    ...responsiveStyles,\n    ...props.userContentStyleProps, \n  };\n});\n\nexport default withStreamlitConnection(ProductCardComponent);\n\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport Card from \"./stCard\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Card />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}