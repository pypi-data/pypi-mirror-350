{"version":3,"sources":["stCard.tsx","index.tsx"],"names":["ProductCardComponent","onCardClick","Streamlit","setComponentValue","buttonClicked","onButtonClick","e","stopPropagation","setComponentReady","setFrameHeight","_this$props","this","props","args","theme","react_default","a","createElement","style","color","padding","productName","_args$description","description","price","productImage","_args$buttonText","buttonText","useButton","picturePosition","picturePaddings","enableAnimation","styles","isHorizontal","flexDirection","rawBorder","card","borderRadius","slotRadius","undefined","cardRadius","concat","Card","styled","div","Object","objectSpread","display","fontFamily","font","backgroundColor","secondaryBackgroundColor","boxShadow","overflow","maxWidth","margin","position","cursor","transform","transition","&:hover","&:active","Image","img","width","height","objectFit","marginLeft","marginRight","marginTop","marginBottom","boxSizing","image","Content","flex","justifyContent","Title","h3","fontSize","textColor","title","Text","lineHeight","text","PriceTag","fontWeight","primaryColor","Button","button","border","alignSelf","descContent","map","line","i","key","onClick","src","alt","length","StreamlitComponentBase","withStreamlitConnection","ReactDOM","render","StrictMode","stCard","document","getElementById"],"mappings":"mOAsCMA,6MAUIC,YAAc,WACpBC,IAAUC,kBAAkB,CAAEC,eAAe,OAGvCC,cAAgB,SACtBC,GAEAA,EAAEC,kBACFL,IAAUC,kBAAkB,CAAEC,eAAe,wFAhB7CF,IAAUM,oBACVN,IAAUO,8DAIVP,IAAUO,kDAcQ,IAAAC,EACMC,KAAKC,MAArBC,EADUH,EACVG,KAAMC,EADIJ,EACJI,MACd,IAAKA,EACH,OACEC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,MAAO,MAAOC,QAAS,KAArC,6EAJc,IAWhBC,EAUER,EAVFQ,YAXgBC,EAqBdT,EATFU,mBAZgB,IAAAD,EAYF,GAZEA,EAahBE,EAQEX,EARFW,MACAC,EAOEZ,EAPFY,aAdgBC,EAqBdb,EANFc,kBAfgB,IAAAD,EAeH,cAfGA,EAgBhBE,EAKEf,EALFe,UACAC,EAIEhB,EAJFgB,gBACAC,EAGEjB,EAHFiB,gBACAC,EAEElB,EAFFkB,gBACAC,EACEnB,EADFmB,OAGIC,EACgB,SAApBJ,GAAkD,UAApBA,EAC1BK,EAAgBD,EAAe,MAAQ,SAKvCE,EAAYH,EAAOI,MAAQJ,EAAOI,KAAKC,aACvCC,EACiB,kBAAdH,GAA+C,kBAAdA,EACpCA,OACAI,EACAC,EACkB,kBAAfF,EACHA,EACA,GAAAG,OAAsB,kBAAfH,EACJA,EAXa,GAUhB,MAKAI,EAAOC,IAAOC,IAAPC,OAAAC,EAAA,EAAAD,CAAA,CACXE,QAAS,OACTb,gBACAc,WAAU,GAAAP,OAAK3B,EAAMmC,KAAX,gBACVC,gBAAiBpC,EAAMqC,yBACvBd,aAAcG,EACdY,UAAW,8BACXC,SAAU,SACVC,SAAUrB,EAAe,IAAM,IAC/BsB,OAAQ,OACRC,SAAU,WACVC,OAAQ7B,EAAY,UAAY,WAC5BG,GAAmB,CACrB2B,UAAW,cACXC,WAAY,6BACZC,UAAW,CAAEF,UAAW,YACxBG,WAAY,CAAEH,UAAW,gBAExB1B,EAAOI,OAIN0B,EAAQnB,IAAOoB,IAAPlB,OAAAC,EAAA,EAAAD,CAAA,CACZmB,MAAO/B,EAAe,IAAM,OAC5BgC,OAAQhC,EAAe,OAAS,IAChCiC,UAAW,QACX7B,aAAcP,EACVU,EACAP,EACoB,SAApBJ,EAAA,GAAAY,OACKD,EADL,SAAAC,OACuBD,GADvB,KAAAC,OAEOD,EAFP,KAAAC,OAEqBD,EAFrB,MAGoB,QAApBX,EAAA,GAAAY,OACGD,EADH,KAAAC,OACiBD,EADjB,eAAAC,OAEOD,EAFP,KAAAC,OAEqBD,GACzB2B,WACElC,GAAoC,UAApBJ,EAA8B,GAAK,EACrDuC,YACEnC,GAAoC,SAApBJ,EAA6B,GAAK,EACpDwC,UACGpC,GAAoC,WAApBJ,EAAoC,EAAL,GAClDyC,aACGrC,GAAoC,QAApBJ,EAAiC,EAAL,IAC3CC,EACA,CAAEV,QAAS,GAAImD,UAAW,cAC1B,GACDvC,EAAOwC,QAINC,EAAU9B,IAAOC,IAAPC,OAAAC,EAAA,EAAAD,CAAA,CACd6B,KAAM,EACNtD,QAAS,GACT2B,QAAS,OACTb,cAAe,SACfyC,eAAgB,iBACb3C,EAAOI,OAGNwC,EAAQjC,IAAOkC,GAAPhC,OAAAC,EAAA,EAAAD,CAAA,CACZU,OAAQ,EACRuB,SAAU,SACV3D,MAAOL,EAAMiE,WACV/C,EAAOgD,QAGNC,EAAOtC,IAAOC,IAAPC,OAAAC,EAAA,EAAAD,CAAA,CACXiC,SAAU,UACV3D,MAAOL,EAAMiE,UACbxB,OAAQ,aACR2B,WAAY,KACTlD,EAAOmD,OAGNC,EAAWzC,IAAOC,IAAPC,OAAAC,EAAA,EAAAD,CAAA,CACfiC,SAAU,SACVO,WAAY,IACZlE,MAAOL,EAAMwE,cACVtD,EAAOR,QAGN+D,EAAS5C,IAAO6C,OAAP3C,OAAAC,EAAA,EAAAD,CAAA,CACbK,gBAAiBpC,EAAMwE,aACvBnE,MAAO,OACPsE,OAAQ,OACRrE,QAAS,YACTiB,aAAc,EACdoB,OAAQ,UACRqB,SAAU,SACVY,UAAWzD,EAAe,aAAe,UACtCD,EAAOwD,SAGNG,EAA2BpE,EAAYqE,IAC3C,SAACC,EAAcC,GAAf,OACE/E,EAAAC,EAAAC,cAAA,QAAM8E,IAAKD,GACRD,EACD9E,EAAAC,EAAAC,cAAA,cAKN,OACEF,EAAAC,EAAAC,cAACyB,EAAD,CAAMsD,QAAUpE,OAA+BW,EAAnB5B,KAAKV,cACT,QAApB4B,GACoB,SAApBA,IACAJ,GAAgBV,EAAAC,EAAAC,cAAC6C,EAAD,CAAOmC,IAAKxE,EAAcyE,IAAK7E,IAEjDN,EAAAC,EAAAC,cAACwD,EAAD,KACE1D,EAAAC,EAAAC,cAAC2D,EAAD,KAAQvD,GACPE,EAAY4E,OAAS,GAAKpF,EAAAC,EAAAC,cAACgE,EAAD,KAAOU,GACjCnE,GAAST,EAAAC,EAAAC,cAACmE,EAAD,KAAW5D,GACpBI,GACCb,EAAAC,EAAAC,cAACsE,EAAD,CAAQS,QAASrF,KAAKN,eAAgBsB,KAIpB,WAApBE,GACoB,UAApBA,IACAJ,GAAgBV,EAAAC,EAAAC,cAAC6C,EAAD,CAAOmC,IAAKxE,EAAcyE,IAAK7E,YAvLtB+E,KA6LpBC,cAAwBrG,GC/NvCsG,IAASC,OACPxF,EAAAC,EAAAC,cAACF,EAAAC,EAAMwF,WAAP,KACEzF,EAAAC,EAAAC,cAACwF,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.daf9ec54.chunk.js","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\";\nimport React, { ReactNode } from \"react\";\nimport styled from \"@emotion/styled\";\n\ntype PicturePosition = \"top\" | \"bottom\" | \"left\" | \"right\";\n\ninterface ProductCardProps {\n  args: {\n    productName: string;\n    description?: string[];\n    price?: string;\n    productImage?: string;\n    buttonText?: string;\n    useButton: boolean;\n    picturePosition: PicturePosition;\n    picturePaddings: boolean;\n    enableAnimation: boolean;\n    styles: {\n      card?: React.CSSProperties;\n      title?: React.CSSProperties;\n      text?: React.CSSProperties;\n      price?: React.CSSProperties;\n      button?: React.CSSProperties;\n      image?: React.CSSProperties;\n    };\n  };\n  theme?: {\n    font?: string;\n    secondaryBackgroundColor?: string;\n    textColor?: string;\n    primaryColor?: string;\n  };\n}\n\nclass ProductCardComponent extends StreamlitComponentBase<ProductCardProps> {\n  componentDidMount(): void {\n    Streamlit.setComponentReady();\n    Streamlit.setFrameHeight();\n  }\n\n  componentDidUpdate(): void {\n    Streamlit.setFrameHeight();\n  }\n\n  private onCardClick = (): void => {\n    Streamlit.setComponentValue({ buttonClicked: true });\n  };\n\n  private onButtonClick = (\n    e: React.MouseEvent<HTMLButtonElement>\n  ): void => {\n    e.stopPropagation();\n    Streamlit.setComponentValue({ buttonClicked: true });\n  };\n\n  render(): ReactNode {\n    const { args, theme } = this.props;\n    if (!theme) {\n      return (\n        <div style={{ color: \"red\", padding: 10 }}>\n          ⚠️ Streamlit theme not found — upgrade to Streamlit 1.10+.\n        </div>\n      );\n    }\n\n    const {\n      productName,\n      description = [],\n      price,\n      productImage,\n      buttonText = \"Add to Cart\",\n      useButton,\n      picturePosition,\n      picturePaddings,\n      enableAnimation,\n      styles,\n    } = args;\n\n    const isHorizontal =\n      picturePosition === \"left\" || picturePosition === \"right\";\n    const flexDirection = isHorizontal ? \"row\" : \"column\";\n\n    // 1) Compute the card's borderRadius (string)\n    const defaultRadius = 12;\n    // no optional chaining—fall back safely\n    const rawBorder = styles.card && styles.card.borderRadius;\n    const slotRadius =\n      typeof rawBorder === \"string\" || typeof rawBorder === \"number\"\n        ? rawBorder\n        : undefined;\n    const cardRadius =\n      typeof slotRadius === \"string\"\n        ? slotRadius\n        : typeof slotRadius === \"number\"\n        ? `${slotRadius}px`\n        : `${defaultRadius}px`;\n\n    // 2) Card container\n    const Card = styled.div({\n      display: \"flex\",\n      flexDirection,\n      fontFamily: `${theme.font}, sans-serif`,\n      backgroundColor: theme.secondaryBackgroundColor,\n      borderRadius: cardRadius,\n      boxShadow: \"0 6px 20px rgba(0,0,0,0.12)\",\n      overflow: \"hidden\",\n      maxWidth: isHorizontal ? 500 : 320,\n      margin: \"auto\",\n      position: \"relative\",\n      cursor: useButton ? \"default\" : \"pointer\",\n      ...(enableAnimation && {\n        transform: \"scale(0.95)\",\n        transition: \"transform 0.2s ease-in-out\",\n        \"&:hover\": { transform: \"scale(1)\" },\n        \"&:active\": { transform: \"scale(0.95)\" },\n      }),\n      ...styles.card,\n    });\n\n    // 3) Image styling with matching radius when padded\n    const Image = styled.img({\n      width: isHorizontal ? 180 : \"100%\",\n      height: isHorizontal ? \"auto\" : 180,\n      objectFit: \"cover\",\n      borderRadius: picturePaddings\n        ? cardRadius\n        : isHorizontal\n        ? picturePosition === \"left\"\n          ? `${cardRadius} 0 0 ${cardRadius}`\n          : `0 ${cardRadius} ${cardRadius} 0`\n        : picturePosition === \"top\"\n        ? `${cardRadius} ${cardRadius} 0 0`\n        : `0 0 ${cardRadius} ${cardRadius}`,\n      marginLeft:\n        isHorizontal && picturePosition === \"right\" ? 12 : 0,\n      marginRight:\n        isHorizontal && picturePosition === \"left\" ? 12 : 0,\n      marginTop:\n        !isHorizontal && picturePosition === \"bottom\" ? 12 : 0,\n      marginBottom:\n        !isHorizontal && picturePosition === \"top\" ? 12 : 0,\n      ...(picturePaddings\n        ? { padding: 12, boxSizing: \"border-box\" }\n        : {}),\n      ...styles.image,\n    });\n\n    // 4) Content\n    const Content = styled.div({\n      flex: 1,\n      padding: 20,\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"space-between\",\n      ...styles.card,\n    });\n\n    const Title = styled.h3({\n      margin: 0,\n      fontSize: \"1.1rem\",\n      color: theme.textColor,\n      ...styles.title,\n    });\n\n    const Text = styled.div({\n      fontSize: \"0.85rem\",\n      color: theme.textColor,\n      margin: \"8px 0 12px\",\n      lineHeight: 1.4,\n      ...styles.text,\n    });\n\n    const PriceTag = styled.div({\n      fontSize: \"1.3rem\",\n      fontWeight: 600,\n      color: theme.primaryColor,\n      ...styles.price,\n    });\n\n    const Button = styled.button({\n      backgroundColor: theme.primaryColor,\n      color: \"#fff\",\n      border: \"none\",\n      padding: \"10px 16px\",\n      borderRadius: 6,\n      cursor: \"pointer\",\n      fontSize: \"0.9rem\",\n      alignSelf: isHorizontal ? \"flex-start\" : \"center\",\n      ...styles.button,\n    });\n\n    const descContent: ReactNode[] = description.map(\n      (line: string, i: number) => (\n        <span key={i}>\n          {line}\n          <br />\n        </span>\n      )\n    );\n\n    return (\n      <Card onClick={!useButton ? this.onCardClick : undefined}>\n        {(picturePosition === \"top\" ||\n          picturePosition === \"left\") &&\n          productImage && <Image src={productImage} alt={productName} />}\n\n        <Content>\n          <Title>{productName}</Title>\n          {description.length > 0 && <Text>{descContent}</Text>}\n          {price && <PriceTag>{price}</PriceTag>}\n          {useButton && (\n            <Button onClick={this.onButtonClick}>{buttonText}</Button>\n          )}\n        </Content>\n\n        {(picturePosition === \"bottom\" ||\n          picturePosition === \"right\") &&\n          productImage && <Image src={productImage} alt={productName} />}\n      </Card>\n    );\n  }\n}\n\nexport default withStreamlitConnection(ProductCardComponent);","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport Card from \"./stCard\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Card />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}