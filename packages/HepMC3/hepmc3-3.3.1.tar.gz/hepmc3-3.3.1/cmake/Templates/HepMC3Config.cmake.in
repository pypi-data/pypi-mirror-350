@PACKAGE_INIT@

SET(HEPMC3_VERSION @HEPMC3_VERSION@)
SET(HEPMC3_VERSION_MAJOR  @HEPMC3_VERSION_MAJOR@)
SET(HEPMC3_VERSION_MINOR  @HEPMC3_VERSION_MINOR@)
SET(HEPMC3_VERSION_PATCH  @HEPMC3_VERSION_PATCH@)


set_and_check(HEPMC3_INCLUDE_DIR @PACKAGE_CMAKE_INSTALL_INCLUDEDIR@)
set(HEPMC3_CXX_STANDARD @HEPMC3_CXX_STANDARD@)
set(HEPMC3_FEATURES @HEPMC3_FEATURES@)
set(HEPMC3_COMPONENTS @HEPMC3_COMPONENTS@)

if(EXISTS @PACKAGE_INTERFACES_INSTALL_DIR@)
  set(HEPMC3_INTERFACES_DIR @PACKAGE_INTERFACES_INSTALL_DIR@)
endif()

find_library(HEPMC3_LIB NAMES HepMC3 HINTS @PACKAGE_CMAKE_INSTALL_LIBDIR@)
find_library(HEPMC3_SEARCH_LIB NAMES HepMC3search HINTS @PACKAGE_CMAKE_INSTALL_LIBDIR@)
find_library(HEPMC3_ROOTIO_LIB NAMES HepMC3rootIO HINTS @PACKAGE_HEPMC3_ROOTIO_INSTALL_LIBDIR@)
find_library(HEPMC3_PROTOBUFIO_LIB NAMES HepMC3protobufIO HINTS @PACKAGE_CMAKE_INSTALL_LIBDIR@)

set(HEPMC3_LIBRARIES ${HEPMC3_LIB})
if(EXISTS ${HEPMC3_SEARCH_LIB})
  list( APPEND  HEPMC3_LIBRARIES ${HEPMC3_SEARCH_LIB})
endif()
if(EXISTS ${HEPMC3_ROOTIO_LIB})
  list( APPEND  HEPMC3_LIBRARIES ${HEPMC3_ROOTIO_LIB})
endif()
if(EXISTS ${HEPMC3_PROTOBUFIO_LIB})
  list( APPEND  HEPMC3_LIBRARIES ${HEPMC3_PROTOBUFIO_LIB})
endif()

include(${CMAKE_CURRENT_LIST_DIR}/HepMC3Targets.cmake)

if (TARGET HepMC3All)
  message(STATUS "WARNING: Please note that multiple calls to find_package(HepMC3) are not recommended!")
else()
add_library(HepMC3All INTERFACE)
target_link_libraries(HepMC3All INTERFACE HepMC3::HepMC3)

if(TARGET HepMC3::HepMC3_static)
  add_library(HepMC3All_static INTERFACE)
  target_link_libraries(HepMC3All_static INTERFACE HepMC3::HepMC3_static)
endif()

foreach(_comp ${HEPMC3_COMPONENTS})
  if(EXISTS ${CMAKE_CURRENT_LIST_DIR}/HepMC3${_comp}Targets.cmake)
    include(${CMAKE_CURRENT_LIST_DIR}/HepMC3${_comp}Targets.cmake)
    target_link_libraries(HepMC3All INTERFACE HepMC3::${_comp})
    if(TARGET HepMC3::${_comp}_static)
      target_link_libraries(HepMC3All_static INTERFACE HepMC3::${_comp}_static)
    endif()
  endif()
endforeach()

add_library(HepMC3::All ALIAS HepMC3All)
if(TARGET HepMC3All_static)
  add_library(HepMC3::All_static ALIAS HepMC3All_static)
endif()

foreach(_comp ${HepMC3_FIND_COMPONENTS})
  set(_comps "@HEPMC3_COMPONENTS@")
  if(NOT _comp IN_LIST _comps)
    message(WARNING "Unsupported component ${_comp}")
    set(HepMC3_${_comp}_FOUND False)
  else()
    if(TARGET HepMC3::${_comp})
      set(HepMC3_${_comp}_FOUND True)
    else()
      message(WARNING "Uninstalled component ${_comp}")
      set(HepMC3_${_comp}_FOUND False)
    endif()
  endif()
endforeach()
endif()

check_required_components(HepMC3)
