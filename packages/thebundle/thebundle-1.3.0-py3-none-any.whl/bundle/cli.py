import rich_click as click

from bundle.core import logger, tracer

log = logger.get_logger(__name__)

click.rich_click.SHOW_ARGUMENTS = True

banner = """
╔═════════════════════════════════╗
║       T H E   B U N D L E       ║
╚═════════════════════════════════╝                                                                                                                                                     
"""

click.echo(click.style(banner, fg="green"))


@click.group(name="bundle")
@tracer.Sync.decorator.call_raise
async def main():
    pass


@main.command()
@tracer.Sync.decorator.call_raise
async def version():
    """The Bundle Package version"""
    try:
        # generated by setuptools_scm into bundle/_version.py
        from bundle._version import version
    except ImportError:
        version = "unknown"
    log.info(f"Version: {version}")


def add_cli_submodule(submodule_name: str) -> None:
    """Dynamically imports a subcommand and adds it to the CLI group.

    Assumes each submodule has a `cli` module and within that module an attribute
    with the same name as the submodule, e.g. `bundle.scraper.cli` has `scraper`.

    Args:
        submodule_name (str): The name of the submodule to import.
    """
    try:
        # Import the cli module from the submodule
        module = __import__(f"bundle.{submodule_name}.cli", fromlist=[submodule_name])
        command = getattr(module, submodule_name, None)
        if command:
            main.add_command(command)
        else:
            log.warning(f"Command '{submodule_name}' not found in module {module}.")
    except ImportError as e:
        log.warning(f"Module 'bundle.{submodule_name}.cli' could not be imported -> {e}")


add_cli_submodule("testing")
add_cli_submodule("scraper")
add_cli_submodule("website")
add_cli_submodule("youtube")
add_cli_submodule("pybind")
