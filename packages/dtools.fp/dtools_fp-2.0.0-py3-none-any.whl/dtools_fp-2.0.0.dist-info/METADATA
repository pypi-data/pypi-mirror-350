Metadata-Version: 2.4
Name: dtools.fp
Version: 2.0.0
Summary: ### Developer Tools - Pythonic functional programming
Keywords: functional,functional programming,fp,monad,maybe,either,lazy,non-strict
Author-email: "Geoffrey R. Scheller" <geoffrey@scheller.com>
Requires-Python: >=3.12
Description-Content-Type: text/markdown
Classifier: Development Status :: 5 - Production/Stable
Classifier: Framework :: Pytest
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.13
Classifier: Typing :: Typed
License-File: LICENSE
Requires-Dist: dtools.circular-array>=3.15.0, <3.16
Requires-Dist: dtools.containers >=1.0.0, <1.1
Requires-Dist: pytest >=8.3.5 ; extra == "test"
Requires-Dist: dtools.iterables >=2.0.0, <2.1 ; extra == "test"
Requires-Dist: dtools.queues >=2.0.0, <2.1 ; extra == "test"
Project-URL: Changelog, https://github.com/grscheller/dtools-fp/blob/main/CHANGELOG.md
Project-URL: Documentation, https://grscheller.github.io/dtools-namespace-projects/fp
Project-URL: Homepage, https://github.com/grscheller/dtools-namespace-projects/blob/main/README.md
Project-URL: Source, https://github.com/grscheller/dtools-fp
Provides-Extra: test

# Developer Tools - Pythonic functional programming

Functional programming tools which endeavor to be Pythonic. This project
is part of the [Developer Tools for Python][4] **dtools** namespace
project.

- **Repositories**
  - [dtools.fp][1] project on *PyPI*
  - [Source code][2] on *GitHub*
- Detailed documentation for dtools.fp
  - [Detailed API documentation][3] on *GH-Pages*

## Overview

- Benefits of FP
  - improved composability
  - avoid hard to refactor exception driven code paths
  - data sharing becomes trivial when immutability leveraged

The dtools.fp package consists of 4 modules.

______________________________________________________________________

### Functions as first class objects

  - dtools.fp.function
    - utilities to manipulate and partially apply functions

______________________________________________________________________

### Lazy function evaluation

- dtools.fp.lazy
  - lazy (non-strict) function evaluation

______________________________________________________________________

### Singletons

- dtools.fp.singletons
  - 3 singleton classes representing
    - a missing value (actually missing, not potentially missing)
    - a sentinel value
    - a failed calculation

______________________________________________________________________

### State monad implementation

- dtools.fp.state
  - pure FP handling of state (the state monad)

______________________________________________________________________

[1]: https://pypi.org/project/dtools.fp/
[2]: https://github.com/grscheller/dtools-fp/
[3]: https://grscheller.github.io/dtools-namespace-projects/fp/
[4]: https://github.com/grscheller/dtools-namespace-projects/blob/main/README.md

