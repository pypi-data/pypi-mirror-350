Metadata-Version: 2.1
Name: multimind-sdk
Version: 0.1.0
Summary: A unified interface for multiple LLM providers and local models
Home-page: https://github.com/multimindlabs/multimind-sdk
Author: AI2Innovate Team
Author-email: contact@multimind.dev
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Provides-Extra: dev
Provides-Extra: gateway
Provides-Extra: full
License-File: LICENSE

<!--
  MultiMind SDK - Unified AI Development Toolkit
  Description: A powerful Python SDK for fine-tuning, RAG systems, and AI agent development
  Keywords: AI development, fine-tuning, RAG, LLM, machine learning, Python SDK, LangChain, CrewAI, LiteLLM, SuperAGI
  Author: AI2Innovate Team
  Version: 0.1.0
-->

<!-- Logo -->
<p align="center">
  <img src="assets/Logo-with-name-final2.png" alt="MultiMind SDK - Unified AI Development Toolkit Logo" width="320"/>
</p>

<h1 align="center">MultiMind SDK: Unified AI Development Toolkit</h1>

<p align="center">
  <strong>Build, Fine-Tune, and Deploy Advanced AI Applications with Ease</strong>
</p>

<p align="center">
  <a href="https://pypi.org/project/multimind-sdk/"><img src="https://img.shields.io/pypi/v/multimind-sdk.svg" alt="MultiMind SDK PyPI version"></a>
  <a href="https://pypi.org/project/multimind-sdk/"><img src="https://img.shields.io/pypi/pyversions/multimind-sdk.svg" alt="MultiMind SDK Python versions"></a>
  <a href="https://github.com/multimind-dev/multimind-sdk/blob/main/LICENSE"><img src="https://img.shields.io/github/license/multimind-dev/multimind-sdk.svg" alt="MultiMind SDK License"></a>
  <a href="https://github.com/multimind-dev/multimind-sdk/stargazers"><img src="https://img.shields.io/github/stars/multimind-dev/multimind-sdk.svg" alt="MultiMind SDK GitHub Stars"></a>
</p>

<div align="center">
  <h2>üöß Project Status: In Active Development üöß</h2>
  <p>Join the future of AI development! We're actively building MultiMind SDK and looking for contributors. Check our <a href="docs/TODO.md">TODO list</a> to see what's implemented and what's coming next. Connect with our growing community on <a href="https://discord.gg/K64U65je7h" aria-label="Join MultiMind SDK Discord Community">Discord</a> to discuss ideas, get help, and contribute to the project.</p>
</div>

<p align="center">
  <a href="#why-multimind-sdk">Why MultiMind SDK?</a> ‚Ä¢
  <a href="#key-features">Key Features</a> ‚Ä¢
  <a href="#quick-start">Quick Start</a> ‚Ä¢
  <a href="#documentation">Documentation</a> ‚Ä¢
  <a href="#examples">Examples</a> ‚Ä¢
  <a href="#contributing">Contributing</a>
</p>

[![üíñ Support MultiMind SDK](https://img.shields.io/badge/üíñ_Support-MultiMind%20SDK-blueviolet?style=for-the-badge)](https://opencollective.com/multimind-sdk)



## Why MultiMind SDK?

## üöÄ Why MultiMind SDK?

> üß† **MultiMind SDK is the only open-source toolkit that unifies Fine-Tuning, RAG, and Agent Orchestration** ‚Äî all in one modular, extensible Python framework.
Forget silos. While others focus on chaining, agents, or retrieval alone, **MultiMind integrates them into one coherent developer-first experience**, with:
- ü™Ñ Declarative YAML + CLI + SDK interfaces
- üìö RAG with hybrid (vector + knowledge graph) retrieval
- ü§ñ Role-based agents with memory, tools, and task flow
- üîÅ Self-improving agents with cognitive loop support
- üîê Enterprise-ready: logging, compliance, GDPR, cost tracking
- üåç Cloud + Edge deploy (Jetson, RPi, Offline mode)

üìë Check out our [Strategic Roadmap](docs/roadmap.md) to see where we're headed!

### Key Benefits

- **üöÄ Unified Interface**: Streamline your AI development with one consistent API
- **üí° Production-Ready**: Enterprise-grade deployment, monitoring, and scaling
- **üõ†Ô∏è Framework Agnostic**: Seamless integration with LangChain, CrewAI, and more
- **üîå Extensible**: Customizable architecture for your specific needs
- **üìä Enterprise Features**: Comprehensive logging, monitoring, and cost tracking

## ‚ú® Key Features

### 1. Advanced Fine-Tuning

- **Parameter-Efficient Methods**: LoRA, Adapters, Prefix Tuning, and more
- **Meta-Learning**: MAML, Reptile, and prototype-based few-shot learning

- **Transfer Learning**: Layer transfer and multi-task optimization
- **Resource-Aware Training**: Automatic device selection and optimization

### 2. RAG System

- **Document Processing**: Smart chunking and metadata management
- **Vector Storage**: Support for FAISS and ChromaDB
- **Embedding Models**: Integration with OpenAI, HuggingFace, and custom models

- **Query Optimization**: Efficient similarity search and context management

### 3. Agent Development

- **Tool Integration**: Built-in support for common tools and custom extensions
- **Memory Management**: Short and long-term memory systems
- **Task Orchestration**: Complex workflow management and prompt chaining
- **Model Composition**: Protocol for combining multiple models and tools

### 4. Framework Integrations

- **LangChain**: Seamless integration with LangChain components
- **CrewAI**: Support for multi-agent systems
- **LiteLLM**: Unified model interface
- **SuperAGI**: Advanced agent capabilities

## üöÄ Quick Start

### Installation

```bash
# Basic installation
pip install multimind-sdk

# With development dependencies
pip install multimind-sdk[dev]

# With specific framework support
pip install multimind-sdk[langchain,lite-llm,superagi]
```

### Environment Setup

Copy the example environment file and add your API keys and configuration values:

```bash
cp examples/multi-model-wrapper/.env.example examples/multi-model-wrapper/.env
```

> **Note:** Never commit your `.env` file to version control. Only `.env.example` should be tracked in git.

### Build Your First RAG Application

```python
from multimind.client.rag_client import RAGClient, Document

# Initialize the client
client = RAGClient()

# Add documents
docs = [
    Document(
        text="MultiMind SDK is a powerful AI development toolkit.",
        metadata={"type": "introduction"}
    )
]
await client.add_documents(docs)

# Query the system
results = await client.query("What is MultiMind SDK?")
print(results)
```

### Fine-Tuning a Model

```python
from multimind.fine_tuning import UniPELTPlusTuner

# Initialize the tuner
tuner = UniPELTPlusTuner(
    base_model_name="bert-base-uncased",
    output_dir="./output",
    available_methods=["lora", "adapter"]
)

# Train the model
tuner.train(
    train_dataset=your_dataset,
    eval_dataset=your_eval_dataset
)
```

## üìö Documentation

- [API Reference](https://github.com/multimindlabs/multimind-sdk/blob/develop/docs/api_reference/README.md) - Complete API documentation
- [Examples](https://github.com/multimindlabs/multimind-sdk/blob/develop/examples/README.md) - Production-ready code examples
- [Architecture](https://github.com/multimindlabs/multimind-sdk/blob/develop/docs/architecture.md) - Detailed system design
- [Contributing Guide](CONTRIBUTING.md) - Join our development team
- [Code of Conduct](CODE_OF_CONDUCT.md) - Community guidelines
- [Issue Tracker](https://github.com/multimind-dev/multimind-sdk/issues) - Report bugs or request features

### Local Documentation

```bash
# Run documentation locally
cd multimind-docs
npm install
npm start
```

## üéì Examples

Explore our [examples directory](examples/) for:

- [Basic RAG Usage](examples/rag_basic.py) - Simple RAG implementation
- [Fine-Tuning](examples/fine_tuning.py) - Model adaptation examples
- [Agent Development](examples/agent_basic.py) - Building AI agents
- [Framework Integration](examples/langchain_integration.py) - Using with popular frameworks

## ü§ù Contributing

We love your input! We want to make contributing to MultiMind SDK as easy and transparent as possible.

- [Contributing Guide](CONTRIBUTING.md) - How to contribute
- [Code of Conduct](CODE_OF_CONDUCT.md) - Community guidelines
- [Issue Tracker](https://github.com/multimind-dev/multimind-sdk/issues) - Report bugs or request features

### Development Setup

```bash
# Clone the repository
git clone https://github.com/multimind-dev/multimind-sdk.git
cd multimind-sdk

# Install development dependencies
pip install -e ".[dev]"

# Run tests
pytest

# Start documentation
cd multimind-docs
npm install
npm start
```

## üíñ Support MultiMind SDK

If you find MultiMind SDK helpful, please consider supporting us to sustain development and grow the community.

Your support will help fund:

- ‚öôÔ∏è Feature development and maintenance
- üìñ Better documentation and onboarding
- üåç Community outreach and support
- üß™ Infrastructure, testing, and CI/CD

üëâ <a href="https://opencollective.com/multimind-sdk" aria-label="Join MultiMind SDK Community">Contribute here</a>

## üìù License

This project is licensed under the Apache License 2.0 - see the [LICENSE](LICENSE) file for details.

For more information about the Apache License 2.0, visit [apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0).

## üåü Support

- [Discord Community](https://discord.gg/K64U65je7h) - Join our active developer community
- [GitHub Issues](https://github.com/multimind-dev/multimind-sdk/issues) - Get help and report issues
- [Documentation](https://github.com/multimindlabs/multimind-sdk/blob/develop/docs/README.md) - Comprehensive guides

## üì£ About

MultiMind SDK is developed and maintained by the AI2Innovate team, dedicated to simplifying AI development for everyone. Visit [multimind.dev](https://www.multimind.dev) to learn more about our mission to democratize AI development.

---

<p align="center">
  Made with ‚ù§Ô∏è by the AI2Innovate Team | <a href="https://github.com/multimind-dev/multimind-sdk/blob/main/LICENSE">License</a>
</p>
