[tool.ruff]
include = ["*.py", "*.pyi", "**/pyproject.toml"]#, "*.ipynb"]
select = [
    "ARG", "C4", "D", "E", "EM", "F", "FBT",
    "FLY", "FIX", "FURB", "N", "NPY",
    "INP", "ISC", "PERF", "PIE", "PL",
    "PTH", "RET", "RUF", "S", "T10",
    "TD", "T20", "UP", "YTT", "W",
]
ignore = ["D100", "D211", "D213", "D104", "D301", "D407", "FBT001", "FBT002", "PLR0913", "N801",
    # From here on are disabled rules to match the current project style.
    "D101", "D103", "ARG001", "PLR2004", "RUF001", "PLW0603", "D205", "RUF012"]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = ["I"]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".idea",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "output",
    "venv",
    ".pytest_cache",
    " **/.ipynb_checkpoints/**",
    "__main__.py",
]

# Same as Black.
line-length = 99

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10
target-version = "py310"

[tool.ruff.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.per-file-ignores]
"__init__.py" = ["E402", "F401"]
"**/docs/**" = ["INP001", "PTH100"]
"**/{tests,docs,tools}/*" = ["E402", "F401", "F811", "D", "S101"]

# black is the tool to format the source code
[tool.black]
line-length = 99
target-version = ['py310']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | venv
)/
'''
# isort orders and lints imports
[tool.isort]
profile = "black"
line_length = 99
multi_line_output = 3
order_by_type = false
force_alphabetical_sort_within_sections = true
force_sort_within_sections = true
combine_as_imports = true
include_trailing_comma = true
color_output = true
lines_after_imports = 2
honor_noqa = true

[tool.pylint.master]
ignore = 'tests'
load-plugins =' pylint.extensions.docparams'

[tool.pylint.messages_control]
disable = 'all,'
enable = """,
         missing-param-doc,
         differing-param-doc,
         differing-type-doc,
         missing-return-doc,
         """

[build-system]
requires = ["setuptools >= 50.3.2", "wheel"]
build-backend = "setuptools.build_meta"