name: Release on Tag

on:
  push:
    tags:
      - '*'

permissions:
  contents: write

jobs:
  build-and-release:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            arch: x64
          - os: macos-13
            platform: macos
            arch: x64
          - os: macos-14
            platform: macos
            arch: arm64
          - os: windows-latest
            platform: windows
            arch: x64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Hatch
        run: pip install hatch

      - name: Create env
        run: hatch env create

      - name: Build on Linux
        if: matrix.platform == 'linux'
        env:
          HATCH_INDEX_USER: ${{ secrets.PYPI_USERNAME }}
          HATCH_INDEX_AUTH: ${{ secrets.PYPI_PASSWORD }}
        run: |
          source $(hatch env find)/bin/activate
          pip install uv
          uv sync --active --extra dev
          hatch build
          bash scripts/resource-rcc-compile.sh
          hatch publish
          bash scripts/build/build_binaries_linux.sh

      - name: Build on macOS
        if: matrix.platform == 'macos'
        shell: bash
        run: |
          source "$(hatch env find)/bin/activate"
          pip install uv
          uv sync --active --extra dev
          hatch build
          bash scripts/resource-rcc-compile.sh
          bash scripts/build/build_binaries_mac.sh

      - name: Build on Windows
        if: matrix.platform == 'windows'
        shell: pwsh
        run: |
          $env_path = hatch env find
          & "$env_path\Scripts\Activate.ps1"
          pip install uv
          uv sync --active --extra dev
          hatch build
          .\scripts\resource-rcc-compile.ps1
          .\scripts\build\build_binaries_windows.ps1

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ matrix.platform }}-${{ matrix.arch }}
          path: |
            dist/*.whl
            dist/*.tar.gz
            dist/*.zip
            dist/*.dmg
            dist/*.exe
            dist/*.app
          retention-days: 1

  create-release:
    needs: build-and-release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist-all
          merge-multiple: true

      - name: Get release tag
        id: tag
        run: echo "RELEASE_TAG=${GITHUB_REF#refs/tags/}" >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.RELEASE_TAG }}
          files: |
            dist-all/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}