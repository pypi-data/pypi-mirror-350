# NX102_vacValve.vdb is expanded to NX102_vacValve.template by flatdb.
#
#% macro, __doc__, Template database for a vacuum valve without debounce or raw air records
#% macro, device, device name
#% macro, port, EtherIP Port Name
#% macro, tag, NX PLC tag string e.g. V (from V.Control[1])
#% macro, tagidx, NX PLC tag index number e.g. 1 (from V.Control[1])
#% macro, ILKNUM, Part of definition of gauge interlocks, Gauge NX PLC tag (Gauge.PIRG[dollar(ILKNUM)])
#
#% macro, allowpv, If specified, then only write an open command when this is non-zero. MUST have CP at the end of it. (Optional - defaults to "")
#% macro, whylocked, String to output to EDM synoptic as to precisely why the device is locked and by whom. (Optional.  Defaults to "Open command not allowed")
#
#% macro, con_label0, Label string for control value 0 (Optional - defaults to Open)
#% macro, con_label1, Label string for control value 1 (Optional - defaults to Close)
#% macro, con_label2, Label string for control value 2 (Optional - defaults to Reset)
#% macro, con_label3, Label string for control value 3 (Optional - defaults to "")
#% macro, con_label4, Label string for control value 4 (Optional - defaults to "")
#% macro, con_label5, Label string for control value 5 (Optional - defaults to "")
#% macro, con_label6, Label string for control value 6 (Optional - defaults to "")
#% macro, con_label7, Label string for control value 7 (Optional - defaults to "")
#
#% macro, sta_label0, Label string for status value 0 (Optional - defaults to Fault)
#% macro, sta_label1, Label string for status value 1 (Optional - defaults to Open)
#% macro, sta_label2, Label string for status value 2 (Optional - defaults to Opening)
#% macro, sta_label3, Label string for status value 3 (Optional - defaults to Closed)
#% macro, sta_label4, Label string for status value 4 (Optional - defaults to Closing)
#% macro, sta_label5, Label string for status value 5 (Optional - defaults to "")
#% macro, sta_label6, Label string for status value 6 (Optional - defaults to "")
#% macro, sta_label7, Label string for status value 7 (Optional - defaults to "")
#
#% macro, sta_sv0, Alarm severity for status value 0 (Optional - defaults to MAJOR)
#% macro, sta_sv1, Alarm severity for status value 1 (Optional - defaults to NO_ALARM)
#% macro, sta_sv2, Alarm severity for status value 2 (Optional - defaults to NO_ALARM)
#% macro, sta_sv3, Alarm severity for status value 3 (Optional - defaults to NO_ALARM)
#% macro, sta_sv4, Alarm severity for status value 4 (Optional - defaults to NO_ALARM)
#% macro, sta_sv5, Alarm severity for status value 5 (Optional - defaults to NO_ALARM)
#% macro, sta_sv6, Alarm severity for status value 6 (Optional - defaults to NO_ALARM)
#% macro, sta_sv7, Alarm severity for status value 7 (Optional - defaults to NO_ALARM)
#
#% macro, ilksta_label0, Label string for status value 0 (Optional - defaults to Failed)
#% macro, ilksta_label1, Label string for status value 1 (Optional - defaults to Run Ilks Ok)
#% macro, ilksta_label2, Label string for status value 2 (Optional - defaults to OK)
#% macro, ilksta_label3, Label string for status value 3 (Optional - defaults to Disarmed)
#% macro, ilksta_label4, Label string for status value 4 (Optional - defaults to "")
#% macro, ilksta_label5, Label string for status value 5 (Optional - defaults to "")
#% macro, ilksta_label6, Label string for status value 6 (Optional - defaults to "")
#% macro, ilksta_label7, Label string for status value 7 (Optional - defaults to "")
#
#% macro, ilksta_sv0, Alarm severity for interlock status value 0 (Optional - defaults to MAJOR)
#% macro, ilksta_sv1, Alarm severity for interlock status value 1 (Optional - defaults to NO_ALARM)
#% macro, ilksta_sv2, Alarm severity for interlock status value 2 (Optional - defaults to NO_ALARM)
#% macro, ilksta_sv3, Alarm severity for interlock status value 3 (Optional - defaults to NO_ALARM)
#% macro, ilksta_sv4, Alarm severity for interlock status value 4 (Optional - defaults to NO_ALARM)
#% macro, ilksta_sv5, Alarm severity for interlock status value 5 (Optional - defaults to NO_ALARM)
#% macro, ilksta_sv6, Alarm severity for interlock status value 6 (Optional - defaults to NO_ALARM)
#% macro, ilksta_sv7, Alarm severity for interlock status value 7 (Optional - defaults to NO_ALARM)
#
#% macro, mode1, name of remote operational mode (:MODE.ZNAM) (Optional - defaults Operational)
#% macro, mode2, name of local operational mode (:MODE.ONAM)  (Optional - defaults Service)
#% macro, DIRILK1, Part of ILK1 PV name (dollar(device):dollar(DIRILK1)ILK), named for "direction" of operation controlled by ILK1, e.g. set to OPEN for Bistable valve or leave blank for ordinary valve.  (Optional - defaults to "")
#% macro, DIRILK2, Part of ILK2 PV name (dollar(device):dollar(DIRILK2)ILK), named for "direction" of operation controlled by ILK2, e.g. set to CLOSE for Bistable valves (Optional - defaults to "ILK2")
#
#% macro, name, Object name and associated gui name      (Optional - defaults to "")
#% macro, desc, Box label for gui                        (Optional - defaults to value of device macro)
#
# This associates an edm screen with the template
# % gui, $(name=), edm, NX102_vacuumValve.edl, device=$(device), DIRILK1=$(DIRILK1=)
# % gui, $(name=), edmembed, NX102_vacuumValve-embed.edl, device=$(device), DIRILK1=$(DIRILK1=), box-label=$(desc=$(device))
#
# This associates BOY screens with the template
# % gui, $(name=), boydetail, dlsPLCApp_opi/NX102_vacValve_detail.opi, device=$(device), DESC=$(device), valvetype=valve
# % gui, $(name=), boyembed, dlsPLCApp_opi/NX102_vacValve_embed_box.opi, device=$(device), DESC=$(device), name=$(name=), valvetype=valve
# % gui, $(name=), boyembed, dlsPLCApp_opi/NX102_vacValve_embed.opi, device=$(device), DESC=$(device), name=$(name=), valvetype=valve
#


# The template also has a device macro, which does not appear in the expand
# definitions so flatdb passes it through unchanged.
# Get $(tag).ILK1_ (i.e. V.ILK1_...[n])
substitute "_PORT=$(port)"
substitute "_TAG=$(tag)"
substitute "_TAGIDX=$(tagidx)"
substitute "_TAGPREFIX="
substitute "_typeprefix=:"
substitute "_DIR=$(DIRILK1=)"
substitute "_device=$(device)"

include "NX102_valveIlk.template"


################################################################################
# Reset
#
#% controldesk Status scon
#
## Send the request down to the PLC
record(mbbo, "$(device):RESET") {
  field(DESC, "Reset")
  field(DTYP, "Soft Channel")
  field(TWST, "Reset")
  field(PRIO, "HIGH")
  field(OUT, "$(device):CALCCON.A PP")
}

record(calcout, "$(device):CALCCON") {
  field(OUT, "$(device):ACTUALCON PP")
  field(CALC, "A")
  field(OOPT, "When Non-zero")
  field(DOPT, "Use OCAL")
  field(OCAL, "A")
}

record(ao, "$(device):ACTUALCON") {
  field(DESC, "Control")
  field(DTYP, "EtherIP")
  field(OUT, "@$(port) $(tag).Control[$(tagidx)] S .2")
  field(PRIO, "HIGH")
}

################################################################################
# Interlock Status
#
#% archiver 10 Monitor
#% controldesk Status smon
#
record(mbbi, "$(device):STA") {
  field(DESC, "Status")
  field(DTYP, "Soft Channel")
  field(ZRST, "Disabled")
  field(ONST, "OK")
  field(ZRSV, "MAJOR")
  field(ONSV, "NO_ALARM")
  field(INP, "$(device):STA:INP")
}

# Necessary to have this extra record as mbbi does not work exactly as expected
record(ai, "$(device):STA:INP") {
  field(DESC, "Interlock status")
  field(DTYP, "EtherIP")
  field(INP, "@$(port) $(tag).Status[$(tagidx)]")
  field(SCAN, ".2 second")
  field(FLNK, "$(device):STA")
}

#% archiver 10 Monitor
#% controldesk Mode smon
#
record(mbbi, "$(device):MODE") {
  field(DESC, "Mode")
  field(DTYP, "Soft Channel")
  field(ZRST, "Operational")
  field(ONST, "Service")
  field(PHAS, "1")
  field(INP, "$(device):MODE:INP")
}

# Necessary to have this extra record as mbbi does not work exactly as expected
record(ai, "$(device):MODE:INP") {
  field(DESC, "Mode status")
  field(DTYP, "EtherIP")
  field(INP, "@$(port) $(tag).Mode[$(tagidx)]")
  field(SCAN, "1 second")
  field(FLNK, "$(device):MODE")
}
