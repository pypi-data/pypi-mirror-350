# % macro, __doc__, This template defines a bi records for representing low and lolo
# water flow switched read from MPS RIO boxes. Low switches will be read from
# their normal DM variable (E.g. DM4), Lolo switches from the relevant interlock
# bits. E.g. if interlock DM816..818 bit 4 is S1 water,
# use loloaddress=818,lolobit=4 for instantaneous lolo signal
# 
# Substitutions
# % macro, P           , EPICS prefix
# % macro, Q           , EPICS suffix
# % macro, DESC        , Description
# % macro, device      , EPICS name of the vacuum valve crate that connects to the RIO
# % macro, loaddress   , Address of lo DM variable. E.g. if lo signal is in DM4 bit1 then loaddress=4 lobit=1
# % macro, lobit       , Bit of lo DM variable. E.g. if lo signal is in DM4 bit1 then loaddress=4 lobit=1
# % macro, loloaddress , Address of lolo DM variable. E.g. if lolo signal is in DM818 bit4 then loloaddress=818 lolobit=4
# % macro, lolobit     , Bit of lolo DM variable. E.g. if lolo signal is in DM818 bit4 then loloaddress=818 lolobit=4
# % macro, name        , Object and gui association name
# This associates an edm screen with the template
# % gui, $(name=), edm, flow-config.edl, flow=$(P)$(Q)
# % gui, $(name=), edmembed, flow-embed.edl, flow=$(P)$(Q),label=$(DESC)
# This associates a BOY screen with the template
# % gui, $(name=), boydetail, dlsPLCApp_opi/flow_detail.opi, P=$(P),Q=$(Q),DESC=$(DESC)
# % gui, $(name=), boyembed, dlsPLCApp_opi/flow_embed_box.opi, P=$(P),Q=$(Q),DESC=$(DESC)
# % gui, $(name=), boyembed, dlsPLCApp_opi/flow_embed.opi, P=$(P),Q=$(Q),DESC=$(DESC)
# These define what PVs a flow detail screen should contain
# % gui, $(name=), statusbits, Low Flow,   $(P)$(Q):LO, Low
# % gui, $(name=), statusbits, Low Low Flow,   $(P)$(Q):LOLO, LowLow

# The LOLO flag
record(bi, "$(P)$(Q):LOLO") {
  field(DESC, "Low Low flow value")
  field(DTYP, "Soft Channel")
  field(ZSV, "MAJOR")
  field(OSV, "NO_ALARM")
  field(COSV, "NO_ALARM")
  field(ZNAM, "LOLO_FLOW")
  field(ONAM, "NORMAL")
  field(VAL, "1")
  field(PINI, "YES")
  field(INP, "$(P)$(Q):EXTRACTLOLO MS")
}

# Grab the D-variable with the low low water flow indication in.
record(subArray, "$(P)$(Q):GETLOLO") {
  field(FLNK, "$(P)$(Q):EXTRACTLOLO")
  field(FTVL, "USHORT")
  field(MALM, "100")
}

# lolo is in DM$(loloaddress). Calc the index into the 
# century record
record(calcout, "$(P)$(Q):LOLOINDX") {
  field(CALC, "$(loloaddress)%100")
  field(OUT, "$(P)$(Q):GETLOLO.INDX PP")
  field(PINI, "YES")
}

# lolo is in DM$(loloaddress). Calc the inp link to the 
# century record. Needs to be done after PINI, so note
# the flnk
record(scalcout, "$(P)$(Q):LOLOINP") {
  field(CALC, "PRINTF(AA,FLOOR($(loloaddress)/100))")
  field(AA, "$(device):DM%dXX CP MS")
  field(OUT, "$(P)$(Q):GETLOLO.INP CA")
  field(FLNK, "$(P)$(Q):LOLOINPDIS")
  field(SCAN, "1 second")
}

# Disable the scalcout record so we don't keep writing values
record(ao, "$(P)$(Q):LOLOINPDIS") {
  field(VAL, "1")
  field(OUT, "$(P)$(Q):LOLOINP.DISA")
}

# Extract the bit that contains the LOLO indication
record(calcout, "$(P)$(Q):EXTRACTLOLO") {
  field(FLNK, "$(P)$(Q):STATUS")
  field(CALC, "(A>>$(lolobit))&1")
  field(INPA, "$(P)$(Q):GETLOLO")
}

# The LO flag
record(bi, "$(P)$(Q):LO") {
  field(DESC, "Low flow value")
  field(DTYP, "Soft Channel")
  field(ZSV, "MINOR")
  field(OSV, "NO_ALARM")
  field(COSV, "NO_ALARM")
  field(ZNAM, "LOW_FLOW")
  field(ONAM, "NORMAL")
  field(VAL, "1")
  field(PINI, "YES")
  field(INP, "$(P)$(Q):EXTRACTLO MS")
}

# Grab the D-variable with the low water flow indication in.
record(subArray, "$(P)$(Q):GETLO") {
  field(FLNK, "$(P)$(Q):EXTRACTLO")
  field(FTVL, "USHORT")
  field(MALM, "100")
}

# lo is in DM$(loaddress). Calc the index into the 
# century record
record(calcout, "$(P)$(Q):LOINDX") {
  field(CALC, "$(loaddress)%100")
  field(OUT, "$(P)$(Q):GETLO.INDX PP")
  field(PINI, "YES")
}

# lo is in DM$(loaddress). Calc the inp link to the 
# century record. Needs to be done after PINI, so note
# the flnk
record(scalcout, "$(P)$(Q):LOINP") {
  field(CALC, "PRINTF(AA,FLOOR($(loaddress)/100))")
  field(AA, "$(device):DM%dXX CP MS")
  field(OUT, "$(P)$(Q):GETLO.INP CA")
  field(FLNK, "$(P)$(Q):LOINPDIS")
  field(SCAN, "1 second")
}

# Disable the scalcout record so we don't keep writing values
record(ao, "$(P)$(Q):LOINPDIS") {
  field(VAL, "1")
  field(OUT, "$(P)$(Q):LOINP.DISA")
}

# Extract the bit that contains the LO indication
record(calc, "$(P)$(Q):EXTRACTLO") {
  field(FLNK, "$(P)$(Q):STATUS")
  field(CALC, "(A>>$(lobit))&1")
  field(INPA, "$(P)$(Q):GETLO")
}

# Create the combined status signal
# % gui, $(name=), sevr
record(calc, "$(P)$(Q):STATUS") {
  field(DESC, "$(DESC)")
  field(SCAN, "1 second")
  field(CALC, "A+B*2")
  field(INPA, "$(P)$(Q):LO PP NMS")
  field(INPB, "$(P)$(Q):LOLO PP NMS")
  field(LOLO, "1")
  field(LOW, "2")
  field(LLSV, "MAJOR")
  field(LSV, "MINOR")
}
