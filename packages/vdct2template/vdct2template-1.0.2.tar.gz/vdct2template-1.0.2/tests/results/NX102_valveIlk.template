# Arguments of VDCT hash bang Input Macro directive:
# (macro name, description, xpos, ypos, colour, defaultVisibility)
# % archiver 10 Monitor
# % controldesk Latched Interlock Status smon
record(mbbiDirect, "$(_device)$(_typeprefix)$(_DIR)ILK") {
  field(DESC, "Latched Interlocks - tpfx $(_typeprefix)")
  field(DTYP, "EtherIP")
  field(INP, "@$(_PORT) $(_TAG).$(_TAGPREFIX)Latched[$(_TAGIDX)] B 0")
  field(SCAN, ".5 second")
  field(NOBT, "16")
  field(FLNK, "$(_device)$(_typeprefix)$(_DIR)LATILKCALC")
}

# Individual Interlocks
# The ZNAM and ONAM fields of these records are initialised
# by PINI processing of :DESC and :FAN records.
record(bi, "$(_device)$(_typeprefix)$(_DIR)ILK0") {
  field(DESC, "Interlock 0")
  field(INP, "$(_device)$(_typeprefix)$(_DIR)ILK.B0 CP MS")
  field(ZSV, "MAJOR")
  field(OSV, "NO_ALARM")
}

record(bi, "$(_device)$(_typeprefix)$(_DIR)ILK1") {
  field(DESC, "Interlock 1")
  field(INP, "$(_device)$(_typeprefix)$(_DIR)ILK.B1 CP MS")
  field(ZSV, "MAJOR")
  field(OSV, "NO_ALARM")
}

record(bi, "$(_device)$(_typeprefix)$(_DIR)ILK2") {
  field(DESC, "Interlock 2")
  field(INP, "$(_device)$(_typeprefix)$(_DIR)ILK.B2 CP MS")
  field(ZSV, "MAJOR")
  field(OSV, "NO_ALARM")
}

record(bi, "$(_device)$(_typeprefix)$(_DIR)ILK3") {
  field(DESC, "Interlock 3")
  field(INP, "$(_device)$(_typeprefix)$(_DIR)ILK.B3 CP MS")
  field(ZSV, "MAJOR")
  field(OSV, "NO_ALARM")
}

record(bi, "$(_device)$(_typeprefix)$(_DIR)ILK4") {
  field(DESC, "Interlock 4")
  field(INP, "$(_device)$(_typeprefix)$(_DIR)ILK.B4 CP MS")
  field(ZSV, "MAJOR")
  field(OSV, "NO_ALARM")
}

record(bi, "$(_device)$(_typeprefix)$(_DIR)ILK5") {
  field(DESC, "Interlock 5")
  field(INP, "$(_device)$(_typeprefix)$(_DIR)ILK.B5 CP MS")
  field(ZSV, "MAJOR")
  field(OSV, "NO_ALARM")
}

record(bi, "$(_device)$(_typeprefix)$(_DIR)ILK6") {
  field(DESC, "Interlock 6")
  field(INP, "$(_device)$(_typeprefix)$(_DIR)ILK.B6 CP MS")
  field(ZSV, "MAJOR")
  field(OSV, "NO_ALARM")
}

record(bi, "$(_device)$(_typeprefix)$(_DIR)ILK7") {
  field(DESC, "Interlock 7")
  field(INP, "$(_device)$(_typeprefix)$(_DIR)ILK.B7 CP MS")
  field(ZSV, "MAJOR")
  field(OSV, "NO_ALARM")
}

record(bi, "$(_device)$(_typeprefix)$(_DIR)ILK8") {
  field(DESC, "Interlock 8")
  field(INP, "$(_device)$(_typeprefix)$(_DIR)ILK.B8 CP MS")
  field(ZSV, "MAJOR")
  field(OSV, "NO_ALARM")
}

record(bi, "$(_device)$(_typeprefix)$(_DIR)ILK9") {
  field(DESC, "Interlock 9")
  field(INP, "$(_device)$(_typeprefix)$(_DIR)ILK.B9 CP MS")
  field(ZSV, "MAJOR")
  field(OSV, "NO_ALARM")
}

record(bi, "$(_device)$(_typeprefix)$(_DIR)ILK10") {
  field(DESC, "Interlock 10")
  field(INP, "$(_device)$(_typeprefix)$(_DIR)ILK.BA CP MS")
  field(ZSV, "MAJOR")
  field(OSV, "NO_ALARM")
}

record(bi, "$(_device)$(_typeprefix)$(_DIR)ILK11") {
  field(DESC, "Interlock 11")
  field(INP, "$(_device)$(_typeprefix)$(_DIR)ILK.BB CP MS")
  field(ZSV, "MAJOR")
  field(OSV, "NO_ALARM")
}

record(bi, "$(_device)$(_typeprefix)$(_DIR)ILK12") {
  field(DESC, "Interlock 12")
  field(INP, "$(_device)$(_typeprefix)$(_DIR)ILK.BC CP MS")
  field(ZSV, "MAJOR")
  field(OSV, "NO_ALARM")
}

record(bi, "$(_device)$(_typeprefix)$(_DIR)ILK13") {
  field(DESC, "Interlock 13")
  field(INP, "$(_device)$(_typeprefix)$(_DIR)ILK.BD CP MS")
  field(ZSV, "MAJOR")
  field(OSV, "NO_ALARM")
}

record(bi, "$(_device)$(_typeprefix)$(_DIR)ILK14") {
  field(DESC, "Interlock 14")
  field(INP, "$(_device)$(_typeprefix)$(_DIR)ILK.BE CP MS")
  field(ZSV, "MAJOR")
  field(OSV, "NO_ALARM")
}

record(bi, "$(_device)$(_typeprefix)$(_DIR)ILK15") {
  field(DESC, "Interlock 15")
  field(INP, "$(_device)$(_typeprefix)$(_DIR)ILK.BF CP MS")
  field(ZSV, "MAJOR")
  field(OSV, "NO_ALARM")
}

# % archiver 10 Monitor
# % controldesk Initial Interlock Status smon
record(mbbiDirect, "$(_device)$(_typeprefix)$(_DIR)INIILK") {
  field(DESC, "Initial Interlock")
  field(DTYP, "EtherIP")
  field(INP, "@$(_PORT) $(_TAG).$(_TAGPREFIX)Initial[$(_TAGIDX)] B 0")
  field(SCAN, ".5 second")
  field(NOBT, "16")
}

# % archiver 10 Monitor
# % controldesk Current Interlock Status smon
record(mbbiDirect, "$(_device)$(_typeprefix)$(_DIR)RAWILK") {
  field(DESC, "Current Interlocks")
  field(DTYP, "EtherIP")
  field(INP, "@$(_PORT) $(_TAG).$(_TAGPREFIX)Raw[$(_TAGIDX)] B 0")
  field(SCAN, ".5 second")
  field(NOBT, "16")
}

# Records for reading back the Interlock descriptions from the PLC.
#
# ether_ip S Flag
# The S 0 is the ether_ip Scan rate flag with rate time value zero,
# meaning the value will not be polled by the ether_ip driver.  This
# is a DLS modification to the ether_ip driver.  The data will be read
# once only.
#
# ether_ip E Flag
# The second flag is the ether_ip Element flag E, which tells the
# driver not to amalgamate requests for the same type of data i.e. to
# read a single element and not an array.
#
# The record will process once at boot time because of the PINI flag
# and the data will be read once because of the S 0 flag.  However
# processing the record again will NOT cause the data to be read again
# because of the peculiarities of the ether_ip driver. The command
# drvEtherIP_restart must be issued on the IOC console to force it to
# be read again (or reboot the IOC).
#
# See under "Implemented Changes" heading on "ether_ip Support Module"
# page in Controls Confluence space. https://confluence.diamond.ac.uk/x/DIbSBw
#
record(stringin, "$(_device)$(_typeprefix)$(_DIR)ILK00:DESC") {
  field(DESC, "Description of Interlock Bit 0")
  field(SCAN, "I/O Intr")
  field(PINI, "YES")
  field(DTYP, "EtherIP")
  field(INP, "@$(_PORT) $(_TAG).$(_TAGPREFIX)B00_Desc[$(_TAGIDX)] S 0 E")
  field(FLNK, "$(_device)$(_typeprefix)$(_DIR)ILK00:FAN")
}

record(stringin, "$(_device)$(_typeprefix)$(_DIR)ILK01:DESC") {
  field(DESC, "Description of Interlock Bit 1")
  field(SCAN, "I/O Intr")
  field(PINI, "YES")
  field(DTYP, "EtherIP")
  field(INP, "@$(_PORT) $(_TAG).$(_TAGPREFIX)B01_Desc[$(_TAGIDX)] S 0 E")
  field(FLNK, "$(_device)$(_typeprefix)$(_DIR)ILK01:FAN")
}

record(stringin, "$(_device)$(_typeprefix)$(_DIR)ILK02:DESC") {
  field(DESC, "Description of Interlock Bit 2")
  field(SCAN, "I/O Intr")
  field(PINI, "YES")
  field(DTYP, "EtherIP")
  field(INP, "@$(_PORT) $(_TAG).$(_TAGPREFIX)B02_Desc[$(_TAGIDX)] S 0 E")
  field(FLNK, "$(_device)$(_typeprefix)$(_DIR)ILK02:FAN")
}

record(stringin, "$(_device)$(_typeprefix)$(_DIR)ILK03:DESC") {
  field(DESC, "Description of Interlock Bit 3")
  field(SCAN, "I/O Intr")
  field(PINI, "YES")
  field(DTYP, "EtherIP")
  field(INP, "@$(_PORT) $(_TAG).$(_TAGPREFIX)B03_Desc[$(_TAGIDX)] S 0 E")
  field(FLNK, "$(_device)$(_typeprefix)$(_DIR)ILK03:FAN")
}

record(stringin, "$(_device)$(_typeprefix)$(_DIR)ILK04:DESC") {
  field(DESC, "Description of Interlock Bit 4")
  field(SCAN, "I/O Intr")
  field(PINI, "YES")
  field(DTYP, "EtherIP")
  field(INP, "@$(_PORT) $(_TAG).$(_TAGPREFIX)B04_Desc[$(_TAGIDX)] S 0 E")
  field(FLNK, "$(_device)$(_typeprefix)$(_DIR)ILK04:FAN")
}

record(stringin, "$(_device)$(_typeprefix)$(_DIR)ILK05:DESC") {
  field(DESC, "Description of Interlock Bit 5")
  field(SCAN, "I/O Intr")
  field(PINI, "YES")
  field(DTYP, "EtherIP")
  field(INP, "@$(_PORT) $(_TAG).$(_TAGPREFIX)B05_Desc[$(_TAGIDX)] S 0 E")
  field(FLNK, "$(_device)$(_typeprefix)$(_DIR)ILK05:FAN")
}

record(stringin, "$(_device)$(_typeprefix)$(_DIR)ILK06:DESC") {
  field(DESC, "Description of Interlock Bit 6")
  field(SCAN, "I/O Intr")
  field(PINI, "YES")
  field(DTYP, "EtherIP")
  field(INP, "@$(_PORT) $(_TAG).$(_TAGPREFIX)B06_Desc[$(_TAGIDX)] S 0 E")
  field(FLNK, "$(_device)$(_typeprefix)$(_DIR)ILK06:FAN")
}

record(stringin, "$(_device)$(_typeprefix)$(_DIR)ILK07:DESC") {
  field(DESC, "Description of Interlock Bit 7")
  field(SCAN, "I/O Intr")
  field(PINI, "YES")
  field(DTYP, "EtherIP")
  field(INP, "@$(_PORT) $(_TAG).$(_TAGPREFIX)B07_Desc[$(_TAGIDX)] S 0 E")
  field(FLNK, "$(_device)$(_typeprefix)$(_DIR)ILK07:FAN")
}

record(stringin, "$(_device)$(_typeprefix)$(_DIR)ILK08:DESC") {
  field(DESC, "Description of Interlock Bit 8")
  field(SCAN, "I/O Intr")
  field(PINI, "YES")
  field(DTYP, "EtherIP")
  field(INP, "@$(_PORT) $(_TAG).$(_TAGPREFIX)B08_Desc[$(_TAGIDX)] S 0 E")
  field(FLNK, "$(_device)$(_typeprefix)$(_DIR)ILK08:FAN")
}

record(stringin, "$(_device)$(_typeprefix)$(_DIR)ILK09:DESC") {
  field(DESC, "Description of Interlock Bit 9")
  field(SCAN, "I/O Intr")
  field(PINI, "YES")
  field(DTYP, "EtherIP")
  field(INP, "@$(_PORT) $(_TAG).$(_TAGPREFIX)B09_Desc[$(_TAGIDX)] S 0 E")
  field(FLNK, "$(_device)$(_typeprefix)$(_DIR)ILK09:FAN")
}

record(stringin, "$(_device)$(_typeprefix)$(_DIR)ILK10:DESC") {
  field(DESC, "Description of Interlock Bit 10")
  field(SCAN, "I/O Intr")
  field(PINI, "YES")
  field(DTYP, "EtherIP")
  field(INP, "@$(_PORT) $(_TAG).$(_TAGPREFIX)B10_Desc[$(_TAGIDX)] S 0 E")
  field(FLNK, "$(_device)$(_typeprefix)$(_DIR)ILK10:FAN")
}

record(stringin, "$(_device)$(_typeprefix)$(_DIR)ILK11:DESC") {
  field(DESC, "Description of Interlock Bit 11")
  field(SCAN, "I/O Intr")
  field(PINI, "YES")
  field(DTYP, "EtherIP")
  field(INP, "@$(_PORT) $(_TAG).$(_TAGPREFIX)B11_Desc[$(_TAGIDX)] S 0 E")
  field(FLNK, "$(_device)$(_typeprefix)$(_DIR)ILK11:FAN")
}

record(stringin, "$(_device)$(_typeprefix)$(_DIR)ILK12:DESC") {
  field(DESC, "Description of Interlock Bit 12")
  field(SCAN, "I/O Intr")
  field(PINI, "YES")
  field(DTYP, "EtherIP")
  field(INP, "@$(_PORT) $(_TAG).$(_TAGPREFIX)B12_Desc[$(_TAGIDX)] S 0 E")
  field(FLNK, "$(_device)$(_typeprefix)$(_DIR)ILK12:FAN")
}

record(stringin, "$(_device)$(_typeprefix)$(_DIR)ILK13:DESC") {
  field(DESC, "Description of Interlock Bit 13")
  field(SCAN, "I/O Intr")
  field(PINI, "YES")
  field(DTYP, "EtherIP")
  field(INP, "@$(_PORT) $(_TAG).$(_TAGPREFIX)B13_Desc[$(_TAGIDX)] S 0 E")
  field(FLNK, "$(_device)$(_typeprefix)$(_DIR)ILK13:FAN")
}

record(stringin, "$(_device)$(_typeprefix)$(_DIR)ILK14:DESC") {
  field(DESC, "Description of Interlock Bit 14")
  field(SCAN, "I/O Intr")
  field(PINI, "YES")
  field(DTYP, "EtherIP")
  field(INP, "@$(_PORT) $(_TAG).$(_TAGPREFIX)B14_Desc[$(_TAGIDX)] S 0 E")
  field(FLNK, "$(_device)$(_typeprefix)$(_DIR)ILK14:FAN")
}

record(stringin, "$(_device)$(_typeprefix)$(_DIR)ILK15:DESC") {
  field(DESC, "Description of Interlock Bit 15")
  field(SCAN, "I/O Intr")
  field(PINI, "YES")
  field(DTYP, "EtherIP")
  field(INP, "@$(_PORT) $(_TAG).$(_TAGPREFIX)B15_Desc[$(_TAGIDX)] S 0 E")
  field(FLNK, "$(_device)$(_typeprefix)$(_DIR)ILK15:FAN")
}

# Records to fanout the value of the interlock label strings read back
# from the PLC in the :DESC records to the labels on the individual
# interlock records for both states.
#
record(sseq, "$(_device)$(_typeprefix)$(_DIR)ILK00:FAN") {
  field(DOL1, "$(_device)$(_typeprefix)$(_DIR)ILK00:DESC")
  field(LNK1, "$(_device)$(_typeprefix)$(_DIR)ILK0.ZNAM")
  field(DOL2, "$(_device)$(_typeprefix)$(_DIR)ILK00:DESC")
  field(LNK2, "$(_device)$(_typeprefix)$(_DIR)ILK0.ONAM")
}

record(sseq, "$(_device)$(_typeprefix)$(_DIR)ILK01:FAN") {
  field(DOL1, "$(_device)$(_typeprefix)$(_DIR)ILK01:DESC")
  field(LNK1, "$(_device)$(_typeprefix)$(_DIR)ILK1.ZNAM")
  field(DOL2, "$(_device)$(_typeprefix)$(_DIR)ILK01:DESC")
  field(LNK2, "$(_device)$(_typeprefix)$(_DIR)ILK1.ONAM")
}

record(sseq, "$(_device)$(_typeprefix)$(_DIR)ILK02:FAN") {
  field(DOL1, "$(_device)$(_typeprefix)$(_DIR)ILK02:DESC")
  field(LNK1, "$(_device)$(_typeprefix)$(_DIR)ILK2.ZNAM")
  field(DOL2, "$(_device)$(_typeprefix)$(_DIR)ILK02:DESC")
  field(LNK2, "$(_device)$(_typeprefix)$(_DIR)ILK2.ONAM")
}

record(sseq, "$(_device)$(_typeprefix)$(_DIR)ILK03:FAN") {
  field(DOL1, "$(_device)$(_typeprefix)$(_DIR)ILK03:DESC")
  field(LNK1, "$(_device)$(_typeprefix)$(_DIR)ILK3.ZNAM")
  field(DOL2, "$(_device)$(_typeprefix)$(_DIR)ILK03:DESC")
  field(LNK2, "$(_device)$(_typeprefix)$(_DIR)ILK3.ONAM")
}

record(sseq, "$(_device)$(_typeprefix)$(_DIR)ILK04:FAN") {
  field(DOL1, "$(_device)$(_typeprefix)$(_DIR)ILK04:DESC")
  field(LNK1, "$(_device)$(_typeprefix)$(_DIR)ILK4.ZNAM")
  field(DOL2, "$(_device)$(_typeprefix)$(_DIR)ILK04:DESC")
  field(LNK2, "$(_device)$(_typeprefix)$(_DIR)ILK4.ONAM")
}

record(sseq, "$(_device)$(_typeprefix)$(_DIR)ILK05:FAN") {
  field(DOL1, "$(_device)$(_typeprefix)$(_DIR)ILK05:DESC")
  field(LNK1, "$(_device)$(_typeprefix)$(_DIR)ILK5.ZNAM")
  field(DOL2, "$(_device)$(_typeprefix)$(_DIR)ILK05:DESC")
  field(LNK2, "$(_device)$(_typeprefix)$(_DIR)ILK5.ONAM")
}

record(sseq, "$(_device)$(_typeprefix)$(_DIR)ILK06:FAN") {
  field(DOL1, "$(_device)$(_typeprefix)$(_DIR)ILK06:DESC")
  field(LNK1, "$(_device)$(_typeprefix)$(_DIR)ILK6.ZNAM")
  field(DOL2, "$(_device)$(_typeprefix)$(_DIR)ILK06:DESC")
  field(LNK2, "$(_device)$(_typeprefix)$(_DIR)ILK6.ONAM")
}

record(sseq, "$(_device)$(_typeprefix)$(_DIR)ILK07:FAN") {
  field(DOL1, "$(_device)$(_typeprefix)$(_DIR)ILK07:DESC")
  field(LNK1, "$(_device)$(_typeprefix)$(_DIR)ILK7.ZNAM")
  field(DOL2, "$(_device)$(_typeprefix)$(_DIR)ILK07:DESC")
  field(LNK2, "$(_device)$(_typeprefix)$(_DIR)ILK7.ONAM")
}

record(sseq, "$(_device)$(_typeprefix)$(_DIR)ILK08:FAN") {
  field(DOL1, "$(_device)$(_typeprefix)$(_DIR)ILK08:DESC")
  field(LNK1, "$(_device)$(_typeprefix)$(_DIR)ILK8.ZNAM")
  field(DOL2, "$(_device)$(_typeprefix)$(_DIR)ILK08:DESC")
  field(LNK2, "$(_device)$(_typeprefix)$(_DIR)ILK8.ONAM")
}

record(sseq, "$(_device)$(_typeprefix)$(_DIR)ILK09:FAN") {
  field(DOL1, "$(_device)$(_typeprefix)$(_DIR)ILK09:DESC")
  field(LNK1, "$(_device)$(_typeprefix)$(_DIR)ILK9.ZNAM")
  field(DOL2, "$(_device)$(_typeprefix)$(_DIR)ILK09:DESC")
  field(LNK2, "$(_device)$(_typeprefix)$(_DIR)ILK9.ONAM")
}

record(sseq, "$(_device)$(_typeprefix)$(_DIR)ILK10:FAN") {
  field(DOL1, "$(_device)$(_typeprefix)$(_DIR)ILK10:DESC")
  field(LNK1, "$(_device)$(_typeprefix)$(_DIR)ILK10.ZNAM")
  field(DOL2, "$(_device)$(_typeprefix)$(_DIR)ILK10:DESC")
  field(LNK2, "$(_device)$(_typeprefix)$(_DIR)ILK10.ONAM")
}

record(sseq, "$(_device)$(_typeprefix)$(_DIR)ILK11:FAN") {
  field(DOL1, "$(_device)$(_typeprefix)$(_DIR)ILK11:DESC")
  field(LNK1, "$(_device)$(_typeprefix)$(_DIR)ILK11.ZNAM")
  field(DOL2, "$(_device)$(_typeprefix)$(_DIR)ILK11:DESC")
  field(LNK2, "$(_device)$(_typeprefix)$(_DIR)ILK11.ONAM")
}

record(sseq, "$(_device)$(_typeprefix)$(_DIR)ILK12:FAN") {
  field(DOL1, "$(_device)$(_typeprefix)$(_DIR)ILK12:DESC")
  field(LNK1, "$(_device)$(_typeprefix)$(_DIR)ILK12.ZNAM")
  field(DOL2, "$(_device)$(_typeprefix)$(_DIR)ILK12:DESC")
  field(LNK2, "$(_device)$(_typeprefix)$(_DIR)ILK12.ONAM")
}

record(sseq, "$(_device)$(_typeprefix)$(_DIR)ILK13:FAN") {
  field(DOL1, "$(_device)$(_typeprefix)$(_DIR)ILK13:DESC")
  field(LNK1, "$(_device)$(_typeprefix)$(_DIR)ILK13.ZNAM")
  field(DOL2, "$(_device)$(_typeprefix)$(_DIR)ILK13:DESC")
  field(LNK2, "$(_device)$(_typeprefix)$(_DIR)ILK13.ONAM")
}

record(sseq, "$(_device)$(_typeprefix)$(_DIR)ILK14:FAN") {
  field(DOL1, "$(_device)$(_typeprefix)$(_DIR)ILK14:DESC")
  field(LNK1, "$(_device)$(_typeprefix)$(_DIR)ILK14.ZNAM")
  field(DOL2, "$(_device)$(_typeprefix)$(_DIR)ILK14:DESC")
  field(LNK2, "$(_device)$(_typeprefix)$(_DIR)ILK14.ONAM")
}

record(sseq, "$(_device)$(_typeprefix)$(_DIR)ILK15:FAN") {
  field(DOL1, "$(_device)$(_typeprefix)$(_DIR)ILK15:DESC")
  field(LNK1, "$(_device)$(_typeprefix)$(_DIR)ILK15.ZNAM")
  field(DOL2, "$(_device)$(_typeprefix)$(_DIR)ILK15:DESC")
  field(LNK2, "$(_device)$(_typeprefix)$(_DIR)ILK15.ONAM")
}

# ###################################################################
# Latched Interlock Status
# 
# A binary go, no go status for the interlock.  Comes into its own for
# valves with multiple interlocks.
#
# For example, a Bistable Valve has different interlocks for open and
# close of the valve using different expansions of the
# NX102_valveIlk.vdb template.  The overall multiple state record
# ILKSTA in the NX102_valveCtrl.vdb template is given (by default)
# complex labels mentioning both open and close on the expand command
# in NX102_vacValveBistable.vdb whereas LATILKSTA is just for the open
# or the close operation.
#
# % archiver 10 Monitor
# % controldesk $(_DIR) Interlock Status smon
record(mbbi, "$(_device)$(_typeprefix)$(_DIR)LATILKSTA") {
  field(DESC, "Open Interlock Status")
  field(DTYP, "Soft Channel")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(ZRST, "Failed")
  field(ONST, "Run Ilks OK")
  field(ZRSV, "MAJOR")
  field(ONSV, "NO_ALARM")
}

record(calcout, "$(_device)$(_typeprefix)$(_DIR)LATILKCALC") {
  field(INPA, "$(_device)$(_typeprefix)$(_DIR)ILK MS")
  field(CALC, "A=65535?1:0")
  field(OUT, "$(_device)$(_typeprefix)$(_DIR)LATILKSTA PP")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
}
