# ##############################################################################
# Control
# 
# % archiver 10 Monitor
# % controldesk Status scon
# % gdatag,template,pneumaticCallback,$(gda_name=),$(gda_desc=)
# % gdatag,mbbinary,rw,$(gda_name=),CONTROL
## Use this PV to request the valve to open or close
# The request will be checked by $(device):CALCCON
record(mbbo, "$(device):CON") {
  field(DESC, "Control")
  field(DTYP, "Soft Channel")
  field(ZRST, "$(_con_label0)")
  field(ONST, "$(_con_label1)")
  field(TWST, "$(_con_label2)")
  field(THST, "$(_con_label3)")
  field(FRST, "$(_con_label4)")
  field(FVST, "$(_con_label5)")
  field(SXST, "$(_con_label6)")
  field(VAL, "0")
  field(OUT, "$(device):CALCCON.A PP")
}

record(seq, "$(device):OPENSEQ") {
  field(LNK1, "$(device):CON PP")
  field(LNK2, "$(device):CON PP")
  field(DO1, "2")
# reset
  field(DO2, "0")
# open
  field(DLY2, "1")
}

## If this PV is non-zero then an open request will be allowed by 
# $(device):CALCCON
record(bi, "$(device):OPENALLOWED") {
  field(DESC, "Allow/inhibit valve opening")
  field(INP, "$(allowpv=)")
  field(VAL, "1")
  field(ONAM, "Yes")
  field(ZNAM, "No")
}

record(stringout, "$(device):WHYLOCKED") {
  field(DESC, "Reason why device is locked")
  field(VAL, "$(whylocked=Open command not allowed)")
}

## Pass all requests through to the PLC unless it is an open request and 
# $(device):OPENALLOWED is zero
record(calcout, "$(device):CALCCON") {
  field(INPB, "$(device):OPENALLOWED")
  field(OUT, "$(device):ACTUALCON PP")
  field(CALC, "(B=0&A=0)?0:1")
  field(OOPT, "When Non-zero")
  field(DOPT, "Use OCAL")
  field(OCAL, "A")
}

## Send the request down to the PLC
record(ao, "$(device):ACTUALCON") {
  field(DESC, "Control")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(port), $(addr), $(timeout=0)) FINS_DM_WRITE")
  field(PRIO, "HIGH")
  field(FLNK, "$(device):SETBUSY")
}

record(bi, "$(device):OPENING") {
  field(DESC, "Opening Valves")
  field(PINI, "YES")
  field(INP, "0")
  field(ONAM, "Opening")
}

record(calcout, "$(device):SETBUSY") {
  field(CALC, "1")
  field(OUT, "$(device):BUSY PP NMS")
  field(FLNK, "$(device):DONECALC")
}

record(busy, "$(device):BUSY") {
}

record(calcout, "$(device):DONECALC") {
  field(INPA, "$(device):CON MS")
  field(INPB, "$(device):STA CPP MS")
  field(INPC, "$(device):ILKSTA CPP MS")
  field(INPD, "$(device):LASTCON CPP MS")
  field(CALC, "$(_donecalc)")
  field(OOPT, "When Zero")
  field(DOPT, "Use CALC")
  field(OUT, "$(device):BUSY CA NMS")
}

# % archiver 10 Monitor
record(mbbi, "$(device):LASTCON") {
  field(DESC, "Control Readback")
  field(DTYP, "Soft Channel")
  field(ZRST, "$(_con_label0)")
  field(ONST, "$(_con_label1)")
  field(TWST, "$(_con_label2)")
  field(THST, "$(_con_label3)")
  field(FRST, "$(_con_label4)")
  field(FVST, "$(_con_label5)")
  field(SXST, "$(_con_label6)")
  field(INP, "$(device):GETLASTCON.VAL MS")
}

record(subArray, "$(device):GETLASTCON") {
  field(DESC, "Get control readback")
  field(DTYP, "Soft Channel")
  field(FLNK, "$(device):LASTCON")
  field(FTVL, "USHORT")
  field(MALM, "100")
}

# LASTCON is in DM$(addr)+1. Calc the index into the 
# century record
record(calcout, "$(device):LASTCONINDX") {
  field(CALC, "$(addr)%100+1")
  field(OUT, "$(device):GETLASTCON.INDX PP")
  field(PINI, "YES")
}

# LASTCON is in DM$(addr)+1. Calc the inp link to the 
# century record. Needs to be done after PINI, so note
# the flnk
record(scalcout, "$(device):LASTCONINP") {
  field(CALC, "PRINTF(AA,FLOOR($(addr)/100))")
  field(AA, "$(vlvcc):DM%dXX CP MS")
  field(OUT, "$(device):GETLASTCON.INP CA")
  field(FLNK, "$(device):LASTCONINPDIS")
  field(SCAN, "1 second")
}

# Disable the scalcout record so we don't keep writing values
record(ao, "$(device):LASTCONINPDIS") {
  field(VAL, "1")
  field(OUT, "$(device):LASTCONINP.DISA")
}

# ###################################################################
# Interlock Status
# 
# % archiver 10 Monitor
# % controldesk Interlock Status smon
record(mbbi, "$(device):ILKSTA") {
  field(DESC, "Interlock Status")
  field(DTYP, "Soft Channel")
  field(ZRST, "$(ilksta_label0=Failed)")
  field(ONST, "$(ilksta_label1=Run Ilks Ok)")
  field(TWST, "$(ilksta_label2=OK)")
  field(THST, "$(ilksta_label3=Disarmed)")
  field(FRST, "$(ilksta_label4=)")
  field(FVST, "$(ilksta_label5=)")
  field(ZRSV, "$(ilksta_sv0=MAJOR)")
  field(ONSV, "$(ilksta_sv1=NO_ALARM)")
  field(TWSV, "$(ilksta_sv2=NO_ALARM)")
  field(THSV, "$(ilksta_sv3=NO_ALARM)")
  field(FRSV, "$(ilksta_sv4=NO_ALARM)")
  field(FVSV, "$(ilksta_sv5=NO_ALARM)")
  field(INP, "$(device):GETILKSTA.VAL MS")
}

record(subArray, "$(device):GETILKSTA") {
  field(DESC, "Get interlock status")
  field(DTYP, "Soft Channel")
  field(FLNK, "$(device):ILKSTA")
  field(FTVL, "USHORT")
  field(MALM, "100")
}

# ILKSTA is in DM$(addr)+2. Calc the index into the 
# century record
record(calcout, "$(device):ILKSTAINDX") {
  field(CALC, "$(addr)%100+2")
  field(OUT, "$(device):GETILKSTA.INDX PP")
  field(PINI, "YES")
}

# ILKSTA is in DM$(addr)+2. Calc the inp link to the 
# century record. Needs to be done after PINI, so note
# the flnk
record(scalcout, "$(device):ILKSTAINP") {
  field(CALC, "PRINTF(AA,FLOOR($(addr)/100))")
  field(AA, "$(vlvcc):DM%dXX CP MS")
  field(OUT, "$(device):GETILKSTA.INP CA")
  field(FLNK, "$(device):ILKSTAINPDIS")
  field(SCAN, "1 second")
}

# Disable the scalcout record so we don't keep writing values
record(ao, "$(device):ILKSTAINPDIS") {
  field(VAL, "1")
  field(OUT, "$(device):ILKSTAINP.DISA")
}

# ######################################################################
# Status
# 
# % archiver 10 Monitor
# % controldesk Status smon
# This makes the component icon reflect the status
# % gui, $(name=), sevr
# % gdatag,mbbinary,ro,$(gda_name=),STA
record(mbbi, "$(device):STA") {
  field(DESC, "Status")
  field(DTYP, "Soft Channel")
  field(ZRST, "$(_sta_label0)")
  field(ONST, "$(_sta_label1)")
  field(TWST, "$(_sta_label2)")
  field(THST, "$(_sta_label3)")
  field(FRST, "$(_sta_label4)")
  field(FVST, "$(_sta_label5)")
  field(SXST, "$(_sta_label6)")
  field(ZRSV, "$(_sta_sv0)")
  field(ONSV, "$(_sta_sv1)")
  field(TWSV, "$(_sta_sv2)")
  field(THSV, "$(_sta_sv3)")
  field(FRSV, "$(_sta_sv4)")
  field(FVSV, "$(_sta_sv5)")
  field(SXSV, "$(_sta_sv6)")
  field(INP, "$(device):GETSTA MS")
}

# this tells the gui that this device is moving if STA is Opening or Closing
# % gui, $(name=), status
record(calcout, "$(device):MOVN") {
  field(DTYP, "Soft Channel")
  field(DESC, "Is valve moving")
  field(INPA, "$(device):STA CP")
  field(CALC, "A=2|A=4")
}

record(subArray, "$(device):GETSTA") {
  field(DESC, "Get status")
  field(DTYP, "Soft Channel")
  field(FLNK, "$(device):STA")
  field(FTVL, "USHORT")
  field(MALM, "100")
}

# STA is in DM$(addr)+3. Calc the index into the 
# century record
record(calcout, "$(device):STAINDX") {
  field(CALC, "$(addr)%100+3")
  field(OUT, "$(device):GETSTA.INDX PP")
  field(PINI, "YES")
}

# STA is in DM$(addr)+3. Calc the inp link to the 
# century record. Needs to be done after PINI, so note
# the flnk
record(scalcout, "$(device):STAINP") {
  field(CALC, "PRINTF(AA,FLOOR($(addr)/100))")
  field(AA, "$(vlvcc):DM%dXX CP MS")
  field(OUT, "$(device):GETSTA.INP CA")
  field(FLNK, "$(device):STAINPDIS")
  field(SCAN, "1 second")
}

# Disable the scalcout record so we don't keep writing values
record(ao, "$(device):STAINPDIS") {
  field(VAL, "1")
  field(OUT, "$(device):STAINP.DISA")
}

# ############################################################################
# Number of Operations
# 
# % archiver 10 Monitor
# % controldesk Number of Operations readback
record(longin, "$(device):OPS") {
  field(DESC, "Operations")
  field(DTYP, "Soft Channel")
  field(HOPR, "10000")
  field(LOPR, "0")
  field(HIHI, "10000")
  field(HIGH, "9000")
  field(LOW, "0")
  field(LOLO, "-1")
  field(HHSV, "MAJOR")
  field(HSV, "MINOR")
  field(LSV, "MINOR")
  field(LLSV, "MAJOR")
  field(INP, "$(device):GETOPS.VAL MS")
}

record(subArray, "$(device):GETOPS") {
  field(DESC, "Get operations")
  field(DTYP, "Soft Channel")
  field(FLNK, "$(device):OPS")
  field(FTVL, "USHORT")
  field(MALM, "100")
}

# OPS is in DM$(addr)+4. Calc the index into the 
# century record
record(calcout, "$(device):OPSINDX") {
  field(CALC, "$(addr)%100+4")
  field(OUT, "$(device):GETOPS.INDX PP")
  field(PINI, "YES")
}

# OPS is in DM$(addr)+4. Calc the inp link to the 
# century record. Needs to be done after PINI, so note
# the flnk
record(scalcout, "$(device):OPSINP") {
  field(CALC, "PRINTF(AA,FLOOR($(addr)/100))")
  field(AA, "$(vlvcc):DM%dXX CP MS")
  field(OUT, "$(device):GETOPS.INP CA")
  field(FLNK, "$(device):OPSINPDIS")
  field(SCAN, "1 second")
}

# Disable the scalcout record so we don't keep writing values
record(ao, "$(device):OPSINPDIS") {
  field(VAL, "1")
  field(OUT, "$(device):OPSINP.DISA")
}

# #########################################################################
# Mode Status (individual bits pulled off in each valve template
record(mbbiDirect, "$(device):MODSTA") {
  field(DESC, "Mode")
  field(DTYP, "Raw Soft Channel")
  field(INP, "$(device):GETMODSTA MS")
}

record(subArray, "$(device):GETMODSTA") {
  field(DESC, "Get mode")
  field(DTYP, "Soft Channel")
  field(FLNK, "$(device):MODSTA")
  field(FTVL, "USHORT")
  field(MALM, "100")
}

# MODSTA is in DM$(addr)+5. Calc the index into the 
# century record
record(calcout, "$(device):MODSTAINDX") {
  field(CALC, "$(addr)%100+5")
  field(OUT, "$(device):GETMODSTA.INDX PP")
  field(PINI, "YES")
}

# MODSTA is in DM$(addr)+5. Calc the inp link to the 
# century record. Needs to be done after PINI, so note
# the flnk
record(scalcout, "$(device):MODSTAINP") {
  field(CALC, "PRINTF(AA,FLOOR($(addr)/100))")
  field(AA, "$(vlvcc):DM%dXX CP MS")
  field(OUT, "$(device):GETMODSTA.INP CA")
  field(FLNK, "$(device):MODSTAINPDIS")
  field(SCAN, "1 second")
}

# Disable the scalcout record so we don't keep writing values
record(ao, "$(device):MODSTAINPDIS") {
  field(VAL, "1")
  field(OUT, "$(device):MODSTAINP.DISA")
}
