# % macro, __doc__, Template showing the status of various MPS interlocks in
# a PLC. Requires dlsPLC_read100 for any century used
# % macro, device, device prefix
# % macro, port, asyn port name of FINS driver
# % macro, interlock, Interlock suffix (e.g. :INT1)
# % macro, desc, Permit description (e.g. Front end permit)
# % macro, addr, First address in the DM variable range. E.g. if interlock is in DM800..808 then addr=800
# % macro, name, Object name and gui association name
# % macro, timeout, Timeout in seconds for the FINS protocol
# % macro, ilk0, Interlock description 0
# % macro, ilk1, Interlock description 1
# % macro, ilk2, Interlock description 2
# % macro, ilk3, Interlock description 3
# % macro, ilk4, Interlock description 4
# % macro, ilk5, Interlock description 5
# % macro, ilk6, Interlock description 6
# % macro, ilk7, Interlock description 7
# % macro, ilk8, Interlock description 8
# % macro, ilk9, Interlock description 9
# % macro, ilk10, Interlock description 10
# % macro, ilk11, Interlock description 11
# % macro, ilk12, Interlock description 12
# % macro, ilk13, Interlock description 13
# % macro, ilk14, Interlock description 14
# % macro, ilk15, Interlock description 15
# % macro, auto_reset, Set to 1 to push the reset button whenever the raw interlocks are all ok
# % macro, EMPTY, Empty substitution to satisfy VDCT
# 
# This associates an edm screen with the template
# % gui, $(name=), edm, dlsPLC_interlock.edl, device=$(device)$(interlock)
# % gui, $(name=), edmembed, dlsPLC_interlock-embed-small.edl, device=$(device)$(interlock),desc=$(desc)
# This associates BOY screens with the template
# % gui, $(name=), boydetail, dlsPLCApp_opi/interlock_small_detail.opi, device=$(device), interlock=$(interlock), name=$(name=)
# % gui, $(name=), boyembed, dlsPLCApp_opi/interlock_small_embed_box.opi, device=$(device), interlock=$(interlock), name=$(name=)
# % gui, $(name=), boyembed, dlsPLCApp_opi/interlock_small_embed.opi, device=$(device), interlock=$(interlock), name=$(name=)
record(ao, "$(device)$(interlock):RESET") {
  field(DESC, "Reset interlocks")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(port), $(addr), $(timeout=0)) FINS_DM_WRITE_NOREAD")
  field(DOL, "2")
  field(OMSL, "closed_loop")
  field(DRVH, "2")
}

record(calcout, "$(device)$(interlock):AUTORESET") {
  field(INPA, "$(device)$(interlock):RAWILK CP")
  field(B, "$(auto_reset=0)")
  field(CALC, "B=1&&A=65535")
  field(OOPT, "Transition To Non-zero")
  field(OUT, "$(device)$(interlock):RESET.PROC PP")
}

record(stringout, "$(device)$(interlock):NAME") {
  field(DESC, "Name of interlock")
  field(DTYP, "Soft Channel")
  field(VAL, "$(desc)")
}

substitute "_device=$(device)$(interlock)"
substitute "_vlvcc=$(device)"
substitute "_typeprefix=:"
substitute "_DIR=$(EMPTY=)"
substitute "_ILK=6"
substitute "_INIILK=7"
substitute "_RAWILK=8"
substitute "_ilk0=$(ilk0=unused)"
substitute "_ilk1=$(ilk1=unused)"
substitute "_ilk2=$(ilk2=unused)"
substitute "_ilk3=$(ilk3=unused)"
substitute "_ilk4=$(ilk4=unused)"
substitute "_ilk5=$(ilk5=unused)"
substitute "_ilk6=$(ilk6=unused)"
substitute "_ilk7=$(ilk7=unused)"
substitute "_ilk8=$(ilk8=unused)"
substitute "_ilk9=$(ilk9=unused)"
substitute "_ilk10=$(ilk10=unused)"
substitute "_ilk11=$(ilk11=unused)"
substitute "_ilk12=$(ilk12=unused)"
substitute "_ilk13=$(ilk13=unused)"
substitute "_ilk14=$(ilk14=unused)"
substitute "_ilk15=$(ilk15=unused)"
substitute "_addr=$(addr)"

include "dlsPLC_valveIlk.template"
