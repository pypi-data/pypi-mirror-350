#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBD("../../dbd/dlsPLC_vdct.dbd")
#! DBDEND


# NX102_vacValve.vdb is expanded to NX102_vacValve.template by flatdb.
#
#% macro, __doc__, Template database for a vacuum valve without debounce or raw air records
#% macro, device, device name
#% macro, port, EtherIP Port Name
#% macro, tag, NX PLC tag string e.g. V (from V.Control[1])
#% macro, tagidx, NX PLC tag index number e.g. 1 (from V.Control[1])
#% macro, ILKNUM, Part of definition of gauge interlocks, Gauge NX PLC tag (Gauge.PIRG[dollar(ILKNUM)])
#
#% macro, allowpv, If specified, then only write an open command when this is non-zero. MUST have CP at the end of it. (Optional - defaults to "")
#% macro, whylocked, String to output to EDM synoptic as to precisely why the device is locked and by whom. (Optional.  Defaults to "Open command not allowed")
#
#% macro, con_label0, Label string for control value 0 (Optional - defaults to Open)
#% macro, con_label1, Label string for control value 1 (Optional - defaults to Close)
#% macro, con_label2, Label string for control value 2 (Optional - defaults to Reset)
#% macro, con_label3, Label string for control value 3 (Optional - defaults to "")
#% macro, con_label4, Label string for control value 4 (Optional - defaults to "")
#% macro, con_label5, Label string for control value 5 (Optional - defaults to "")
#% macro, con_label6, Label string for control value 6 (Optional - defaults to "")
#% macro, con_label7, Label string for control value 7 (Optional - defaults to "")
#
#% macro, sta_label0, Label string for status value 0 (Optional - defaults to Fault)
#% macro, sta_label1, Label string for status value 1 (Optional - defaults to Open)
#% macro, sta_label2, Label string for status value 2 (Optional - defaults to Opening)
#% macro, sta_label3, Label string for status value 3 (Optional - defaults to Closed)
#% macro, sta_label4, Label string for status value 4 (Optional - defaults to Closing)
#% macro, sta_label5, Label string for status value 5 (Optional - defaults to "")
#% macro, sta_label6, Label string for status value 6 (Optional - defaults to "")
#% macro, sta_label7, Label string for status value 7 (Optional - defaults to "")
#
#% macro, sta_sv0, Alarm severity for status value 0 (Optional - defaults to MAJOR)
#% macro, sta_sv1, Alarm severity for status value 1 (Optional - defaults to NO_ALARM)
#% macro, sta_sv2, Alarm severity for status value 2 (Optional - defaults to NO_ALARM)
#% macro, sta_sv3, Alarm severity for status value 3 (Optional - defaults to NO_ALARM)
#% macro, sta_sv4, Alarm severity for status value 4 (Optional - defaults to NO_ALARM)
#% macro, sta_sv5, Alarm severity for status value 5 (Optional - defaults to NO_ALARM)
#% macro, sta_sv6, Alarm severity for status value 6 (Optional - defaults to NO_ALARM)
#% macro, sta_sv7, Alarm severity for status value 7 (Optional - defaults to NO_ALARM)
#
#% macro, ilksta_label0, Label string for status value 0 (Optional - defaults to Failed)
#% macro, ilksta_label1, Label string for status value 1 (Optional - defaults to Run Ilks Ok)
#% macro, ilksta_label2, Label string for status value 2 (Optional - defaults to OK)
#% macro, ilksta_label3, Label string for status value 3 (Optional - defaults to Disarmed)
#% macro, ilksta_label4, Label string for status value 4 (Optional - defaults to "")
#% macro, ilksta_label5, Label string for status value 5 (Optional - defaults to "")
#% macro, ilksta_label6, Label string for status value 6 (Optional - defaults to "")
#% macro, ilksta_label7, Label string for status value 7 (Optional - defaults to "")
#
#% macro, ilksta_sv0, Alarm severity for interlock status value 0 (Optional - defaults to MAJOR)
#% macro, ilksta_sv1, Alarm severity for interlock status value 1 (Optional - defaults to NO_ALARM)
#% macro, ilksta_sv2, Alarm severity for interlock status value 2 (Optional - defaults to NO_ALARM)
#% macro, ilksta_sv3, Alarm severity for interlock status value 3 (Optional - defaults to NO_ALARM)
#% macro, ilksta_sv4, Alarm severity for interlock status value 4 (Optional - defaults to NO_ALARM)
#% macro, ilksta_sv5, Alarm severity for interlock status value 5 (Optional - defaults to NO_ALARM)
#% macro, ilksta_sv6, Alarm severity for interlock status value 6 (Optional - defaults to NO_ALARM)
#% macro, ilksta_sv7, Alarm severity for interlock status value 7 (Optional - defaults to NO_ALARM)
#
#% macro, mode1, name of remote operational mode (:MODE.ZNAM) (Optional - defaults Operational)
#% macro, mode2, name of local operational mode (:MODE.ONAM)  (Optional - defaults Service)
#% macro, DIRILK1, Part of ILK1 PV name (dollar(device):dollar(DIRILK1)ILK), named for "direction" of operation controlled by ILK1, e.g. set to OPEN for Bistable valve or leave blank for ordinary valve.  (Optional - defaults to "")
#% macro, DIRILK2, Part of ILK2 PV name (dollar(device):dollar(DIRILK2)ILK), named for "direction" of operation controlled by ILK2, e.g. set to CLOSE for Bistable valves (Optional - defaults to "ILK2")
#
#% macro, name, Object name and associated gui name      (Optional - defaults to "")
#% macro, desc, Box label for gui                        (Optional - defaults to value of device macro)
#
# This associates an edm screen with the template
# % gui, $(name=), edm, NX102_vacuumValve.edl, device=$(device), DIRILK1=$(DIRILK1=)
# % gui, $(name=), edmembed, NX102_vacuumValve-embed.edl, device=$(device), DIRILK1=$(DIRILK1=), box-label=$(desc=$(device))
#
# This associates BOY screens with the template
# % gui, $(name=), boydetail, dlsPLCApp_opi/NX102_vacValve_detail.opi, device=$(device), DESC=$(device), valvetype=valve
# % gui, $(name=), boyembed, dlsPLCApp_opi/NX102_vacValve_embed_box.opi, device=$(device), DESC=$(device), name=$(name=), valvetype=valve
# % gui, $(name=), boyembed, dlsPLCApp_opi/NX102_vacValve_embed.opi, device=$(device), DESC=$(device), name=$(name=), valvetype=valve
#
# This tells the gui that we don't have debounce records
record(ai, "$(device):HASDEBOUNCE") {
  field(VAL, "1")
  field(PINI, "YES")
}

# The label macros are the string fields on mbbi or mbbo records.
# These fields under EPICS R3.14.12.7 are limited to 25 characters.
#
# There are further macros defined in the template which
# do not have an entry in the expand command and they are passed
# through untouched, notably device and allowpv.
#
expand("NX102_valveCtrl.vdb", valveCtrl) {
  macro(PORT, "$(port)")
  macro(TAG, "$(tag)")
  macro(TAGIDX, "$(tagidx)")
  macro(con_label0, "$(con_label0=Open)")
  macro(con_label1, "$(con_label1=Close)")
  macro(con_label2, "$(con_label2=Reset)")
  macro(con_label3, "$(con_label3=)")
  macro(con_label4, "$(con_label4=)")
  macro(con_label5, "$(con_label5=)")
  macro(con_label6, "$(con_label6=)")
  macro(con_label7, "$(con_label7=)")
  macro(sta_label0, "$(sta_label0=Fault)")
  macro(sta_label1, "$(sta_label1=Open)")
  macro(sta_label2, "$(sta_label2=Opening)")
  macro(sta_label3, "$(sta_label3=Closed)")
  macro(sta_label4, "$(sta_label4=Closing)")
  macro(sta_label5, "$(sta_label5=)")
  macro(sta_label6, "$(sta_label6=)")
  macro(sta_label7, "$(sta_label7=)")
  macro(sta_sv0, "$(sta_sv0=MAJOR)")
  macro(sta_sv1, "$(sta_sv1=NO_ALARM)")
  macro(sta_sv2, "$(sta_sv2=NO_ALARM)")
  macro(sta_sv3, "$(sta_sv3=NO_ALARM)")
  macro(sta_sv4, "$(sta_sv4=NO_ALARM)")
  macro(sta_sv5, "$(sta_sv5=NO_ALARM)")
  macro(sta_sv6, "$(sta_sv6=NO_ALARM)")
  macro(sta_sv7, "$(sta_sv7=NO_ALARM)")
  macro(ilksta_label0, "$(ilksta_label0=Failed)")
  macro(ilksta_label1, "$(ilksta_label1=Run Ilks Ok)")
  macro(ilksta_label2, "$(ilksta_label2=OK)")
  macro(ilksta_label3, "$(ilksta_label3=Disarmed)")
  macro(ilksta_label4, "$(ilksta_label4=)")
  macro(ilksta_label5, "$(ilksta_label5=)")
  macro(ilksta_label6, "$(ilksta_label6=)")
  macro(ilksta_label7, "$(ilksta_label7=)")
  macro(ilksta_sv0, "$(ilksta_sv0=MAJOR)")
  macro(ilksta_sv1, "$(ilksta_sv1=NO_ALARM)")
  macro(ilksta_sv2, "$(ilksta_sv2=NO_ALARM)")
  macro(ilksta_sv3, "$(ilksta_sv3=NO_ALARM)")
  macro(ilksta_sv4, "$(ilksta_sv4=NO_ALARM)")
  macro(ilksta_sv5, "$(ilksta_sv5=NO_ALARM)")
  macro(ilksta_sv6, "$(ilksta_sv6=NO_ALARM)")
  macro(ilksta_sv7, "$(ilksta_sv7=NO_ALARM)")
  macro(donecalc, "((A=D)&(((A*2+1)=B)|A=2|C=0))?0:1")
  macro(whylocked, "$(whylocked=Open command not allowed)")
}

# The template also has a device macro, which does not appear in the expand
# definitions so flatdb passes it through unchanged.
# Get $(tag).ILK1_ (i.e. V.ILK1_...[n])
expand("NX102_valveIlk.vdb", valveIlk) {
  macro(PORT, "$(port)")
  macro(TAG, "$(tag)")
  macro(TAGIDX, "$(tagidx)")
  macro(TAGPREFIX, "ILK1_")
  macro(typeprefix, ":")
  macro(DIR, "$(DIRILK1=)")
}

# Following gets the second set of valve interlocks V[n].ILK2 which are only really relevent for bistable valves.
# Get $(tag).ILK2_  (i.e. V.ILK2_...[n])
expand("NX102_valveIlk.vdb", valveIlk2) {
  macro(PORT, "$(port)")
  macro(TAG, "$(tag)")
  macro(TAGIDX, "$(tagidx)")
  macro(TAGPREFIX, "ILK2_")
  macro(typeprefix, ":")
  macro(DIR, "$(DIRILK2=ILK2)")
}

# The file has macros which do not appear in the expand definition so
# flatdb passes them through unchanged.
#
expand("NX102_valveGilk.vdb", valveGilk) {
}

# Operational/Service Mode
#% archiver 10 Monitor
#% controldesk Mode smon
#
record(bi, "$(device):MODE") {
  field(DESC, "Mode")
  field(INP, "$(device):MODSTA.B0 CP MS")
  field(ZNAM, "$(mode1=Operational)")
  field(ONAM, "$(mode2=Service)")
}

record(ao, "$(device):SETPRESSURE") {
  field(DESC, "Butterfly valve set pressure")
  field(DTYP, "EtherIP")
  field(SCAN, ".2 second")
  field(OUT, "@$(port) $(tag).User_Set_Pressure[$(tagidx)] FORCE")
  field(PREC, "2")
}

record(ao, "$(device):SETPOSITION") {
  field(DESC, "Butterfly valve set position")
  field(DTYP, "EtherIP")
  field(SCAN, ".2 second")
  field(OUT, "@$(port) $(tag).User_Set_Position[$(tagidx)] FORCE")
  field(PREC, "1")
}

# % archiver 10 Monitor
record(ai, "$(device):POSITION") {
  field(DESC, "Butterfly valve position or Pressure")
  field(DTYP, "EtherIP")
  field(SCAN, ".2 second")
  field(INP, "@$(port) $(tag).Position[$(tagidx)]")
  field(EGU, "%")
  field(ADEL, "0.1")
  field(PREC, "1")
}

# Air Pressure De-bounce Time
#
#% controldesk Air Pressure De-bounce Time setpoint
#
record(ao, "$(device):SETADB") {
  field(DTYP, "Raw Soft Channel")
  field(DESC, "De-bounce Time")
  field(EGU, "s")
  field(PREC, "1")
  field(DOL, "10.0")
  field(ASLO, "0.1")
  field(PINI, "YES")
  field(OUT, "$(device):OUTTIMEOUT PP")
}

#
#% archiver 10 Monitor
#% controldesk Air Pressure De-bounce Time readback
#
record(calc, "$(device):ADB") {
  field(DESC, "De-bounce Time")
  field(CALC, "A/10.0")
  field(INPA, "$(device):INPTIMEOUT CP MS")
  field(SCAN, "1 second")
  field(EGU, "s")
  field(PREC, "1")
}

record(ao, "$(device):OUTTIMEOUT") {
  field(DTYP, "EtherIP")
  field(SCAN, "1 second")
  field(OUT, "@$(port) $(tag).Air_Debounce_Time[$(tagidx)]")
}



# DX00
# % archiver 10 Monitor
record(ai, "$(device):INPTIMEOUT") {
  field(DESC, "Debounce time readback")
  field(DTYP, "EtherIP")
  field(SCAN, "1 second")
  field(INP, "@$(port) $(tag).Air_Debounce_Time_RB[$(tagidx)]")
  field(ADEL, "0.1")
  field(PREC, "1")
}



#! Further lines contain data used by VisualDCT
#! View(463,0,1.0)
#! Record("$(device):HASDEBOUNCE",500,436,0,0,"$(device):HASDEBOUNCE")

#! TemplateInstance("valveCtrl",820,220,0,"")
#! TemplateField("valveCtrl","sta_label0",16777215,0,1)
#! TemplateField("valveCtrl","donecalc",16777215,0,1)
#! TemplateField("valveCtrl","con_label6",16777215,0,1)
#! TemplateField("valveCtrl","con_label5",16777215,0,1)
#! TemplateField("valveCtrl","con_label4",16777215,0,1)
#! TemplateField("valveCtrl","sta_label6",16777215,0,1)
#! TemplateField("valveCtrl","con_label3",16777215,0,1)
#! TemplateField("valveCtrl","sta_label5",16777215,0,1)
#! TemplateField("valveCtrl","con_label2",16777215,0,1)
#! TemplateField("valveCtrl","whylocked",16777215,0,1)
#! TemplateField("valveCtrl","con_label1",16777215,0,1)
#! TemplateField("valveCtrl","sta_label4",16777215,0,1)
#! TemplateField("valveCtrl","con_label0",16777215,0,1)
#! TemplateField("valveCtrl","sta_label3",16777215,0,1)
#! TemplateField("valveCtrl","sta_label2",16777215,0,1)
#! TemplateField("valveCtrl","sta_label1",16777215,0,1)


#! TemplateInstance("valveIlk",1140,80,0,"")
#! TemplateField("valveIlk","DIR",16777215,0,1)
#! TemplateField("valveIlk","TAGPREFIX",16777215,0,1)
#! TemplateField("valveIlk","TAGIDX",16777215,0,1)
#! TemplateField("valveIlk","device",16777215,0,1)
#! TemplateField("valveIlk","PORT",16777215,0,1)
#! TemplateField("valveIlk","TAG",16777215,0,1)
#! TemplateField("valveIlk","typeprefix",16777215,0,1)


#! TemplateInstance("valveIlk2",1440,80,0,"")
#! TemplateField("valveIlk2","DIR",16777215,0,1)
#! TemplateField("valveIlk2","TAGPREFIX",16777215,0,1)
#! TemplateField("valveIlk2","TAGIDX",16777215,0,1)
#! TemplateField("valveIlk2","device",16777215,0,1)
#! TemplateField("valveIlk2","PORT",16777215,0,1)
#! TemplateField("valveIlk2","TAG",16777215,0,1)
#! TemplateField("valveIlk2","typeprefix",16777215,0,1)


#! TemplateInstance("valveGilk",1660,400,0,"")

#! Record("$(device):MODE",1460,628,0,0,"$(device):MODE")
#! Field("$(device):MODE.INP",16777215,1,"$(device):MODE.INP")
#! Record("$(device):SETPRESSURE",20,14,0,0,"$(device):SETPRESSURE")
#! Record("$(device):SETPOSITION",260,14,0,0,"$(device):SETPOSITION")
#! Record("$(device):POSITION",500,26,0,0,"$(device):POSITION")
