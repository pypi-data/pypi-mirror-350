#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBD("../../dbd/dlsPLC_vdct.dbd")
#! DBDEND

# Template to be insantiated once per cell for the water ingress interlock. This template instantiates all PVs related to the 
# control of the interlock, much like a valve. It also adds a PV to enable and disable gui elements depending on which
# interlocks are applicable for a particular cell

# % macro, cell, Storage ring cell number ( XX format, eg 01) 
# % macro, id, Water ingress interlock instance (02 for ddba)
# % macro, port, Port 
# % macro, addr_s, address for straight interlock
# % macro, addr_a, address for arc interlock 
# % macro, vlvcc, vlvcc 
# % macro, mask, Mask value

# ###################################################################
# Interlock Status
# 
# % archiver 10 Monitor
# % controldesk Interlock Status smon
record(mbbi, "SR$(cell)C-VA-WINGR-$(id):STRAIGHT:ILKSTA") {
  field(DESC, "Interlock Status")
  field(DTYP, "Soft Channel")
  field(ZRST, "Disabled")
  field(ONST, "Healthy")
  field(TWST, "")
  field(THST, "")
  field(FRST, "$(ilksta_label4=)")
  field(FVST, "$(ilksta_label5=)")
  field(ZRSV, "$(ilksta_sv0=MAJOR)")
  field(ONSV, "$(ilksta_sv1=NO_ALARM)")
  field(TWSV, "$(ilksta_sv2=NO_ALARM)")
  field(THSV, "$(ilksta_sv3=NO_ALARM)")
  field(FRSV, "$(ilksta_sv4=NO_ALARM)")
  field(FVSV, "$(ilksta_sv5=NO_ALARM)")
  field(INP, "SR$(cell)C-VA-WINGR-$(id):STRAIGHT:GETILKSTA.VAL MS")
}

record(subArray, "SR$(cell)C-VA-WINGR-$(id):STRAIGHT:GETILKSTA") {
  field(DESC, "Get interlock status")
  field(DTYP, "Soft Channel")
  field(FLNK, "SR$(cell)C-VA-WINGR-$(id):STRAIGHT:ILKSTA")
  field(FTVL, "USHORT")
  field(MALM, "100")
}

# ILKSTA is in DM$(addr_s)+2. Calc the index into the 
# century record
record(calcout, "SR$(cell)C-VA-WINGR-$(id):STRAIGHT:ILKSTAINDX") {
  field(CALC, "$(addr_s)%100+2")
  field(OUT, "SR$(cell)C-VA-WINGR-$(id):STRAIGHT:GETILKSTA.INDX PP")
  field(PINI, "YES")
}

# ILKSTA is in DM$(addr_s)+2. Calc the inp link to the 
# century record. Needs to be done after PINI, so note
# the flnk
record(scalcout, "SR$(cell)C-VA-WINGR-$(id):STRAIGHT:ILKSTAINP") {
  field(CALC, "PRINTF(AA,FLOOR($(addr_s)/100))")
  field(AA, "$(vlvcc):DM%dXX CP MS")
  field(OUT, "SR$(cell)C-VA-WINGR-$(id):STRAIGHT:GETILKSTA.INP CA")
  field(FLNK, "SR$(cell)C-VA-WINGR-$(id):STRAIGHT:ILKSTAINPDIS")
  field(SCAN, "1 second")
}

# Disable the scalcout record so we don't keep writing values
record(ao, "SR$(cell)C-VA-WINGR-$(id):STRAIGHT:ILKSTAINPDIS") {
  field(VAL, "1")
  field(OUT, "SR$(cell)C-VA-WINGR-$(id):STRAIGHT:ILKSTAINP.DISA")
}


# Interlock readback for straight interlock
expand("dlsPLC_valveIlk.vdb", valveIlkStraight) {
  macro(device, "SR$(cell)C-VA-WINGR-$(id):STRAIGHT")
  macro(addr, "$(addr_s)")
  macro(DIR, "$(EMPTY=)")
  macro(ILK, "6")
  macro(INIILK, "7")
  macro(RAWILK, "8")
  macro(typeprefix, ":")
  macro(ilk0, "$(ilk0=unused)")
  macro(ilk1, "$(ilk1=unused)")
  macro(ilk2, "$(ilk2=unused)")
  macro(ilk3, "$(ilk3=unused)")
  macro(ilk4, "$(ilk4=unused)")
  macro(ilk5, "$(ilk5=unused)")
  macro(ilk6, "$(ilk6=unused)")
  macro(ilk7, "$(ilk7=unused)")
  macro(ilk8, "$(ilk8=unused)")
  macro(ilk9, "$(ilk9=unused)")
  macro(ilk10, "$(ilk10=unused)")
  macro(ilk11, "$(ilk11=unused)")
  macro(ilk12, "$(ilk12=unused)")
  macro(ilk13, "$(ilk13=unused)")
  macro(ilk14, "$(ilk14=unused)")
  macro(ilk15, "$(ilk15=unused)")
}

record(ao, "SR$(cell)C-VA-WINGR-$(id):STRAIGHT:RESET") {
  field(DESC, "Control")
  field(PINI, "NO")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(port), $(addr_s), $(timeout=0)) FINS_DM_WRITE")
  field(PRIO, "HIGH")
  field(VAL, "2")
}


# Calc record to show if associated piranis are showing a water ingress trip
# 1 = At least 1 pirani is OK (under water ingress setpoint)
# 0 = Both piranis are over water ingress set point
record(calc, "SR$(cell)C-VA-WINGR-$(id):STRAIGHT:PIRGS_OK"){
  field(INPA, "SR$(cell)C-VA-WINGR-$(id):S-PIRG-01:STATUS.B1 CP")
  field(INPB, "SR$(cell)C-VA-WINGR-$(id):S-PIRG-02:STATUS.B1 CP")
  field(CALC, "(A=1||B=1)?1:0")
}


# ###################################################################
# Interlock Status
# 
# % archiver 10 Monitor
# % controldesk Interlock Status smon
record(mbbi, "SR$(cell)C-VA-WINGR-$(id):ARC:ILKSTA") {
  field(DESC, "Interlock Status")
  field(DTYP, "Soft Channel")
  field(ZRST, "Disabled")
  field(ONST, "Healthy")
  field(TWST, "")
  field(THST, "")
  field(FRST, "$(ilksta_label4=)")
  field(FVST, "$(ilksta_label5=)")
  field(ZRSV, "$(ilksta_sv0=MAJOR)")
  field(ONSV, "$(ilksta_sv1=NO_ALARM)")
  field(TWSV, "$(ilksta_sv2=NO_ALARM)")
  field(THSV, "$(ilksta_sv3=NO_ALARM)")
  field(FRSV, "$(ilksta_sv4=NO_ALARM)")
  field(FVSV, "$(ilksta_sv5=NO_ALARM)")
  field(INP, "SR$(cell)C-VA-WINGR-$(id):ARC:GETILKSTA.VAL MS")
}

record(subArray, "SR$(cell)C-VA-WINGR-$(id):ARC:GETILKSTA") {
  field(DESC, "Get interlock status")
  field(DTYP, "Soft Channel")
  field(FLNK, "SR$(cell)C-VA-WINGR-$(id):ARC:ILKSTA")
  field(FTVL, "USHORT")
  field(MALM, "100")
}

# ILKSTA is in DM$(addr_a)+2. Calc the index into the 
# century record
record(calcout, "SR$(cell)C-VA-WINGR-$(id):ARC:ILKSTAINDX") {
  field(CALC, "$(addr_a)%100+2")
  field(OUT, "SR$(cell)C-VA-WINGR-$(id):ARC:GETILKSTA.INDX PP")
  field(PINI, "YES")
}

# ILKSTA is in DM$(addr_a)+2. Calc the inp link to the 
# century record. Needs to be done after PINI, so note
# the flnk
record(scalcout, "SR$(cell)C-VA-WINGR-$(id):ARC:ILKSTAINP") {
  field(CALC, "PRINTF(AA,FLOOR($(addr_a)/100))")
  field(AA, "$(vlvcc):DM%dXX CP MS")
  field(OUT, "SR$(cell)C-VA-WINGR-$(id):ARC:GETILKSTA.INP CA")
  field(FLNK, "SR$(cell)C-VA-WINGR-$(id):ARC:ILKSTAINPDIS")
  field(SCAN, "1 second")
}

# Disable the scalcout record so we don't keep writing values
record(ao, "SR$(cell)C-VA-WINGR-$(id):ARC:ILKSTAINPDIS") {
  field(VAL, "1")
  field(OUT, "SR$(cell)C-VA-WINGR-$(id):ARC:ILKSTAINP.DISA")
}

# Interlock readback for arc interlock
expand("dlsPLC_valveIlk.vdb", valveIlkArc) {
  macro(device, "SR$(cell)C-VA-WINGR-$(id):ARC")
  macro(addr, "$(addr_a)")
  macro(DIR, "$(EMPTY=)")
  macro(ILK, "6")
  macro(INIILK, "7")
  macro(RAWILK, "8")
  macro(typeprefix, ":")
  macro(ilk0, "$(ilk0=unused)")
  macro(ilk1, "$(ilk1=unused)")
  macro(ilk2, "$(ilk2=unused)")
  macro(ilk3, "$(ilk3=unused)")
  macro(ilk4, "$(ilk4=unused)")
  macro(ilk5, "$(ilk5=unused)")
  macro(ilk6, "$(ilk6=unused)")
  macro(ilk7, "$(ilk7=unused)")
  macro(ilk8, "$(ilk8=unused)")
  macro(ilk9, "$(ilk9=unused)")
  macro(ilk10, "$(ilk10=unused)")
  macro(ilk11, "$(ilk11=unused)")
  macro(ilk12, "$(ilk12=unused)")
  macro(ilk13, "$(ilk13=unused)")
  macro(ilk14, "$(ilk14=unused)")
  macro(ilk15, "$(ilk15=unused)")
}

record(ao, "SR$(cell)C-VA-WINGR-$(id):ARC:RESET") {
  field(DESC, "Control")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(port), $(addr_a), $(timeout=0)) FINS_DM_WRITE")
  field(PRIO, "HIGH")
  field(VAL, "2")
}

# Calc record to show if associated piranis are showing a water ingress trip
# 1 = At least 1 pirani is OK (under water ingress setpoint)
# 0 = All piranis are over water ingress set point
record(calc, "SR$(cell)C-VA-WINGR-$(id):ARC:PIRGS_OK"){
  field(INPA, "SR$(cell)C-VA-WINGR-$(id):A-PIRG-01:STATUS.B1 CP")
  field(INPB, "SR$(cell)C-VA-WINGR-$(id):A-PIRG-02:STATUS.B1 CP")
  field(INPC, "SR$(cell)C-VA-WINGR-$(id):A-PIRG-03:STATUS.B1 CP")
  field(INPD, "SR$(cell)C-VA-WINGR-$(id):A-PIRG-04:STATUS.B1 CP")
  field(CALC, "(A=1||B=1||C=1||D=1)?1:0")
}

# Record to Enable or disable water ingress interlock bit gui elements depeding on mask
record(ai, "SR$(cell)C-VA-WINGR-$(id):INTERLOCK_MASK") {
    field(VAL, "$(mask)")
}
