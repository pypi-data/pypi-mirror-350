#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBD("../../dbd/dlsPLC_vdct.dbd")
#! DBDEND

## ^ Not really - I had to lie to it to get it to flatten this hand-crafted file!

# dlsPLC_mpsPermit.template
# Template database for an MPS Permit using FINS protocol
# Ian Gillingham, November 2013
# Derived from vacuumValve -> mpsPermit_asyn.template
#
# substitutions:
# device         - device name
# port           - seral port number (from device manager table)
# permit         - permit number (1-4 within PLC)
# ilk0 ... ilk15 - interlock descriptions


expand("dlsPLC_valveIlk.vdb", valveIlk) 
    {
    macro(DIR, "$(EMPTY=)")
    macro(ILK, "6")
    macro(INIILK, "7")
    macro(RAWILK, "8")
    macro(typeprefix, ":")
    macro(ilk0, "$(ilk0=unused)")
    macro(ilk1, "$(ilk1=unused)")
    macro(ilk2, "$(ilk2=unused)")
    macro(ilk3, "$(ilk3=unused)")
    macro(ilk4, "$(ilk4=unused)")
    macro(ilk5, "$(ilk5=unused)")
    macro(ilk6, "$(ilk6=unused)")
    macro(ilk7, "$(ilk7=unused)")
    macro(ilk8, "$(ilk8=unused)")
    macro(ilk9, "$(ilk9=unused)")
    macro(ilk10, "$(ilk10=unused)")
    macro(ilk11, "$(ilk11=unused)")
    macro(ilk12, "$(ilk12=unused)")
    macro(ilk13, "$(ilk13=unused)")
    macro(ilk14, "$(ilk14=unused)")
    macro(ilk15, "$(ilk15=unused)")
    }




################################################################################
# Reset
#
#% controldesk Status scon
#
record(mbbo, "$(device):RESET")
{
  field(DESC, "Reset")
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(port), $(addr), $(timeout=0)) FINS_DM_WRITE")
  field(ZRST, "")
  field(ONST, "")
  field(TWST, "Reset")
  field(PRIO, "HIGH")
}
################################################################################
# Interlock Status
#
#% archiver 10 Monitor
#% controldesk Status smon
#
record(bi, "$(device):STA")
{
    field(DESC, "Interlock Status")
    field(DTYP, "Soft Channel")
    field(ZNAM, "Disabled")
    field(ONAM, "OK")
    field(ZSV,  "MAJOR")
    field(OSV,  "NO_ALARM")
    field(INP,  "$(device):GETSTA")
}

#% archiver 10 Monitor
#% controldesk Mode smon
#
record(bi, "$(device):MODE")
{
    field(DESC, "Mode")
    field(DTYP, "Raw Soft Channel")
    field(INP, "$(device):GETMODSTA")
    field(PHAS, "1")
    field(ZNAM, "Operational")
    field(ONAM, "Service")
}

record(subArray, "$(device):GETSTA") 
{
  field(DESC, "Get status")
  field(DTYP, "Soft Channel")
  field(FLNK, "$(device):STA")
  field(FTVL, "USHORT")
  field(MALM, "100")
}

# STA is in DM$(addr)+2. Calc the index into the 
# century record
record(calcout, "$(device):STAINDX") 
{
  field(CALC, "$(addr)%100+2")
  field(OUT, "$(device):GETSTA.INDX PP")
  field(PINI, "YES")
}

# STA is in DM$(addr)+3. Calc the inp link to the 
# century record. Needs to be done after PINI, so note
# the flnk
record(scalcout, "$(device):STAINP") 
{
  field(CALC, "PRINTF(AA,FLOOR($(addr)/100))")
  field(AA, "$(vlvcc):DM%dXX CP MS")
  field(OUT, "$(device):GETSTA.INP CA")
  field(FLNK, "$(device):STAINPDIS")
  field(SCAN, "1 second")
}

# Disable the scalcout record so we don't keep writing values
record(ao, "$(device):STAINPDIS") 
{
  field(VAL, "1")
  field(OUT, "$(device):STAINP.DISA")
}


record(subArray, "$(device):GETMODSTA") 
{
  field(DESC, "Get mode")
  field(DTYP, "Soft Channel")
  field(FLNK, "$(device):MODE")
  field(FTVL, "USHORT")
  field(MALM, "100")
}

# STA is in DM$(addr)+5. Calc the index into the 
# century record
record(calcout, "$(device):MODSTAINDX") 
{
  field(CALC, "$(addr)%100+5")
  field(OUT, "$(device):GETMODSTA.INDX PP")
  field(PINI, "YES")
}

# STA is in DM$(addr)+5. Calc the inp link to the 
# century record. Needs to be done after PINI, so note
# the flnk
record(scalcout, "$(device):MODSTAINP") 
{
  field(CALC, "PRINTF(AA,FLOOR($(addr)/100))")
  field(AA, "$(vlvcc):DM%dXX CP MS")
  field(OUT, "$(device):GETMODSTA.INP CA")
  field(FLNK, "$(device):MODSTAINPDIS")
  field(SCAN, "1 second")
}

# Disable the scalcout record so we don't keep writing values
record(ao, "$(device):MODSTAINPDIS") 
{
  field(VAL, "1")
  field(OUT, "$(device):MODSTAINP.DISA")
}
