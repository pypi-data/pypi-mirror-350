#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBD("../../dbd/dlsPLC_vdct.dbd")
#! DBDEND

# NX102_vacPump.vdb is expanded to NX102_vacPump.template by flatdb.
#
#% macro, __doc__, Template for a NX PLC to control and interlock vacuum pumps of various kinds, e.g. Scroll and Turbo pumps.  NOTE: Covers basic commonly required control only and excludes pump make and model or application specific control and monitoring of the pump which might be available and also be required typically via serial control, for example settings configuration or service period information.
#
#% macro, device,     Mandatory.  Device name of the pump.
#% macro, port,       Mandatory.  Name of port for the ether_ip driver for the PLC controlling/interlocking the pump.
#% macro, tag,        Mandatory.  NX PLC tag string e.g. S for Scroll or T for Turbo.
#% macro, tagidx,     Mandatory.  NX PLC tag index number.  Typically this is the same as the id number in the device name, but 
#
#% macro, allowpv,    Optional.   Defaults to "".  If specified, then only write an "open" i.e. on command when this is non-zero. MUST have CP at the end of it.  The term "open" here and in PV names is because of heritage from valve control.  Generally by default the "open" command for a pump actually signifies turn it on.
#% macro, whylocked,  Optional.   Defaults to "On command not allowed".  String to output to EDM synoptic as to precisely why the device is locked and by whom.
#
#% macro, con_label0, Optional.  Defaults to On.        Label string for control value 0
#% macro, con_label1, Optional.  Defaults to Off.       Label string for control value 1
#% macro, con_label2, Optional.  Defaults to Reset.     Label string for control value 2
#% macro, con_label3, Optional.  Defaults to Standby.   Label string for control value 3
#% macro, con_label4, Optional.  Defaults to FullSpeed. Label string for control value 4
#% macro, con_label5, Optional.  Defaults to "".        Label string for control value 5
#% macro, con_label6, Optional.  Defaults to "".        Label string for control value 6
#% macro, con_label7, Optional.  Defaults to "".        Label string for control value 7
#
#% macro, sta_label0, Optional.  Defaults to Fault.     Label string for status value 0
#% macro, sta_label1, Optional.  Defaults to On.        Label string for status value 1
#% macro, sta_label2, Optional.  Defaults to Standby.   Label string for status value 2
#% macro, sta_label3, Optional.  Defaults to Off.       Label string for status value 3
#% macro, sta_label4, Optional.  Defaults to "".        Label string for status value 4
#% macro, sta_label5, Optional.  Defaults to "".        Label string for status value 5
#% macro, sta_label6, Optional.  Defaults to "".        Label string for status value 6
#% macro, sta_label7, Optional.  Defaults to "".        Label string for status value 7
#
# % macro, sta_sv0,    Optional.  Defaults to MAJOR.         	 Alarm severity for status value 0.
# % macro, sta_sv1,    Optional.  Defaults to NO_ALARM.      	 Alarm severity for status value 1.
# % macro, sta_sv2,    Optional.  Defaults to NO_ALARM.      	 Alarm severity for status value 2.
# % macro, sta_sv3,    Optional.  Defaults to NO_ALARM.      	 Alarm severity for status value 3.
# % macro, sta_sv4,    Optional.  Defaults to NO_ALARM.      	 Alarm severity for status value 4.
# % macro, sta_sv5,    Optional.  Defaults to NO_ALARM.      	 Alarm severity for status value 5.
# % macro, sta_sv6,    Optional.  Defaults to NO_ALARM.      	 Alarm severity for status value 6.
# % macro, sta_sv7,    Optional.  Defaults to NO_ALARM.      	 Alarm severity for status value 7.
#
#% macro, ilksta_label0, Optional.  Defaults to Failed.      Label string for status value 0
#% macro, ilksta_label1, Optional.  Defaults to Run Ilks OK. Label string for status value 1
#% macro, ilksta_label2, Optional.  Defaults to OK.          Label string for status value 2
#% macro, ilksta_label3, Optional.  Defaults to "".          Label string for status value 3
#% macro, ilksta_label4, Optional.  Defaults to "".          Label string for status value 4
#% macro, ilksta_label5, Optional.  Defaults to "".          Label string for status value 5
#% macro, ilksta_label6, Optional.  Defaults to "".          Label string for status value 6
#% macro, ilksta_label7, Optional.  Defaults to "".          Label string for status value 7
#
# % macro, ilksta_sv0,    Optional.  Defaults to MAJOR.        Alarm severity for interlock status value 0.
# % macro, ilksta_sv1,    Optional.  Defaults to NO_ALARM.     Alarm severity for interlock status value 1.
# % macro, ilksta_sv2,    Optional.  Defaults to NO_ALARM.     Alarm severity for interlock status value 2.
# % macro, ilksta_sv3,    Optional.  Defaults to NO_ALARM.     Alarm severity for interlock status value 3.
# % macro, ilksta_sv4,    Optional.  Defaults to NO_ALARM.     Alarm severity for interlock status value 4.
# % macro, ilksta_sv5,    Optional.  Defaults to NO_ALARM.     Alarm severity for interlock status value 5.
# % macro, ilksta_sv6,    Optional.  Defaults to NO_ALARM.     Alarm severity for interlock status value 6.
# % macro, ilksta_sv7,    Optional.  Defaults to NO_ALARM.     Alarm severity for interlock status value 7.
#
#% macro, mode1,         Optional.  Defaults to Operational.   Name of first mode of operation, remote commands allowed.  (Name is mode1 but value is 0.  i.e. :MODE.ZNAM)
#% macro, mode2,         Optional.  Defaults to Service.       Name of second mode of operation, local control only.  (Name is mode2 but value is 1.  i.e. :MODE.ONAM)
# % macro, short_desc,   Optional.  Defaults to Shorting Plug. Description field on the PLUG record DESC field for whether a shorting plug is present.
# % macro, short_label0, Optional.  Defaults to Dummy.         Label on the PLUG record ZNAM field for no shorting plug present.
# % macro, short_label1, Optional.  Defaults to Real.          Label on the PLUG record ONAM field for shorting plug present.
# % macro, short_sv0,    Optional.  Defaults to NO_ALARM.      Severity on the PLUG record ZSV field for the status value 0.
# % macro, short_sv1,    Optional.  Defaults to NO_ALARM.      Severity on the PLUG record OSV field for the status value 1.
#
#% macro, name,          Optional.  Defaults to "".            Object name and associated gui name.
#
# This associates an edm screen with the template
# % gui, $(name=), edm, vacuumPump.edl, device=$(device)
#
# This tells the gui that we don't have debounce records
record(ai, "$(device):HASDEBOUNCE") {
  field(VAL, "0")
  field(PINI, "YES")
}

# The label macros are the string fields on mbbi or mbbo records.
# These fields under EPICS R3.14.12.7 are limited to 25 characters.
#
# The macros listed in the expand statement which exist in the template
# being expanded will be expanded as defined.  The others which are not
# listed will not be expanded, notably device.
expand("NX102_valveCtrl.vdb", valveCtrl) {
  macro(PORT, "$(port)")
  macro(TAG, "$(tag)")
  macro(TAGIDX, "$(tagidx)")
  macro(con_label0, "$(con_label0=On)")
  macro(con_label1, "$(con_label1=Off)")
  macro(con_label2, "$(con_label2=Reset)")
  macro(con_label3, "$(con_label3=)")
  macro(con_label4, "$(con_label4=)")
  macro(con_label5, "$(con_label5=)")
  macro(con_label6, "$(con_label6=)")
  macro(con_label7, "$(con_label7=)")
  macro(sta_label0, "$(sta_label0=Fault)")
  macro(sta_label1, "$(sta_label1=On)")
  macro(sta_label2, "$(sta_label2=Standby)")
  macro(sta_label3, "$(sta_label3=Off)")
  macro(sta_label4, "$(sta_label4=FullSpeed)")
  macro(sta_label5, "$(sta_label5=)")
  macro(sta_label6, "$(sta_label6=)")
  macro(sta_label7, "$(sta_label7=)")
  macro(sta_sv0, "$(sta_sv0=MAJOR)")
  macro(sta_sv1, "$(sta_sv1=NO_ALARM)")
  macro(sta_sv2, "$(sta_sv2=NO_ALARM)")
  macro(sta_sv3, "$(sta_sv3=NO_ALARM)")
  macro(sta_sv4, "$(sta_sv4=NO_ALARM)")
  macro(sta_sv5, "$(sta_sv5=NO_ALARM)")
  macro(sta_sv6, "$(sta_sv6=NO_ALARM)")
  macro(sta_sv7, "$(sta_sv7=NO_ALARM)")
  macro(ilksta_label0, "$(ilksta_label0=Failed)")
  macro(ilksta_label1, "$(ilksta_label1=Run Ilks Ok)")
  macro(ilksta_label2, "$(ilksta_label2=OK)")
  macro(ilksta_label3, "$(ilksta_label3=)")
  macro(ilksta_label4, "$(ilksta_label4=)")
  macro(ilksta_label5, "$(ilksta_label5=)")
  macro(ilksta_label6, "$(ilksta_label6=)")
  macro(ilksta_label7, "$(ilksta_label7=)")
  macro(ilksta_sv0, "$(ilksta_sv0=MAJOR)")
  macro(ilksta_sv1, "$(ilksta_sv1=NO_ALARM)")
  macro(ilksta_sv2, "$(ilksta_sv2=NO_ALARM)")
  macro(ilksta_sv3, "$(ilksta_sv3=NO_ALARM)")
  macro(ilksta_sv4, "$(ilksta_sv4=NO_ALARM)")
  macro(ilksta_sv5, "$(ilksta_sv5=NO_ALARM)")
  macro(ilksta_sv6, "$(ilksta_sv6=NO_ALARM)")
  macro(ilksta_sv7, "$(ilksta_sv7=NO_ALARM)")
  macro(donecalc, "((A=D)&(((A*2+1)=B)|A=2|C=0))?0:1")
  macro(whylocked, "$(whylocked=On command not allowed)")
}

# The DIR expansion macro is the "direction" of the interlock and it
# comes into its own for devices which have different conditions to
# open and close or turn on or off.  It adds a prefix before the word
# ILK to the record names.  The typeprefix also adds the possibility
# of a variant prefix component for the type of interlock, it has to
# include the colon.  If for example there were different interlocks
# for standby or fullspeed.  There is currently no support for a
# second interlock in the pump NX interfaces and practise has been not
# to have a type prefix component or a direction prefix.
# The fact of DIR being empty and typeprefix being only a colon
# means that the vacuumPump.edl GUI screen, which has heritage going back
# before the dlsPLC module, can still be used.  Otherwise a screen which
# uses those macros will be needed because they are used in constructing
# record/PV names.
#
# There is a further macro called device in the template which does not
# have an entry in the expand command, so it is passed through flatdb
# unchanged.
#
expand("NX102_valveIlk.vdb", valveIlk) {
  macro(PORT, "$(port)")
  macro(TAG, "$(tag)")
  macro(TAGIDX, "$(tagidx)")
  macro(TAGPREFIX, "ILK1_")
  macro(typeprefix, ":")
  macro(DIR, "")
}

# Operational/Service Mode
# 
# The MODSTA record is defined in the expansion of the valveCtrl.vdb template.
# 
# % archiver 10 Monitor
# % controldesk Mode smon
record(bi, "$(device):MODE") {
  field(DESC, "Mode")
  field(INP, "$(device):MODSTA.B0 CP MS")
  field(ZNAM, "$(mode1=Operational)")
  field(ONAM, "$(mode2=Service)")
}

# Shorting Plug Present
#% archiver 10 Monitor
#% controldesk Plug smon
#
record(bi, "$(device):PLUG") {
  field(DESC, "$(short_desc=Shorting Plug)")
  field(INP, "$(device):MODSTA.B1 CP MS")
  field(ZNAM, "$(short_label0=Dummy)")
  field(ONAM, "$(short_label1=Real)")
  field(ZSV, "$(short_sv0=NO_ALARM)")
  field(OSV, "$(short_sv1=NO_ALARM)")
}

#! Further lines contain data used by VisualDCT
#! View(465,567,1.0)
#! Record("$(device):HASDEBOUNCE",500,436,0,0,"$(device):HASDEBOUNCE")

#! TemplateInstance("valveCtrl",820,220,0,"")
#! TemplateField("valveCtrl","sta_label0",16777215,0,1)
#! TemplateField("valveCtrl","donecalc",16777215,0,1)
#! TemplateField("valveCtrl","con_label6",16777215,0,1)
#! TemplateField("valveCtrl","con_label5",16777215,0,1)
#! TemplateField("valveCtrl","con_label4",16777215,0,1)
#! TemplateField("valveCtrl","sta_label6",16777215,0,1)
#! TemplateField("valveCtrl","con_label3",16777215,0,1)
#! TemplateField("valveCtrl","whylocked",16777215,0,1)
#! TemplateField("valveCtrl","con_label2",16777215,0,1)
#! TemplateField("valveCtrl","sta_label5",16777215,0,1)
#! TemplateField("valveCtrl","sta_label4",16777215,0,1)
#! TemplateField("valveCtrl","con_label1",16777215,0,1)
#! TemplateField("valveCtrl","sta_label3",16777215,0,1)
#! TemplateField("valveCtrl","con_label0",16777215,0,1)
#! TemplateField("valveCtrl","sta_label2",16777215,0,1)
#! TemplateField("valveCtrl","sta_label1",16777215,0,1)


#! TemplateInstance("valveIlk",1140,80,0,"")
#! TemplateField("valveIlk","DIR",16777215,0,1)
#! TemplateField("valveIlk","TAGPREFIX",16777215,0,1)
#! TemplateField("valveIlk","TAGIDX",16777215,0,1)
#! TemplateField("valveIlk","device",16777215,0,1)
#! TemplateField("valveIlk","PORT",16777215,0,1)
#! TemplateField("valveIlk","TAG",16777215,0,1)
#! TemplateField("valveIlk","typeprefix",16777215,0,1)

#! Record("$(device):MODE",1460,628,0,0,"$(device):MODE")
#! Field("$(device):MODE.INP",16777215,1,"$(device):MODE.INP")
#! Record("$(device):PLUG",1660,628,0,0,"$(device):PLUG")
#! Field("$(device):PLUG.INP",16777215,1,"$(device):PLUG.INP")
