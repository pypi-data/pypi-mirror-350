#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBD("../../dbd/dlsPLC_vdct.dbd")
#! DBDEND

template() {

  #! InputMacro(device,"Device prefix",1660,20,16777215,1,false)
  #! InputMacro(posportID,"ID of the vacuum port position for the sample manipulator.  Must be integer 1 to 8 or 0 for special case of Arm/RDC/UFO",1660,80,16777215,1,false)
  #! InputMacro(posportprefix,"PREFIX of the vacuum port position for the sample manipulator",1660,60,16777215,1,false)
  #! InputMacro(PORT,"Comms port (DLS NX102) PLC controller is on",1660,80,16777215,1,false)
  #! InputMacro(TAG,"",1660,100,16777215,1,false)
  #! InputMacro(TAGIDX,"",1660,120,16777215,1,false)
  #! InputMacro(TAGPREFIX,"",1660,140,16777215,1,false)
  #! InputMacro(TAGNAME,"",1660,160,16777215,1,false)
  #! InputMacro(desc_label0,"Descriptive label for bit0 of the position status Coil word",1660,180,16777215,1,false)
  #! InputMacro(desc_label1,"Descriptive label for bit1 of the position status Coil word",1660,200,16777215,1,false)
  #! InputMacro(desc_label2,"Descriptive label for bit2 of the position status Coil word",1660,220,16777215,1,false)
  #! InputMacro(desc_label3,"Descriptive label for bit3 of the position status Coil word",1660,240,16777215,1,false)
  #! InputMacro(desc_label4,"Descriptive label for bit4 of the position status Coil word",1660,260,16777215,1,false)
  #! InputMacro(desc_label5,"Descriptive label for bit5 of the position status Coil word",1660,280,16777215,1,false)
  #! InputMacro(desc_label6,"Descriptive label for bit6 of the position status Coil word",1660,300,16777215,1,false)
  #! InputMacro(desc_label7,"Descriptive label for bit7 of the position status Coil word",1660,320,16777215,1,false)
  #! InputMacro(desc_label8,"Descriptive label for bit8 of the position status Coil word",1660,340,16777215,1,false)
  #! InputMacro(desc_label9,"Descriptive label for bit9 of the position status Coil word",1660,360,16777215,1,false)
  #! InputMacro(desc_label10,"Descriptive label for bit10 of the position status Coil word",1660,380,16777215,1,false)
  #! InputMacro(desc_label11,"Descriptive label for bit11 of the position status Coil word",1660,400,16777215,1,false)
  #! InputMacro(desc_label12,"Descriptive label for bit12 of the position status Coil word",1660,420,16777215,1,false)
  #! InputMacro(desc_label13,"Descriptive label for bit13 of the position status Coil word",1660,440,16777215,1,false)
  #! InputMacro(desc_label14,"Descriptive label for bit14 of the position status Coil word",1660,460,16777215,1,false)
  #! InputMacro(desc_label15,"Descriptive label for bit15 of the position status Coil word",1660,480,16777215,1,false)
  #! InputMacro(longdesc,"Description of position port",1660,500,16777215,1,false)
  #! InputMacro(shortdesc,"Short, abbreviated description of position port.",1660,520,16777215,1,false)
  #! InputMacro(smready_bitno,"Status bit 0 to 15 for sample manipulator in chamber is positioned ready to collaborate in transfer",1660,540,16777215,1,false)
  #! InputMacro(sampleholder_bitno,"Status bit 0 to 15 for sample holder present in chamber",1660,560,16777215,1,false)
}

# Arguments of VDCT hash bang Input Macro directive:
# (macro name, description, xpos, ypos, colour, defaultVisibility)
#
# NOTE: The PORT macro is the communications port, but the sample
#       manipulator port refers to the vacuum ports on the radial distribution chamber (a.k.a. UFO).
#
# The Port Position status readback.  This is actually held by the PreVac Modbus PLC as a number of Coils
# but the DLS NX102 PLC organises them into bitflags for efficient readback interface.
#
record(mbbiDirect, "$(device)$(posportprefix)$(posportID):POSSTA") {
  field(DESC, "Sample Manipulator Position $(posportID) Status")
  field(DTYP, "EtherIP")
  field(INP, "@$(PORT) $(TAG).$(TAGPREFIX)$(TAGNAME)[$(TAGIDX)] B 0")
  field(SCAN, ".5 second")
  field(NOBT, "16")
  field(FLNK, "$(device)$(posportprefix)$(posportID):POSSTA:FAN")
}

# Fanout to calculations dependent on the POSSTA value (the port position status).
#
record(fanout, "$(device)$(posportprefix)$(posportID):POSSTA:FAN") {
  field(DESC, "Propagate posport$(posportID) Status")
  field(SCAN, "Passive")
  field(LNK1, "$(device)$(posportprefix)$(posportID):SAMPLEMANIP:READY:CALC")
  field(LNK2, "$(device)$(posportprefix)$(posportID):SAMPLEHOLDER:CALC")
}

# Records DESC0...15 to set labels to display against the position status word.
# The strings are not read back from the PLC at the moment.
# They are declared with mandatory macros in the lower level template, expanded to
# become optional with defaults in the higher level template.
#
# Label for bit 0 of the position status word.
record(stringout, "$(device)$(posportprefix)$(posportID):DESC0") {
  field(DESC, "Description of bit 0 status.")
  field(DTYP, "Soft Channel")
  field(PINI, "YES")
  field(VAL, "$(desc_label0)")
}

# Label for bit 1 of the position status word.
record(stringout, "$(device)$(posportprefix)$(posportID):DESC1") {
  field(DESC, "Description of bit 1 status.")
  field(DTYP, "Soft Channel")
  field(PINI, "YES")
  field(VAL, "$(desc_label1)")
}

# Label for bit 2 of the position status word.
record(stringout, "$(device)$(posportprefix)$(posportID):DESC2") {
  field(DESC, "Description of bit 2 status.")
  field(DTYP, "Soft Channel")
  field(PINI, "YES")
  field(VAL, "$(desc_label2)")
}

# Label for bit 3 of the position status word.
record(stringout, "$(device)$(posportprefix)$(posportID):DESC3") {
  field(DESC, "Description of bit 3 status.")
  field(DTYP, "Soft Channel")
  field(PINI, "YES")
  field(VAL, "$(desc_label3)")
}

# Label for bit 4 of the position status word.
record(stringout, "$(device)$(posportprefix)$(posportID):DESC4") {
  field(DESC, "Description of bit 4 status.")
  field(DTYP, "Soft Channel")
  field(PINI, "YES")
  field(VAL, "$(desc_label4)")
}

# Label for bit 5 of the position status word.
record(stringout, "$(device)$(posportprefix)$(posportID):DESC5") {
  field(DESC, "Description of bit 5 status.")
  field(DTYP, "Soft Channel")
  field(PINI, "YES")
  field(VAL, "$(desc_label5)")
}

# Label for bit 6 of the position status word.
record(stringout, "$(device)$(posportprefix)$(posportID):DESC6") {
  field(DESC, "Description of bit 6 status.")
  field(DTYP, "Soft Channel")
  field(PINI, "YES")
  field(VAL, "$(desc_label6)")
}

# Label for bit 7 of the position status word.
record(stringout, "$(device)$(posportprefix)$(posportID):DESC7") {
  field(DESC, "Description of bit 7 status.")
  field(DTYP, "Soft Channel")
  field(PINI, "YES")
  field(VAL, "$(desc_label7)")
}

# Label for bit 8 of the position status word.
record(stringout, "$(device)$(posportprefix)$(posportID):DESC8") {
  field(DESC, "Description of bit 8 status.")
  field(DTYP, "Soft Channel")
  field(PINI, "YES")
  field(VAL, "$(desc_label8)")
}

# Label for bit 9 of the position status word.
record(stringout, "$(device)$(posportprefix)$(posportID):DESC9") {
  field(DESC, "Description of bit 9 status.")
  field(DTYP, "Soft Channel")
  field(PINI, "YES")
  field(VAL, "$(desc_label9)")
}

# Label for bit 10 of the position status word.
record(stringout, "$(device)$(posportprefix)$(posportID):DESC10") {
  field(DESC, "Description of bit 10 status.")
  field(DTYP, "Soft Channel")
  field(PINI, "YES")
  field(VAL, "$(desc_label10)")
}

# Label for bit 11 of the position status word.
record(stringout, "$(device)$(posportprefix)$(posportID):DESC11") {
  field(DESC, "Description of bit 11 status.")
  field(DTYP, "Soft Channel")
  field(PINI, "YES")
  field(VAL, "$(desc_label11)")
}

# Label for bit 12 of the position status word.
record(stringout, "$(device)$(posportprefix)$(posportID):DESC12") {
  field(DESC, "Description of bit 12 status.")
  field(DTYP, "Soft Channel")
  field(PINI, "YES")
  field(VAL, "$(desc_label12)")
}

# Label for bit 13 of the position status word.
record(stringout, "$(device)$(posportprefix)$(posportID):DESC13") {
  field(DESC, "Description of bit 13 status.")
  field(DTYP, "Soft Channel")
  field(PINI, "YES")
  field(VAL, "$(desc_label13)")
}

# Label for bit 14 of the position status word.
record(stringout, "$(device)$(posportprefix)$(posportID):DESC14") {
  field(DESC, "Description of bit 14 status.")
  field(DTYP, "Soft Channel")
  field(PINI, "YES")
  field(VAL, "$(desc_label14)")
}

# Label for bit 15 of the position status word.
record(stringout, "$(device)$(posportprefix)$(posportID):DESC15") {
  field(DESC, "Description of bit 15 status.")
  field(DTYP, "Soft Channel")
  field(PINI, "YES")
  field(VAL, "$(desc_label15)")
}

# Long description of the position port.
record(stringout, "$(device)$(posportprefix)$(posportID):LONGDESC") {
  field(DESC, "Position port $(posportID) description")
  field(PINI, "YES")
  field(VAL, "$(longdesc)")
}

# Short description of the position port.
record(stringout, "$(device)$(posportprefix)$(posportID):SHORTDESC") {
  field(DESC, "Posport$(posportID) short description")
  field(PINI, "YES")
  field(VAL, "$(shortdesc)")
}

#
# The ID of the position port (as the value in a record as opposed to
# a string in the name of a record.  It was originally a stringout
# but now it has to be an integer as it gets used in calculations.
#
record(ao, "$(device)$(posportprefix)$(posportID):POSPORTID") {
  field(DESC, "Posport$(posportID) ID number")
  field(PINI, "YES")
  field(VAL, "$(posportID)")
}

#
# Calculate the readiness of the sample manipulator in the chamber
# associated with the posport to participate in a transfer.
#
# This is the bit labelled "ReadyForTransfer", which has stayed on all
# the time during early testing.  Now believe this is intended to
# indicate the signal provided to the PreVac PLC from the interlocking
# from the DLS system and it has been held on to allow commissioning
# without the interlocks.  The sample manipulators in the port
# chambers with motors which are on GeoBricks have to have their
# motors in safe positions to receive the holder, which is signalled
# on GPIO.
#
# It is likely the bit number is the same for each of the ports except
# for the Arm/RDC/UFO port 0, where are using the bit labelled "Master
# Interlock Status", which on HiTES1 is a different bit number to the
# other ports.  If that is inapproproprate, might need to do a special
# case via conditional output, which would complicate the calculation.
#
# Writes the result to the fixed ID port record in the NX102_PreVacCoils_SMStatus template.
#
record(calcout, "$(device)$(posportprefix)$(posportID):SAMPLEMANIP:READY:CALC") {
  field(DESC, "Posport$(posportID) SM ready calculation")
  field(SCAN, "Passive")
  field(INPA, "$(smready_bitno)")
  field(INPB, "$(device)$(posportprefix)$(posportID):POSSTA")
  field(CALC, "(B>>A)&1")
  field(OUT, "$(device)$(posportprefix)$(posportID):SAMPLEMANIP:READY PP")
}

#
# Calculate the presence of the sample holder in the chamber associated with the posport.
#
# (Ultimately on HiTES1 this signal is derived from a camera in the
# chamber, but EPICS has no involvement with that).
#
# Need the macro to tell us which bit to extract from the position status value
# read back from the PreVac system as determined with the special cameras.
#
# It is likely the bit number is the same for each of the ports except for the Arm/RDC/UFO port 0,
# where it needs the Holder On Arm bit, which on HiTES1 is a different bit number to the other ports.
#
# Shift the status record by bitno places to get it into position and bitmask it off with a 1.
# Writes the result to the fixed ID port record in the Status template.
#
record(calcout, "$(device)$(posportprefix)$(posportID):SAMPLEHOLDER:CALC") {
  field(DESC, "Posport$(posportID) sample calculation")
  field(SCAN, "Passive")
  field(INPA, "$(sampleholder_bitno)")
  field(INPB, "$(device)$(posportprefix)$(posportID):POSSTA")
  field(CALC, "(B>>A)&1")
  field(OUT, "$(device)$(posportprefix)$(posportID):SAMPLEHOLDER:IN_CHAMBER PP")
}
