#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBD("../../dbd/dlsPLC_vdct.dbd")
#! DBDEND


# NX102_fastValve.vdb is expanded to NX102_fastValve.template by flatdb.
# 
# % macro, __doc__, Template database for a fast vacuum valve.
# 
# % macro, device, Mandatory.  Device name of the fast valve used as PV name prefix.
# % macro, port,   Mandatory.  EtherIP communication port name.
# % macro, tag,    Mandatory.  NX PLC protocol tag string.
# % macro, tagidx, Mandatory.  NX PLC tag index number.
# % macro, ILKNUM, Mandatory.  Part of definition of gauge interlocks, Gauge NX PLC tag (Gauge.PIRG[dollar(ILKNUM)])
# 
# % macro, allowpv,    Optional.  Defaults to "".  If specified, then only write an open command when this is non-zero. MUST have CP at the end of it.
# % macro, whylocked,  Optional.  Defaults to "Open command not allowed".  String for GUI screen as to precisely why the device is locked and by whom.
#
# % macro, con_label0, Optional.  Defaults to Open.   Label string for control value 0.
# % macro, con_label1, Optional.  Defaults to Close.  Label string for control value 1.
# % macro, con_label2, Optional.  Defaults to Reset.  Label string for control value 2.
# % macro, con_label3, Optional.  Defaults to Arm.    Label string for control value 3.
# % macro, con_label4, Optional.  Defaults to "".     Label string for control value 4.
# % macro, con_label5, Optional.  Defaults to "".     Label string for control value 5.
# % macro, con_label6, Optional.  Defaults to "".     Label string for control value 6.
# % macro, con_label7, Optional.  Defaults to "".     Label string for control value 7.
#
# % macro, sta_label0, Optional.  Defaults to Fault.		 Label string for status value 0.
# % macro, sta_label1, Optional.  Defaults to Open Fully Armed.	 Label string for status value 1.
# % macro, sta_label2, Optional.  Defaults to Opening.		 Label string for status value 2.
# % macro, sta_label3, Optional.  Defaults to Closed.		 Label string for status value 3.
# % macro, sta_label4, Optional.  Defaults to Closing.		 Label string for status value 4.
# % macro, sta_label5, Optional.  Defaults to Open Disarmed.	 Label string for status value 5.
# % macro, sta_label6, Optional.  Defaults to Open Partially Armed.  Label string for status value 6.
# % macro, sta_label7, Optional.  Defaults to "".  	     	 Label string for status value 7.
#
# % macro, sta_sv0,    Optional.  Defaults to MAJOR.         	 Alarm severity for status value 0.
# % macro, sta_sv1,    Optional.  Defaults to NO_ALARM.      	 Alarm severity for status value 1.
# % macro, sta_sv2,    Optional.  Defaults to NO_ALARM.      	 Alarm severity for status value 2.
# % macro, sta_sv3,    Optional.  Defaults to NO_ALARM.      	 Alarm severity for status value 3.
# % macro, sta_sv4,    Optional.  Defaults to NO_ALARM.      	 Alarm severity for status value 4.
# % macro, sta_sv5,    Optional.  Defaults to NO_ALARM.      	 Alarm severity for status value 5.
# % macro, sta_sv6,    Optional.  Defaults to NO_ALARM.      	 Alarm severity for status value 6.
# % macro, sta_sv7,    Optional.  Defaults to NO_ALARM.      	 Alarm severity for status value 7.
#
# % macro, ilksta_label0, Optional.  Defaults to Failed.       Label string for status value 0.
# % macro, ilksta_label1, Optional.  Defaults to Run Ilks Ok.  Label string for status value 1.
# % macro, ilksta_label2, Optional.  Defaults to OK. 	       Label string for status value 2.
# % macro, ilksta_label3, Optional.  Defaults to Disarmed.     Label string for status value 3.
# % macro, ilksta_label4, Optional.  Defaults to "".	       Label string for status value 4.
# % macro, ilksta_label5, Optional.  Defaults to "".	       Label string for status value 5.
# % macro, ilksta_label6, Optional.  Defaults to "".	       Label string for status value 6.
# % macro, ilksta_label7, Optional.  Defaults to "".           Label string for status value 7.
#
# % macro, ilksta_sv0,    Optional.  Defaults to MAJOR.        Alarm severity for interlock status value 0.
# % macro, ilksta_sv1,    Optional.  Defaults to NO_ALARM.     Alarm severity for interlock status value 1.
# % macro, ilksta_sv2,    Optional.  Defaults to NO_ALARM.     Alarm severity for interlock status value 2.
# % macro, ilksta_sv3,    Optional.  Defaults to NO_ALARM.     Alarm severity for interlock status value 3.
# % macro, ilksta_sv4,    Optional.  Defaults to NO_ALARM.     Alarm severity for interlock status value 4.
# % macro, ilksta_sv5,    Optional.  Defaults to NO_ALARM.     Alarm severity for interlock status value 5.
# % macro, ilksta_sv6,    Optional.  Defaults to NO_ALARM.     Alarm severity for interlock status value 6.
# % macro, ilksta_sv7,    Optional.  Defaults to NO_ALARM.     Alarm severity for interlock status value 7.
#
# % macro, mode1,      Optional.  Defaults to Operational.  Name of first mode of operation, remote commands allowed.  (Name is mode1 but value is 0.  i.e. :MODE.ZNAM)
# % macro, mode2,      Optional.  Defaults to Service.      Name of second mode of operation, local control only.  (Name is mode2 but value is 1.  i.e. :MODE.ONAM)
# % macro, DIRILK1,    Optional.  Defaults to "".           Component interlock PV names (dollar(device):dollar(DIRILK1)ILK), named for "direction" of operation controlled by ILK1.
# % macro, showilk,    Optional.  Defaults to 0.            Which set of interlocks to display - 0: Gauge 1: Arm
# 
# % macro, name,       Optional.  Defaults to "".           Object name and associated gui name.
#
# This associates an EDM screen with the template.
# % gui, $(name=), edm, NX102_vacuumValve.edl, device=$(device), DIRILK1=$(DIRILK1=)
#
# This tells the gui that we don't have debounce records
record(ai, "$(device):HASDEBOUNCE") {
  field(VAL, "0")
  field(PINI, "YES")
}

# The label macros are the string fields on mbbi or mbbo records.
# These fields under EPICS R3.14.12.7 are limited to 25 characters.
#
# There are several further macros defined in the template which
# do not have an entry in the expand command and they are passed
# through untouched, notably device and allowpv.
#
# Front End fast valves can be Fully Armed or Partially Armed, so
# they are in a different template.  
# Beamline fast valves cannot be partially armed, so the control
# command is simply "Arm" and they ignore status 6, which is Open Partially Armed)
#
expand("NX102_valveCtrl.vdb", valveCtrl) {
  macro(PORT, "$(port)")
  macro(TAG, "$(tag)")
  macro(TAGIDX, "$(tagidx)")
  macro(con_label0, "$(con_label0=Open)")
  macro(con_label1, "$(con_label1=Close)")
  macro(con_label2, "$(con_label2=Reset)")
  macro(con_label3, "$(con_label3=Arm)")
  macro(con_label4, "$(con_label4=Partially Arm)")
  macro(con_label5, "$(con_label5=)")
  macro(con_label6, "$(con_label6=)")
  macro(con_label7, "$(con_label7=)")
  macro(sta_label0, "$(sta_label0=Fault)")
  macro(sta_label1, "$(sta_label1=Open Armed)")
  macro(sta_label2, "$(sta_label2=Opening)")
  macro(sta_label3, "$(sta_label3=Closed)")
  macro(sta_label4, "$(sta_label4=Closing)")
  macro(sta_label5, "$(sta_label5=Open Disarmed)")
  macro(sta_label6, "$(sta_label6=Partially Armed)")
  macro(sta_label7, "$(sta_label7=)")
  macro(sta_sv0, "$(sta_sv0=MAJOR)")
  macro(sta_sv1, "$(sta_sv1=NO_ALARM)")
  macro(sta_sv2, "$(sta_sv2=NO_ALARM)")
  macro(sta_sv3, "$(sta_sv3=NO_ALARM)")
  macro(sta_sv4, "$(sta_sv4=NO_ALARM)")
  macro(sta_sv5, "$(sta_sv5=NO_ALARM)")
  macro(sta_sv6, "$(sta_sv6=NO_ALARM)")
  macro(sta_sv7, "$(sta_sv7=NO_ALARM)")
  macro(ilksta_label0, "$(ilksta_label0=Failed)")
  macro(ilksta_label1, "$(ilksta_label1=Run Ilks Ok)")
  macro(ilksta_label2, "$(ilksta_label2=OK)")
  macro(ilksta_label3, "$(ilksta_label3=Disarmed)")
  macro(ilksta_label4, "$(ilksta_label4=)")
  macro(ilksta_label5, "$(ilksta_label5=)")
  macro(ilksta_label6, "$(ilksta_label6=)")
  macro(ilksta_label7, "$(ilksta_label7=)")
  macro(ilksta_sv0, "$(ilksta_sv0=MAJOR)")
  macro(ilksta_sv1, "$(ilksta_sv1=NO_ALARM)")
  macro(ilksta_sv2, "$(ilksta_sv2=NO_ALARM)")
  macro(ilksta_sv3, "$(ilksta_sv3=NO_ALARM)")
  macro(ilksta_sv4, "$(ilksta_sv4=NO_ALARM)")
  macro(ilksta_sv5, "$(ilksta_sv5=NO_ALARM)")
  macro(ilksta_sv6, "$(ilksta_sv6=NO_ALARM)")
  macro(ilksta_sv7, "$(ilksta_sv7=NO_ALARM)")
  macro(donecalc, "0")
  macro(whylocked, "$(whylocked=Open command not allowed)")
}

# The template also has a device macro, which does not appear in the expand
# definitions so flatdb passes it through unchanged.
#
# The non- Front End fast valves are historically displayed using the
# valve screen.  In order to do that it has to provide the same macros
# to the screen.  The DIRILK1 macro name has already been defined and
# deployed for valves, so are stuck with it.  Could change the name of
# the macro for the database and then map it everywhere required for
# screens, but that adds unnecessary complexity, it is clearer to use
# the same name in the database and on the screen.
#
expand("NX102_valveIlk.vdb", valveIlk) {
  macro(PORT, "$(port)")
  macro(TAG, "$(tag)")
  macro(TAGIDX, "$(tagidx)")
  macro(TAGPREFIX, "ILK1_")
  macro(typeprefix, ":")
  macro(DIR, "$(DIRILK1=)")
}

# The file has macros which do not appear in the expand definition so
# flatdb passes them through unchanged: device, port, ILKNUM.
#
expand("NX102_valveGilk.vdb", valveGilk) {
}

# Operational/Service Mode
#% archiver 10 Monitor
#% controldesk Mode smon
#
record(bi, "$(device):MODE") {
  field(DESC, "Mode")
  field(INP, "$(device):MODSTA.B0 CP MS")
  field(ZNAM, "$(mode1=Operational)")
  field(ONAM, "$(mode2=Service)")
}

# Which interlocks to show on gui.  This record was added early in the
# long heritage of the dlsPLC version of the file and was still
# current when creating the NX102 version.  It referred to "Gauge" for
# backward compatibility at that time.
#
# The only place the PV is used in the dlsPLC module is the FrontEnd
# fast valve interlocks screen where it actually switches between
# partially arm and fully arm interlocks, which distinction is not
# present on non-FE fast valves.
#
# Not definitely required, but it is left here for backwards
# compatibility in case it is present in operator screens or
# something.
#
record(bi, "$(device):SHOWILK") {
  field(DESC, "Which interlocks to display")
  field(DTYP, "Soft Channel")
  field(PINI, "YES")
  field(INP, "$(showilk=0)")
  field(ZNAM, "Gauge")
  field(ONAM, "Arm")
}

#! Further lines contain data used by VisualDCT
#! View(625,52,1.0)
#! Record("$(device):HASDEBOUNCE",500,436,0,0,"$(device):HASDEBOUNCE")

#! TemplateInstance("valveCtrl",820,220,0,"")
#! TemplateField("valveCtrl","sta_label0",16777215,0,1)
#! TemplateField("valveCtrl","donecalc",16777215,0,1)
#! TemplateField("valveCtrl","con_label6",16777215,0,1)
#! TemplateField("valveCtrl","con_label5",16777215,0,1)
#! TemplateField("valveCtrl","con_label4",16777215,0,1)
#! TemplateField("valveCtrl","sta_label6",16777215,0,1)
#! TemplateField("valveCtrl","con_label3",16777215,0,1)
#! TemplateField("valveCtrl","whylocked",16777215,0,1)
#! TemplateField("valveCtrl","con_label2",16777215,0,1)
#! TemplateField("valveCtrl","sta_label5",16777215,0,1)
#! TemplateField("valveCtrl","sta_label4",16777215,0,1)
#! TemplateField("valveCtrl","con_label1",16777215,0,1)
#! TemplateField("valveCtrl","sta_label3",16777215,0,1)
#! TemplateField("valveCtrl","con_label0",16777215,0,1)
#! TemplateField("valveCtrl","sta_label2",16777215,0,1)
#! TemplateField("valveCtrl","sta_label1",16777215,0,1)


#! TemplateInstance("valveIlk",1140,80,0,"")
#! TemplateField("valveIlk","DIR",16777215,0,1)
#! TemplateField("valveIlk","TAGPREFIX",16777215,0,1)
#! TemplateField("valveIlk","TAGIDX",16777215,0,1)
#! TemplateField("valveIlk","device",16777215,0,1)
#! TemplateField("valveIlk","PORT",16777215,0,1)
#! TemplateField("valveIlk","TAG",16777215,0,1)
#! TemplateField("valveIlk","typeprefix",16777215,0,1)


#! TemplateInstance("valveGilk",1460,400,0,"")

#! Record("$(device):MODE",1460,628,0,0,"$(device):MODE")
#! Field("$(device):MODE.INP",16777215,1,"$(device):MODE.INP")
#! Record("$(device):SHOWILK",1740,620,0,0,"$(device):SHOWILK")
#! Field("$(device):SHOWILK.INP",16777215,1,"$(device):SHOWILK.INP")
