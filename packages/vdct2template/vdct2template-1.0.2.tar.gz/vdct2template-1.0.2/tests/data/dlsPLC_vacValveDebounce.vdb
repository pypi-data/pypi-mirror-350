+#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBD("../../dbd/dlsPLC_vdct.dbd")
#! DBDEND


# vacuumValve.template
#% macro, __doc__, Template database for a vacuum valve without debounce or raw air records
#% macro, device, device name
#% macro, vlvcc, device name of valve control crate
# % macro, port, asyn port name of FINS driver
#% macro, addr, First address in the DM variable range decade. E.g. if pump is in DM110..118 then addr=110
#% macro, allowpv, If specified, then only write an open command when this is non-zero. MUST have CP at the end of it
#% macro, whylocked, String to output to EDM synoptic as to precisely why the device is locked and by whom
#% macro, timeout, Timeout in seconds for the FINS protocol
#% macro, valvetype, Determines which icon is shown in css GUI
#% macro, ilk0, Interlock description 0
#% macro, ilk1, Interlock description 1
#% macro, ilk2, Interlock description 2
#% macro, ilk3, Interlock description 3
#% macro, ilk4, Interlock description 4
#% macro, ilk5, Interlock description 5
#% macro, ilk6, Interlock description 6
#% macro, ilk7, Interlock description 7
#% macro, ilk8, Interlock description 8
#% macro, ilk9, Interlock description 9
#% macro, ilk10, Interlock description 10
#% macro, ilk11, Interlock description 11
#% macro, ilk12, Interlock description 12
#% macro, ilk13, Interlock description 13
#% macro, ilk14, Interlock description 14
#% macro, ilk15, Interlock description 15
#% macro, gilk0, Gauge interlock description 0
#% macro, gilk1, Gauge interlock description 1
#% macro, gilk2, Gauge interlock description 2
#% macro, gilk3, Gauge interlock description 3
#% macro, gilk4, Gauge interlock description 4
#% macro, gilk5, Gauge interlock description 5
#% macro, gilk6, Gauge interlock description 6
#% macro, gilk7, Gauge interlock description 7
#% macro, gilk8, Gauge interlock description 8
#% macro, gilk9, Gauge interlock description 9
#% macro, gilk10, Gauge interlock description 10
#% macro, gilk11, Gauge interlock description 11
#% macro, gilk12, Gauge interlock description 12
#% macro, gilk13, Gauge interlock description 13
#% macro, gilk14, Gauge interlock description 14
#% macro, gilk15, Gauge interlock description 15
#% macro, con_label0, Label string for control value 0 (Optional - defaults to Open)
#% macro, con_label1, Label string for control value 1 (Optional - defaults to Close)
#% macro, con_label2, Label string for control value 2 (Optional - defaults to Reset)
#% macro, con_label3, Label string for control value 3 (Optional - defaults to "")
#% macro, con_label4, Label string for control value 4 (Optional - defaults to "")
#% macro, con_label5, Label string for control value 5 (Optional - defaults to "")
#% macro, con_label6, Label string for control value 6 (Optional - defaults to "")
#% macro, sta_label0, Label string for status value 0 (Optional - defaults to Fault)
#% macro, sta_label1, Label string for status value 1 (Optional - defaults to Open)
#% macro, sta_label2, Label string for status value 2 (Optional - defaults to Opening)
#% macro, sta_label3, Label string for status value 3 (Optional - defaults to Closed)
#% macro, sta_label4, Label string for status value 4 (Optional - defaults to Closing)
#% macro, sta_label5, Label string for status value 5 (Optional - defaults to "")
#% macro, sta_label6, Label string for status value 6 (Optional - defaults to "")
#% macro, sta_sv0, Optional. Defaults to MAJOR.     Alarm severity for status value 0.
#% macro, sta_sv1, Optional. Defaults to NO_ALARM.  Alarm severity for status value 1.
#% macro, sta_sv2, Optional. Defaults to NO_ALARM.  Alarm severity for status value 2.
#% macro, sta_sv3, Optional. Defaults to NO_ALARM.  Alarm severity for status value 3.
#% macro, sta_sv4, Optional. Defaults to NO_ALARM.  Alarm severity for status value 4.
#% macro, sta_sv5, Optional. Defaults to NO_ALARM.  Alarm severity for status value 5.
#% macro, sta_sv6, Optional. Defaults to NO_ALARM.  Alarm severity for status value 6.
#% macro, name, Object name and associated gui name
#% macro, gda_name, GDA name to export to gda as if it exists
#% macro, gda_desc, GDA description
#% macro, desc, Box label for gui
#% macro, mode1, name of remote operational mode (:MODE)
#% macro, mode2, name of local operational mode (:MODE)

#% macro, EMPTY, Empty substitution to satisfy VDCT

# This associates an edm screen with the template
# % gui, $(name=), edm, vacuumValve.edl, device=$(device)
# % gui, $(name=), edmembed, vacuumValve-embed.edl, device=$(device),box-label=$(desc=$(device))

# This associates BOY screens with the template
# % gui, $(name=), boydetail, dlsPLCApp_opi/vacValve_detail.opi, device=$(device), DESC=$(device), ilk0=$(ilk0=unused),ilk1=$(ilk1=unused),ilk2=$(ilk2=unused),ilk3=$(ilk3=unused),ilk4=$(ilk4=unused),ilk5=$(ilk5=unused),ilk6=$(ilk6=unused),ilk7=$(ilk7=unused),ilk8=$(ilk8=unused),ilk9=$(ilk9=unused),ilk10=$(ilk10=unused),ilk11=$(ilk11=unused),ilk12=$(ilk12=unused),ilk13=$(ilk13=unused),ilk14=$(ilk14=unused),ilk15=$(ilk15=unused),gilk0=$(gilk0=unused),gilk1=$(gilk1=unused),gilk2=$(gilk2=unused),gilk3=$(gilk3=unused),gilk4=$(gilk4=unused),gilk5=$(gilk5=unused),gilk6=$(gilk6=unused),gilk7=$(gilk7=unused),gilk8=$(gilk8=unused),gilk9=$(gilk9=unused),gilk10=$(gilk10=unused),gilk11=$(gilk11=unused),gilk12=$(gilk12=unused),gilk13=$(gilk13=unused),gilk14=$(gilk14=unused),gilk15=$(gilk15=unused), name=$(name=), valvetype=$(valvetype=valve), valvetype=$(valvetype=valve)
# % gui, $(name=), boyembed, dlsPLCApp_opi/vacValve_embed_box.opi, device=$(device), DESC=$(device), name=$(name=), valvetype=$(valvetype=valve)
# % gui, $(name=), boyembed, dlsPLCApp_opi/vacValve_embed.opi, device=$(device), DESC=$(device), name=$(name=), valvetype=$(valvetype=valve)

# These define what PVs a valve detail screen should contain
# % gui, $(name=), enum, Control,   $(device):CON
# % gui, $(name=), readback, Status,  $(device):STA
# % gui, $(name=), readback, Mode,  $(device):MODE
# % gui, $(name=), readback, Interlock Stat,  $(device):ILKSTA
# % gui, $(name=), readback, Operations,  $(device):OPS
# % gui, $(name=), readback, De-bounce,  $(device):ADB
# % gui, $(name=), demand, De-bounce,  $(device):SETADB
# % gui, $(name=), statusbits, Interlocks Latched,  $(device):ILK, $(ilk0=unused),$(ilk1=unused),$(ilk2=unused),$(ilk3=unused),$(ilk4=unused),$(ilk5=unused),$(ilk6=unused),$(ilk7=unused),$(ilk8=unused),$(ilk9=unused),$(ilk10=unused),$(ilk11=unused),$(ilk12=unused),$(ilk13=unused),$(ilk14=unused),$(ilk15=unused)
# % gui, $(name=), statusbits, Interlocks Initial,  $(device):INIILK, $(ilk0=unused),$(ilk1=unused),$(ilk2=unused),$(ilk3=unused),$(ilk4=unused),$(ilk5=unused),$(ilk6=unused),$(ilk7=unused),$(ilk8=unused),$(ilk9=unused),$(ilk10=unused),$(ilk11=unused),$(ilk12=unused),$(ilk13=unused),$(ilk14=unused),$(ilk15=unused)
# % gui, $(name=), statusbits, Interlocks Current,  $(device):RAWILK, $(ilk0=unused),$(ilk1=unused),$(ilk2=unused),$(ilk3=unused),$(ilk4=unused),$(ilk5=unused),$(ilk6=unused),$(ilk7=unused),$(ilk8=unused),$(ilk9=unused),$(ilk10=unused),$(ilk11=unused),$(ilk12=unused),$(ilk13=unused),$(ilk14=unused),$(ilk15=unused)

# % gui, $(name=), statusbits, Interlocks IMG,  $(device):IMGILK, $(gilk0=unused),$(gilk1=unused),$(gilk2=unused),$(gilk3=unused),$(gilk4=unused),$(gilk5=unused),$(gilk6=unused),$(gilk7=unused),$(gilk8=unused),$(gilk9=unused),$(gilk10=unused),$(gilk11=unused),$(gilk12=unused),$(gilk13=unused),$(gilk14=unused),$(gilk15=unused)
# % gui, $(name=), statusbits, Interlocks PIRG,  $(device):PIRGILK, $(gilk0=unused),$(gilk1=unused),$(gilk2=unused),$(gilk3=unused),$(gilk4=unused),$(gilk5=unused),$(gilk6=unused),$(gilk7=unused),$(gilk8=unused),$(gilk9=unused),$(gilk10=unused),$(gilk11=unused),$(gilk12=unused),$(gilk13=unused),$(gilk14=unused),$(gilk15=unused)


record(ai, "$(device):HASDEBOUNCE") {
  field(VAL, "1")
  field(PINI, "YES")
}

expand("dlsPLC_valveCtrl.vdb", valveCtrl) {
  macro(con_label0, "$(con_label0=Open)")
  macro(con_label1, "$(con_label1=Close)")
  macro(con_label2, "$(con_label2=Reset)")
  macro(con_label3, "$(con_label3=)")
  macro(con_label4, "$(con_label4=)")
  macro(con_label5, "$(con_label5=)")
  macro(con_label6, "$(con_label6=)")
  macro(sta_label0, "$(sta_label0=Fault)")
  macro(sta_label1, "$(sta_label1=Open)")
  macro(sta_label2, "$(sta_label2=Opening)")
  macro(sta_label3, "$(sta_label3=Closed)")
  macro(sta_label4, "$(sta_label4=Closing)")
  macro(sta_label5, "$(sta_label5=)")
  macro(sta_label6, "$(sta_label6=)")
  macro(sta_sv0, "$(sta_sv0=MAJOR)")
  macro(sta_sv1, "$(sta_sv1=NO_ALARM)")
  macro(sta_sv2, "$(sta_sv2=NO_ALARM)")
  macro(sta_sv3, "$(sta_sv3=NO_ALARM)")
  macro(sta_sv4, "$(sta_sv4=NO_ALARM)")
  macro(sta_sv5, "$(sta_sv5=NO_ALARM)")
  macro(sta_sv6, "$(sta_sv6=NO_ALARM)")
  macro(donecalc, "((A=D)&(((A*2+1)=B)|A=2|C=0))?0:1")
}

expand("dlsPLC_valveIlk.vdb", valveIlk) {
  macro(DIR, "$(EMPTY=)")
  macro(ILK, "6")
  macro(INIILK, "7")
  macro(RAWILK, "8")
  macro(typeprefix, ":")
  macro(ilk0, "$(ilk0=unused)")
  macro(ilk1, "$(ilk1=unused)")
  macro(ilk2, "$(ilk2=unused)")
  macro(ilk3, "$(ilk3=unused)")
  macro(ilk4, "$(ilk4=unused)")
  macro(ilk5, "$(ilk5=unused)")
  macro(ilk6, "$(ilk6=unused)")
  macro(ilk7, "$(ilk7=unused)")
  macro(ilk8, "$(ilk8=unused)")
  macro(ilk9, "$(ilk9=unused)")
  macro(ilk10, "$(ilk10=unused)")
  macro(ilk11, "$(ilk11=unused)")
  macro(ilk12, "$(ilk12=unused)")
  macro(ilk13, "$(ilk13=unused)")
  macro(ilk14, "$(ilk14=unused)")
  macro(ilk15, "$(ilk15=unused)")
}

expand("dlsPLC_valveGilk.vdb", valveGilk) {
}

# Operational/Service Mode
#% archiver 10 Monitor
#% controldesk Mode smon
#
record(bi, "$(device):MODE") {
  field(DESC, "Mode")
  field(INP, "$(device):MODSTA.B0 CP MS")
  field(ZNAM, "$(mode1=Operational)")
  field(ONAM, "$(mode2=Service)")
}

# ######################################################################
# Close time trip
#
#% controldesk Close Timeout setpoint
#
# NB: This section may be better rejoining the TCLOSE records, which were
#     below, but now extracted to their own template (dlsPLC_vacValveTclose.vdb)
#     which was done to better support ABSB-01 for front-ends close time metrics.
# IJG 24 July 2018
#
record(longin, "$(device):INPMINTCLS") {
  field(INP, "$(device):GETINPMINTCLS PP MS")
#  field(INP, "@asyn($(port), $(addr)7, $(timeout=0)) FINS_DM_READ")
}

# INDX calculation DM$(addr)+n. Calc the index into the century record
record(calcout, "$(device):INPMINTCLSINDX") {
  field(CALC, "$(addr)+7")
  field(OUT, "$(device):GETINPMINTCLS.INDX PP")
  field(PINI, "YES")
}

record(subArray, "$(device):GETINPMINTCLS") {
  field(DTYP, "Soft Channel")
  field(FTVL, "USHORT")
  field(INP, "$(vlvcc):DM0XX CP MS")
  field(MALM, "100")
}

#
#% archiver 10 Monitor
#% controldesk Minimum Close Time readback
#
record(calc, "$(device):MINTCLS") {
  field(DESC, "Min Close Time")
  field(CALC, "A/10.0")
  field(INPA, "$(device):INPMINTCLS PP MS")
  field(EGU, "s")
  field(PREC, "1")
  field(SCAN, "1 second")
  field(HOPR, "10")
  field(LOPR, "2")
  field(HIHI, "10")
  field(HHSV, "MAJOR")
}


record(longin, "$(device):INPMAXTCLS") {
  field(INP, "$(device):GETINPMAXTCLS PP MS")
#  field(INP, "@asyn($(port), $(addr)5, $(timeout=0)) FINS_DM_READ")
}

# INDX calculation DM$(addr)+n. Calc the index into the century record
record(calcout, "$(device):INPMAXTCLSINDX") {
  field(CALC, "$(addr)+5")
  field(OUT, "$(device):GETINPMAXTCLS.INDX PP")
  field(PINI, "YES")
}

record(subArray, "$(device):GETINPMAXTCLS") {
  field(DTYP, "Soft Channel")
  field(FTVL, "USHORT")
  field(INP, "$(vlvcc):DM0XX CP MS")
  field(MALM, "100")
}

#
#% archiver 10 Monitor
#% controldesk Maximum Close Time readback
#
record(calc, "$(device):MAXTCLS") {
  field(DESC, "Max Close Time")
  field(CALC, "A/10.0")
  field(INPA, "$(device):INPMAXTCLS PP MS")
  field(EGU, "s")
  field(PREC, "1")
  field(SCAN, "1 second")
  field(HOPR, "10")
  field(LOPR, "2")
  field(HIHI, "10")
  field(HHSV, "MINOR")
}



################################################################################
# Air Pressure De-bounce Time
#
#% controldesk Air Pressure De-bounce Time setpoint
#
record(ao, "$(device):SETADB") {
  field(DTYP, "Raw Soft Channel")
  field(DESC, "De-bounce Time")
  field(EGU, "s")
  field(PREC, "1")
  field(DOL, "10.0")
  field(ASLO, "0.1")
  field(PINI, "YES")
  field(OUT, "$(device):OUTTIMEOUT PP")
}

#
#% archiver 10 Monitor
#% controldesk Air Pressure De-bounce Time readback
#
record(calc, "$(device):ADB") {
  field(DESC, "De-bounce Time")
  field(CALC, "A/10.0")
  field(INPA, "$(device):INPTIMEOUT PP MS")
  field(SCAN, "1 second")
  field(EGU, "s")
  field(PREC, "1")
}

record(ao, "$(device):OUTTIMEOUT") {
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(port), $(addr)3, $(timeout=0)) FINS_DM_WRITE")
}

# INDX calculation DM$(addr)+n. Calc the index into the century record
#record(calcout, "$(device):INPTIMEOUTINDX") 
#  {
#  field(CALC, "0")
#  field(OUT, "$(device):INPTIMEOUT.INDX PP")
#  field(PINI, "YES")
#  }

# DX00
record(subArray, "$(device):INPTIMEOUT") 
  {
  field(DTYP, "Soft Channel")
  field(FTVL, "USHORT")
  field(INP, "$(vlvcc):DM$(addr)0")
  field(INDX, "0")
  field(MALM, "100")
  }

# addr is the valve (device) number x10
# the ADB and timeouts are in centuries corresponding to
# device number (1XX, 2XX, etc.)
# 
# Calculate the 
# century record. Needs to be done after PINI, so note
# the flnk
record(scalcout, "$(device):SCALCCENTURY") 
  {
  field(CALC, "PRINTF(AA,FLOOR($(addr)/10))")
  field(AA, "$(vlvcc):DM%dXX CP MS")
  field(OUT, "$(device):INPTIMEOUT.INP CA")
  field(SCAN, "1 second")
  }
  
# Disable the scalcout record so we don't keep writing values
record(ao, "$(device):CENTURYDIS")
  {
  field(VAL, "1")
  field(OUT, "$(device):SCALCCENTURY.DISA")
 }

################################################################################
# NOTE: only valid for valves 0..9
#% archiver 10 Monitor
#% controldesk Raw Air Pressure Status smon
#
record(mbbiDirect, "$(device):RAWAIRALL") {
  field(DESC, "Raw air pressure all valves")
  field(INP, "$(device):GETRAWAIR MS")
}

record(subArray, "$(device):GETRAWAIR") {
  field(DESC, "Get gauge interlocks")
  field(DTYP, "Soft Channel")
  field(FLNK, "$(device):RAWAIRALL")
  field(FTVL, "USHORT")
  field(INP, "$(vlvcc):DM0XX CP MS")
  field(INDX, "3")
  field(MALM, "100")
}

record(bi, "$(device):RAWAIRSTA") {
  field(DESC, "Raw Air Pressure Status")
  field(ZNAM, "Low")
  field(ONAM, "Good")
  field(ZSV, "MAJOR")
  field(OSV, "NO_ALARM")
}

# Turn valve 15 (addr=150) into the letter F to get raw air status
record(scalcout, "$(device):RAWAIRSTAINP") {
  field(CALC, "PRINTF(AA,MIN(FLOOR($(addr)/10),15))")
  field(AA, "$(device):RAWAIRALL.B%1X CP MS")
  field(OUT, "$(device):RAWAIRSTA.INP CA")
  field(FLNK, "$(device):RAWAIRSTAINPDIS")
  field(SCAN, "1 second")
}

# Disable the scalcout record so we don't keep writing values
record(ao, "$(device):RAWAIRSTAINPDIS") {
  field(VAL, "1")
  field(OUT, "$(device):RAWAIRSTAINP.DISA")
}

################################################################################
# % archiver 10 Monitor
# % controldesk Initial/Run Vacuum Status smon
#
record(mbbiDirect, "$(device):IRVAC") {
  field(DESC, "Initial/Run Vacuum")
  field(INP, "$(device):GETIRVAC MS")
}

record(subArray, "$(device):GETIRVAC") {
  field(DESC, "Initial/Run Vacuum")
  field(DTYP, "Soft Channel")
  field(FLNK, "$(device):IRVAC")
  field(FTVL, "USHORT")
  field(INDX, "7")
  field(INP, "$(vlvcc):DM0XX CP MS")
  field(MALM, "100")
}

#! Further lines contain data used by VisualDCT
#! View(-106,-56,0.8)
#! Record("$(device):HASDEBOUNCE",60,35,0,0,"$(device):HASDEBOUNCE")

#! TemplateInstance("valveCtrl",260,20,0,"")
#! TemplateField("valveCtrl","sta_label0",16777215,0,1)
#! TemplateField("valveCtrl","donecalc",16777215,0,1)
#! TemplateField("valveCtrl","con_label6",16777215,0,1)
#! TemplateField("valveCtrl","con_label5",16777215,0,1)
#! TemplateField("valveCtrl","con_label4",16777215,0,1)
#! TemplateField("valveCtrl","sta_label6",16777215,0,1)
#! TemplateField("valveCtrl","con_label3",16777215,0,1)
#! TemplateField("valveCtrl","con_label2",16777215,0,1)
#! TemplateField("valveCtrl","sta_label5",16777215,0,1)
#! TemplateField("valveCtrl","sta_label4",16777215,0,1)
#! TemplateField("valveCtrl","con_label1",16777215,0,1)
#! TemplateField("valveCtrl","sta_label3",16777215,0,1)
#! TemplateField("valveCtrl","con_label0",16777215,0,1)
#! TemplateField("valveCtrl","sta_label2",16777215,0,1)
#! TemplateField("valveCtrl","sta_label1",16777215,0,1)


#! TemplateInstance("valveIlk",500,20,0,"")
#! TemplateField("valveIlk","INIILK",16777215,0,1)
#! TemplateField("valveIlk","ilk9",16777215,0,1)
#! TemplateField("valveIlk","ilk15",16777215,0,1)
#! TemplateField("valveIlk","ilk8",16777215,0,1)
#! TemplateField("valveIlk","ilk14",16777215,0,1)
#! TemplateField("valveIlk","ilk7",16777215,0,1)
#! TemplateField("valveIlk","RAWILK",16777215,0,1)
#! TemplateField("valveIlk","ilk13",16777215,0,1)
#! TemplateField("valveIlk","ilk6",16777215,0,1)
#! TemplateField("valveIlk","ILK",16777215,0,1)
#! TemplateField("valveIlk","ilk12",16777215,0,1)
#! TemplateField("valveIlk","ilk5",16777215,0,1)
#! TemplateField("valveIlk","ilk11",16777215,0,1)
#! TemplateField("valveIlk","ilk4",16777215,0,1)
#! TemplateField("valveIlk","DIR",16777215,0,1)
#! TemplateField("valveIlk","ilk10",16777215,0,1)
#! TemplateField("valveIlk","ilk3",16777215,0,1)
#! TemplateField("valveIlk","ilk2",16777215,0,1)
#! TemplateField("valveIlk","ilk1",16777215,0,1)
#! TemplateField("valveIlk","ilk0",16777215,0,1)


#! TemplateInstance("valveGilk",740,20,0,"")

#! Record("$(device):MODE",980,27,0,0,"$(device):MODE")
#! Field("$(device):MODE.INP",16777215,1,"$(device):MODE.INP")
#! Record("$(device):INPMINTCLS",1220,15,0,0,"$(device):INPMINTCLS")
#! Field("$(device):INPMINTCLS.VAL",16777215,1,"$(device):INPMINTCLS.VAL")
#! Record("$(device):MINTCLS",1480,23,0,0,"$(device):MINTCLS")
#! Field("$(device):MINTCLS.INPA",16777215,0,"$(device):MINTCLS.INPA")
#! Link("$(device):MINTCLS.INPA","$(device):INPMINTCLS.VAL")
#! Record("$(device):INPMAXTCLS",1700,15,0,0,"$(device):INPMAXTCLS")
#! Field("$(device):INPMAXTCLS.VAL",16777215,1,"$(device):INPMAXTCLS.VAL")
#! Record("$(device):MAXTCLS",1960,23,0,0,"$(device):MAXTCLS")
#! Field("$(device):MAXTCLS.INPA",16777215,0,"$(device):MAXTCLS.INPA")
#! Link("$(device):MAXTCLS.INPA","$(device):INPMAXTCLS.VAL")
#! Record("$(device):INPTCLOSE",760,415,0,0,"$(device):INPTCLOSE")
#! Field("$(device):INPTCLOSE.VAL",16777215,0,"$(device):INPTCLOSE.VAL")
#! Record("$(device):TCLOSE",1000,414,0,0,"$(device):TCLOSE")
#! Field("$(device):TCLOSE.INPA",16777215,0,"$(device):TCLOSE.INPA")
#! Link("$(device):TCLOSE.INPA","$(device):INPTCLOSE.VAL")
#! Record("$(device):SETADB",1240,410,0,0,"$(device):SETADB")
#! Field("$(device):SETADB.OUT",16777215,1,"$(device):SETADB.OUT")
#! Link("$(device):SETADB.OUT","$(device):OUTTIMEOUT.VAL")
#! Record("$(device):ADB",1480,419,0,0,"$(device):ADB")
#! Field("$(device):ADB.INPA",16777215,1,"$(device):ADB.INPA")
#! Link("$(device):ADB.INPA","$(device):INPTIMEOUT.VAL")
#! Record("$(device):OUTTIMEOUT",1720,415,0,0,"$(device):OUTTIMEOUT")
#! Field("$(device):OUTTIMEOUT.VAL",16777215,0,"$(device):OUTTIMEOUT.VAL")
#! Record("$(device):INPTIMEOUT",1960,415,0,0,"$(device):INPTIMEOUT")
#! Field("$(device):INPTIMEOUT.VAL",16777215,0,"$(device):INPTIMEOUT.VAL")
#! Record("$(device):RAWAIRALL",780,755,0,0,"$(device):RAWAIRALL")
#! Field("$(device):RAWAIRALL.INP",16777215,1,"$(device):RAWAIRALL.INP")
#! Link("$(device):RAWAIRALL.INP","$(device):GETRAWAIR.VAL")
#! Record("$(device):GETRAWAIR",1020,765,0,0,"$(device):GETRAWAIR")
#! Field("$(device):GETRAWAIR.VAL",16777215,1,"$(device):GETRAWAIR.VAL")
#! Field("$(device):GETRAWAIR.FLNK",16777215,0,"$(device):GETRAWAIR.FLNK")
#! Link("$(device):GETRAWAIR.FLNK","$(device):RAWAIRALL")
#! Field("$(device):GETRAWAIR.INP",16777215,1,"$(device):GETRAWAIR.INP")
#! Record("$(device):RAWAIRSTA",1260,753,0,0,"$(device):RAWAIRSTA")
#! Record("$(device):RAWAIRSTAINP",1500,753,0,0,"$(device):RAWAIRSTAINP")
#! Field("$(device):RAWAIRSTAINP.OUT",16777215,1,"$(device):RAWAIRSTAINP.OUT")
#! Field("$(device):RAWAIRSTAINP.FLNK",16777215,1,"$(device):RAWAIRSTAINP.FLNK")
#! Link("$(device):RAWAIRSTAINP.FLNK","$(device):RAWAIRSTAINPDIS")
#! Field("$(device):RAWAIRSTAINP.DISA",16777215,0,"$(device):RAWAIRSTAINP.DISA")
#! Record("$(device):RAWAIRSTAINPDIS",1740,755,0,1,"$(device):RAWAIRSTAINPDIS")
#! Field("$(device):RAWAIRSTAINPDIS.OUT",16777215,0,"$(device):RAWAIRSTAINPDIS.OUT")
#! Link("$(device):RAWAIRSTAINPDIS.OUT","$(device):RAWAIRSTAINP.DISA")
#! Record("$(device):IRVAC",20,795,0,1,"$(device):IRVAC")
#! Field("$(device):IRVAC.INP",16777215,1,"$(device):IRVAC.INP")
#! Link("$(device):IRVAC.INP","$(device):GETIRVAC.VAL")
#! Record("$(device):GETIRVAC",300,825,0,0,"$(device):GETIRVAC")
#! Field("$(device):GETIRVAC.VAL",16777215,0,"$(device):GETIRVAC.VAL")
#! Field("$(device):GETIRVAC.FLNK",16777215,0,"$(device):GETIRVAC.FLNK")
#! Link("$(device):GETIRVAC.FLNK","$(device):IRVAC")
#! Field("$(device):GETIRVAC.INP",16777215,1,"$(device):GETIRVAC.INP")
