import socket
from _typeshed import Incomplete
from typing import Callable, NoReturn

class WebsocketServer:
    host: Incomplete
    port: Incomplete
    def __init__(self, host: str, port: int) -> None: ...
    class Client:
        sock: Incomplete
        def __init__(self, sock: socket.socket) -> None: ...
        def frame_message(self, message: str) -> bytes: ...
        def send(self, msg: str) -> None: ...
    def set_fn_new_client(self, fn: Callable) -> None: ...
    def set_fn_client_left(self, fn: Callable) -> None: ...
    def set_fn_message_received(self, fn: Callable) -> None: ...
    def create_accept_key(self, request_key: str) -> str: ...
    def parse_websocket_frame(self, data: bytes) -> str: ...
    def handle_client(self, client_socket: Client) -> None: ...
    server_socket: Incomplete
    def run_forever(self) -> NoReturn: ...
    thread: Incomplete
    def start(self, threaded: bool = False) -> None: ...
