"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import kos.common_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class StartPolicyRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACTION_FIELD_NUMBER: builtins.int
    ACTION_SCALE_FIELD_NUMBER: builtins.int
    EPISODE_LENGTH_FIELD_NUMBER: builtins.int
    DRY_RUN_FIELD_NUMBER: builtins.int
    action: builtins.str
    action_scale: builtins.float
    episode_length: builtins.int
    dry_run: builtins.bool
    def __init__(
        self,
        *,
        action: builtins.str = ...,
        action_scale: builtins.float = ...,
        episode_length: builtins.int = ...,
        dry_run: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["action", b"action", "action_scale", b"action_scale", "dry_run", b"dry_run", "episode_length", b"episode_length"]) -> None: ...

global___StartPolicyRequest = StartPolicyRequest

@typing.final
class StartPolicyResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    POLICY_UUID_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    policy_uuid: builtins.str
    @property
    def error(self) -> kos.common_pb2.Error: ...
    def __init__(
        self,
        *,
        policy_uuid: builtins.str | None = ...,
        error: kos.common_pb2.Error | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_policy_uuid", b"_policy_uuid", "error", b"error", "policy_uuid", b"policy_uuid"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_policy_uuid", b"_policy_uuid", "error", b"error", "policy_uuid", b"policy_uuid"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_policy_uuid", b"_policy_uuid"]) -> typing.Literal["policy_uuid"] | None: ...

global___StartPolicyResponse = StartPolicyResponse

@typing.final
class StopPolicyResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    POLICY_UUID_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    policy_uuid: builtins.str
    @property
    def error(self) -> kos.common_pb2.Error: ...
    def __init__(
        self,
        *,
        policy_uuid: builtins.str | None = ...,
        error: kos.common_pb2.Error | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_policy_uuid", b"_policy_uuid", "error", b"error", "policy_uuid", b"policy_uuid"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_policy_uuid", b"_policy_uuid", "error", b"error", "policy_uuid", b"policy_uuid"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_policy_uuid", b"_policy_uuid"]) -> typing.Literal["policy_uuid"] | None: ...

global___StopPolicyResponse = StopPolicyResponse

@typing.final
class GetStateResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class StateEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    STATE_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    @property
    def state(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    @property
    def error(self) -> kos.common_pb2.Error: ...
    def __init__(
        self,
        *,
        state: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        error: kos.common_pb2.Error | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["error", b"error"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["error", b"error", "state", b"state"]) -> None: ...

global___GetStateResponse = GetStateResponse
