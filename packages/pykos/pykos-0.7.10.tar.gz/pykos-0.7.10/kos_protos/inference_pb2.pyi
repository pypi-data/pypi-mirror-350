"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import kos.common_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class UploadModelRequest(google.protobuf.message.Message):
    """Request message for uploading a model."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MODEL_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    model: builtins.bytes
    """Model binary data"""
    @property
    def metadata(self) -> global___ModelMetadata:
        """Model metadata"""

    def __init__(
        self,
        *,
        model: builtins.bytes = ...,
        metadata: global___ModelMetadata | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_metadata", b"_metadata", "metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_metadata", b"_metadata", "metadata", b"metadata", "model", b"model"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_metadata", b"_metadata"]) -> typing.Literal["metadata"] | None: ...

global___UploadModelRequest = UploadModelRequest

@typing.final
class UploadModelResponse(google.protobuf.message.Message):
    """Response message containing the uploaded model's UID."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MODEL_UID_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    model_uid: builtins.str
    """Unique identifier for the model"""
    @property
    def error(self) -> kos.common_pb2.Error:
        """Error details if upload failed"""

    def __init__(
        self,
        *,
        model_uid: builtins.str = ...,
        error: kos.common_pb2.Error | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["error", b"error"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["error", b"error", "model_uid", b"model_uid"]) -> None: ...

global___UploadModelResponse = UploadModelResponse

@typing.final
class LoadModelsResponse(google.protobuf.message.Message):
    """Response message containing the loaded models."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MODELS_FIELD_NUMBER: builtins.int
    RESULT_FIELD_NUMBER: builtins.int
    @property
    def models(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ModelInfo]:
        """List of loaded models"""

    @property
    def result(self) -> kos.common_pb2.ActionResponse:
        """Result of the action"""

    def __init__(
        self,
        *,
        models: collections.abc.Iterable[global___ModelInfo] | None = ...,
        result: kos.common_pb2.ActionResponse | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["result", b"result"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["models", b"models", "result", b"result"]) -> None: ...

global___LoadModelsResponse = LoadModelsResponse

@typing.final
class GetModelsInfoRequest(google.protobuf.message.Message):
    """Request message for getting all available models"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MODEL_UIDS_FIELD_NUMBER: builtins.int
    ALL_FIELD_NUMBER: builtins.int
    all: builtins.bool
    """If true, return all models"""
    @property
    def model_uids(self) -> global___ModelUids:
        """List of specific model UIDs to fetch"""

    def __init__(
        self,
        *,
        model_uids: global___ModelUids | None = ...,
        all: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["all", b"all", "filter", b"filter", "model_uids", b"model_uids"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["all", b"all", "filter", b"filter", "model_uids", b"model_uids"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["filter", b"filter"]) -> typing.Literal["model_uids", "all"] | None: ...

global___GetModelsInfoRequest = GetModelsInfoRequest

@typing.final
class ModelUids(google.protobuf.message.Message):
    """List of model UIDs"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    UIDS_FIELD_NUMBER: builtins.int
    @property
    def uids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        uids: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["uids", b"uids"]) -> None: ...

global___ModelUids = ModelUids

@typing.final
class GetModelsInfoResponse(google.protobuf.message.Message):
    """Response message containing all available models"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MODELS_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    @property
    def models(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ModelInfo]:
        """List of model information"""

    @property
    def error(self) -> kos.common_pb2.Error:
        """Error details if fetching failed"""

    def __init__(
        self,
        *,
        models: collections.abc.Iterable[global___ModelInfo] | None = ...,
        error: kos.common_pb2.Error | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["error", b"error"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["error", b"error", "models", b"models"]) -> None: ...

global___GetModelsInfoResponse = GetModelsInfoResponse

@typing.final
class ModelMetadata(google.protobuf.message.Message):
    """Model metadata"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MODEL_NAME_FIELD_NUMBER: builtins.int
    MODEL_DESCRIPTION_FIELD_NUMBER: builtins.int
    MODEL_VERSION_FIELD_NUMBER: builtins.int
    MODEL_AUTHOR_FIELD_NUMBER: builtins.int
    model_name: builtins.str
    """Model name"""
    model_description: builtins.str
    """Model description"""
    model_version: builtins.str
    """Model version"""
    model_author: builtins.str
    """Model author"""
    def __init__(
        self,
        *,
        model_name: builtins.str | None = ...,
        model_description: builtins.str | None = ...,
        model_version: builtins.str | None = ...,
        model_author: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_model_author", b"_model_author", "_model_description", b"_model_description", "_model_name", b"_model_name", "_model_version", b"_model_version", "model_author", b"model_author", "model_description", b"model_description", "model_name", b"model_name", "model_version", b"model_version"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_model_author", b"_model_author", "_model_description", b"_model_description", "_model_name", b"_model_name", "_model_version", b"_model_version", "model_author", b"model_author", "model_description", b"model_description", "model_name", b"model_name", "model_version", b"model_version"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_model_author", b"_model_author"]) -> typing.Literal["model_author"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_model_description", b"_model_description"]) -> typing.Literal["model_description"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_model_name", b"_model_name"]) -> typing.Literal["model_name"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_model_version", b"_model_version"]) -> typing.Literal["model_version"] | None: ...

global___ModelMetadata = ModelMetadata

@typing.final
class ModelInfo(google.protobuf.message.Message):
    """Information about a model"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class InputSpecsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___Tensor: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___Tensor | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing.final
    class OutputSpecsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___Tensor: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___Tensor | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    UID_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    INPUT_SPECS_FIELD_NUMBER: builtins.int
    OUTPUT_SPECS_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    uid: builtins.str
    """Model UID (assigned by server)"""
    description: builtins.str
    """Optional description of tensor usage"""
    @property
    def metadata(self) -> global___ModelMetadata:
        """Model metadata"""

    @property
    def input_specs(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___Tensor]:
        """Expected input tensor specifications"""

    @property
    def output_specs(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___Tensor]:
        """Expected output tensor specifications"""

    def __init__(
        self,
        *,
        uid: builtins.str = ...,
        metadata: global___ModelMetadata | None = ...,
        input_specs: collections.abc.Mapping[builtins.str, global___Tensor] | None = ...,
        output_specs: collections.abc.Mapping[builtins.str, global___Tensor] | None = ...,
        description: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["metadata", b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["description", b"description", "input_specs", b"input_specs", "metadata", b"metadata", "output_specs", b"output_specs", "uid", b"uid"]) -> None: ...

global___ModelInfo = ModelInfo

@typing.final
class ForwardRequest(google.protobuf.message.Message):
    """Request message for running inference."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class InputsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___Tensor: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___Tensor | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    MODEL_UID_FIELD_NUMBER: builtins.int
    INPUTS_FIELD_NUMBER: builtins.int
    model_uid: builtins.str
    """Model UID to use for inference"""
    @property
    def inputs(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___Tensor]:
        """Named input tensors"""

    def __init__(
        self,
        *,
        model_uid: builtins.str = ...,
        inputs: collections.abc.Mapping[builtins.str, global___Tensor] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["inputs", b"inputs", "model_uid", b"model_uid"]) -> None: ...

global___ForwardRequest = ForwardRequest

@typing.final
class Tensor(google.protobuf.message.Message):
    """A tensor containing data"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class Dimension(google.protobuf.message.Message):
        """Dimension information"""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        SIZE_FIELD_NUMBER: builtins.int
        NAME_FIELD_NUMBER: builtins.int
        DYNAMIC_FIELD_NUMBER: builtins.int
        size: builtins.int
        """Size of this dimension"""
        name: builtins.str
        """Name (e.g., "batch", "channels", "height")"""
        dynamic: builtins.bool
        """Whether this dimension can vary (e.g., batch size)"""
        def __init__(
            self,
            *,
            size: builtins.int = ...,
            name: builtins.str = ...,
            dynamic: builtins.bool = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["dynamic", b"dynamic", "name", b"name", "size", b"size"]) -> None: ...

    VALUES_FIELD_NUMBER: builtins.int
    SHAPE_FIELD_NUMBER: builtins.int
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        """Tensor values in row-major order"""

    @property
    def shape(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Tensor.Dimension]:
        """Shape of the tensor"""

    def __init__(
        self,
        *,
        values: collections.abc.Iterable[builtins.float] | None = ...,
        shape: collections.abc.Iterable[global___Tensor.Dimension] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["shape", b"shape", "values", b"values"]) -> None: ...

global___Tensor = Tensor

@typing.final
class ForwardResponse(google.protobuf.message.Message):
    """Response message containing inference results."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class OutputsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___Tensor: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___Tensor | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    OUTPUTS_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    @property
    def outputs(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___Tensor]:
        """Named output tensors"""

    @property
    def error(self) -> kos.common_pb2.Error:
        """Error details if inference failed"""

    def __init__(
        self,
        *,
        outputs: collections.abc.Mapping[builtins.str, global___Tensor] | None = ...,
        error: kos.common_pb2.Error | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["error", b"error"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["error", b"error", "outputs", b"outputs"]) -> None: ...

global___ForwardResponse = ForwardResponse
