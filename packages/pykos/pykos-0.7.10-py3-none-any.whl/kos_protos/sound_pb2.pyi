"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import kos.common_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class GetAudioInfoResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PLAYBACK_FIELD_NUMBER: builtins.int
    RECORDING_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    @property
    def playback(self) -> global___AudioCapabilities:
        """Playback capabilities"""

    @property
    def recording(self) -> global___AudioCapabilities:
        """Recording capabilities"""

    @property
    def error(self) -> kos.common_pb2.Error:
        """Error details if any"""

    def __init__(
        self,
        *,
        playback: global___AudioCapabilities | None = ...,
        recording: global___AudioCapabilities | None = ...,
        error: kos.common_pb2.Error | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["error", b"error", "playback", b"playback", "recording", b"recording"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["error", b"error", "playback", b"playback", "recording", b"recording"]) -> None: ...

global___GetAudioInfoResponse = GetAudioInfoResponse

@typing.final
class AudioCapabilities(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SAMPLE_RATES_FIELD_NUMBER: builtins.int
    BIT_DEPTHS_FIELD_NUMBER: builtins.int
    CHANNELS_FIELD_NUMBER: builtins.int
    AVAILABLE_FIELD_NUMBER: builtins.int
    available: builtins.bool
    """Whether this capability is available"""
    @property
    def sample_rates(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """Supported sample rates (e.g., 44100, 48000)"""

    @property
    def bit_depths(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """Supported bit depths (e.g., 16, 24, 32)"""

    @property
    def channels(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """Supported channel counts (e.g., 1, 2)"""

    def __init__(
        self,
        *,
        sample_rates: collections.abc.Iterable[builtins.int] | None = ...,
        bit_depths: collections.abc.Iterable[builtins.int] | None = ...,
        channels: collections.abc.Iterable[builtins.int] | None = ...,
        available: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["available", b"available", "bit_depths", b"bit_depths", "channels", b"channels", "sample_rates", b"sample_rates"]) -> None: ...

global___AudioCapabilities = AudioCapabilities

@typing.final
class PlayAudioRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONFIG_FIELD_NUMBER: builtins.int
    AUDIO_DATA_FIELD_NUMBER: builtins.int
    audio_data: builtins.bytes
    """Raw PCM audio data"""
    @property
    def config(self) -> global___AudioConfig:
        """First message must include config, subsequent messages only need audio_data
        Audio configuration (required for first message)
        """

    def __init__(
        self,
        *,
        config: global___AudioConfig | None = ...,
        audio_data: builtins.bytes = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_config", b"_config", "config", b"config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_config", b"_config", "audio_data", b"audio_data", "config", b"config"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_config", b"_config"]) -> typing.Literal["config"] | None: ...

global___PlayAudioRequest = PlayAudioRequest

@typing.final
class RecordAudioRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONFIG_FIELD_NUMBER: builtins.int
    DURATION_MS_FIELD_NUMBER: builtins.int
    duration_ms: builtins.int
    """Recording duration in milliseconds (0 for continuous)"""
    @property
    def config(self) -> global___AudioConfig:
        """Desired recording configuration"""

    def __init__(
        self,
        *,
        config: global___AudioConfig | None = ...,
        duration_ms: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["config", b"config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["config", b"config", "duration_ms", b"duration_ms"]) -> None: ...

global___RecordAudioRequest = RecordAudioRequest

@typing.final
class RecordAudioResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    AUDIO_DATA_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    audio_data: builtins.bytes
    """Raw PCM audio data"""
    @property
    def error(self) -> kos.common_pb2.Error:
        """Error details if any"""

    def __init__(
        self,
        *,
        audio_data: builtins.bytes = ...,
        error: kos.common_pb2.Error | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["error", b"error"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["audio_data", b"audio_data", "error", b"error"]) -> None: ...

global___RecordAudioResponse = RecordAudioResponse

@typing.final
class AudioConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SAMPLE_RATE_FIELD_NUMBER: builtins.int
    BIT_DEPTH_FIELD_NUMBER: builtins.int
    CHANNELS_FIELD_NUMBER: builtins.int
    sample_rate: builtins.int
    """Sample rate in Hz (e.g., 44100)"""
    bit_depth: builtins.int
    """Bit depth (e.g., 16)"""
    channels: builtins.int
    """Number of channels (1 for mono, 2 for stereo)"""
    def __init__(
        self,
        *,
        sample_rate: builtins.int = ...,
        bit_depth: builtins.int = ...,
        channels: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["bit_depth", b"bit_depth", "channels", b"channels", "sample_rate", b"sample_rate"]) -> None: ...

global___AudioConfig = AudioConfig
