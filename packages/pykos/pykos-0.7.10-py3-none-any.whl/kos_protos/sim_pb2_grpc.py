# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from kos_protos import common_pb2 as kos_dot_common__pb2
from kos_protos import sim_pb2 as kos_dot_sim__pb2

GRPC_GENERATED_VERSION = '1.71.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in kos/sim_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class SimulationServiceStub(object):
    """Service to control the simulation environment.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Reset = channel.unary_unary(
                '/kos.sim.SimulationService/Reset',
                request_serializer=kos_dot_sim__pb2.ResetRequest.SerializeToString,
                response_deserializer=kos_dot_common__pb2.ActionResponse.FromString,
                _registered_method=True)
        self.SetPaused = channel.unary_unary(
                '/kos.sim.SimulationService/SetPaused',
                request_serializer=kos_dot_sim__pb2.SetPausedRequest.SerializeToString,
                response_deserializer=kos_dot_common__pb2.ActionResponse.FromString,
                _registered_method=True)
        self.Step = channel.unary_unary(
                '/kos.sim.SimulationService/Step',
                request_serializer=kos_dot_sim__pb2.StepRequest.SerializeToString,
                response_deserializer=kos_dot_common__pb2.ActionResponse.FromString,
                _registered_method=True)
        self.AddMarker = channel.unary_unary(
                '/kos.sim.SimulationService/AddMarker',
                request_serializer=kos_dot_sim__pb2.Marker.SerializeToString,
                response_deserializer=kos_dot_common__pb2.ActionResponse.FromString,
                _registered_method=True)
        self.UpdateMarker = channel.unary_unary(
                '/kos.sim.SimulationService/UpdateMarker',
                request_serializer=kos_dot_sim__pb2.UpdateMarkerRequest.SerializeToString,
                response_deserializer=kos_dot_common__pb2.ActionResponse.FromString,
                _registered_method=True)
        self.RemoveMarker = channel.unary_unary(
                '/kos.sim.SimulationService/RemoveMarker',
                request_serializer=kos_dot_sim__pb2.RemoveMarkerRequest.SerializeToString,
                response_deserializer=kos_dot_common__pb2.ActionResponse.FromString,
                _registered_method=True)
        self.GetMarkers = channel.unary_unary(
                '/kos.sim.SimulationService/GetMarkers',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=kos_dot_sim__pb2.GetMarkersResponse.FromString,
                _registered_method=True)
        self.SetParameters = channel.unary_unary(
                '/kos.sim.SimulationService/SetParameters',
                request_serializer=kos_dot_sim__pb2.SetParametersRequest.SerializeToString,
                response_deserializer=kos_dot_common__pb2.ActionResponse.FromString,
                _registered_method=True)
        self.GetParameters = channel.unary_unary(
                '/kos.sim.SimulationService/GetParameters',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=kos_dot_sim__pb2.GetParametersResponse.FromString,
                _registered_method=True)


class SimulationServiceServicer(object):
    """Service to control the simulation environment.
    """

    def Reset(self, request, context):
        """Resets the simulation to its initial state.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetPaused(self, request, context):
        """Pauses/unpauses the simulation.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Step(self, request, context):
        """Steps the simulation forward by a specified amount.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddMarker(self, request, context):
        """Adds a marker to the simulation.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateMarker(self, request, context):
        """Updates a marker in the simulation.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveMarker(self, request, context):
        """Removes a marker from the simulation.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMarkers(self, request, context):
        """Gets all markers in the simulation.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetParameters(self, request, context):
        """Sets various simulation parameters.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetParameters(self, request, context):
        """Gets the current simulation parameters.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SimulationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Reset': grpc.unary_unary_rpc_method_handler(
                    servicer.Reset,
                    request_deserializer=kos_dot_sim__pb2.ResetRequest.FromString,
                    response_serializer=kos_dot_common__pb2.ActionResponse.SerializeToString,
            ),
            'SetPaused': grpc.unary_unary_rpc_method_handler(
                    servicer.SetPaused,
                    request_deserializer=kos_dot_sim__pb2.SetPausedRequest.FromString,
                    response_serializer=kos_dot_common__pb2.ActionResponse.SerializeToString,
            ),
            'Step': grpc.unary_unary_rpc_method_handler(
                    servicer.Step,
                    request_deserializer=kos_dot_sim__pb2.StepRequest.FromString,
                    response_serializer=kos_dot_common__pb2.ActionResponse.SerializeToString,
            ),
            'AddMarker': grpc.unary_unary_rpc_method_handler(
                    servicer.AddMarker,
                    request_deserializer=kos_dot_sim__pb2.Marker.FromString,
                    response_serializer=kos_dot_common__pb2.ActionResponse.SerializeToString,
            ),
            'UpdateMarker': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateMarker,
                    request_deserializer=kos_dot_sim__pb2.UpdateMarkerRequest.FromString,
                    response_serializer=kos_dot_common__pb2.ActionResponse.SerializeToString,
            ),
            'RemoveMarker': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveMarker,
                    request_deserializer=kos_dot_sim__pb2.RemoveMarkerRequest.FromString,
                    response_serializer=kos_dot_common__pb2.ActionResponse.SerializeToString,
            ),
            'GetMarkers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMarkers,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=kos_dot_sim__pb2.GetMarkersResponse.SerializeToString,
            ),
            'SetParameters': grpc.unary_unary_rpc_method_handler(
                    servicer.SetParameters,
                    request_deserializer=kos_dot_sim__pb2.SetParametersRequest.FromString,
                    response_serializer=kos_dot_common__pb2.ActionResponse.SerializeToString,
            ),
            'GetParameters': grpc.unary_unary_rpc_method_handler(
                    servicer.GetParameters,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=kos_dot_sim__pb2.GetParametersResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'kos.sim.SimulationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('kos.sim.SimulationService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class SimulationService(object):
    """Service to control the simulation environment.
    """

    @staticmethod
    def Reset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kos.sim.SimulationService/Reset',
            kos_dot_sim__pb2.ResetRequest.SerializeToString,
            kos_dot_common__pb2.ActionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetPaused(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kos.sim.SimulationService/SetPaused',
            kos_dot_sim__pb2.SetPausedRequest.SerializeToString,
            kos_dot_common__pb2.ActionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Step(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kos.sim.SimulationService/Step',
            kos_dot_sim__pb2.StepRequest.SerializeToString,
            kos_dot_common__pb2.ActionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddMarker(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kos.sim.SimulationService/AddMarker',
            kos_dot_sim__pb2.Marker.SerializeToString,
            kos_dot_common__pb2.ActionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateMarker(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kos.sim.SimulationService/UpdateMarker',
            kos_dot_sim__pb2.UpdateMarkerRequest.SerializeToString,
            kos_dot_common__pb2.ActionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveMarker(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kos.sim.SimulationService/RemoveMarker',
            kos_dot_sim__pb2.RemoveMarkerRequest.SerializeToString,
            kos_dot_common__pb2.ActionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMarkers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kos.sim.SimulationService/GetMarkers',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            kos_dot_sim__pb2.GetMarkersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetParameters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kos.sim.SimulationService/SetParameters',
            kos_dot_sim__pb2.SetParametersRequest.SerializeToString,
            kos_dot_common__pb2.ActionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetParameters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kos.sim.SimulationService/GetParameters',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            kos_dot_sim__pb2.GetParametersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
