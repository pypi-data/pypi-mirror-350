{"version":3,"file":"Panel.js","sources":["../../frontend/node_modules/@inventreedb/ui/dist/enums/ModelType.js","../../frontend/node_modules/@inventreedb/ui/dist/functions/Api.js","../../frontend/src/Panel.tsx"],"sourcesContent":["var ModelType = /* @__PURE__ */ ((ModelType2) => {\n  ModelType2[\"part\"] = \"part\";\n  ModelType2[\"supplierpart\"] = \"supplierpart\";\n  ModelType2[\"manufacturerpart\"] = \"manufacturerpart\";\n  ModelType2[\"partcategory\"] = \"partcategory\";\n  ModelType2[\"partparametertemplate\"] = \"partparametertemplate\";\n  ModelType2[\"parttesttemplate\"] = \"parttesttemplate\";\n  ModelType2[\"projectcode\"] = \"projectcode\";\n  ModelType2[\"stockitem\"] = \"stockitem\";\n  ModelType2[\"stocklocation\"] = \"stocklocation\";\n  ModelType2[\"stocklocationtype\"] = \"stocklocationtype\";\n  ModelType2[\"stockhistory\"] = \"stockhistory\";\n  ModelType2[\"build\"] = \"build\";\n  ModelType2[\"buildline\"] = \"buildline\";\n  ModelType2[\"builditem\"] = \"builditem\";\n  ModelType2[\"company\"] = \"company\";\n  ModelType2[\"purchaseorder\"] = \"purchaseorder\";\n  ModelType2[\"purchaseorderlineitem\"] = \"purchaseorderlineitem\";\n  ModelType2[\"salesorder\"] = \"salesorder\";\n  ModelType2[\"salesordershipment\"] = \"salesordershipment\";\n  ModelType2[\"returnorder\"] = \"returnorder\";\n  ModelType2[\"returnorderlineitem\"] = \"returnorderlineitem\";\n  ModelType2[\"importsession\"] = \"importsession\";\n  ModelType2[\"address\"] = \"address\";\n  ModelType2[\"contact\"] = \"contact\";\n  ModelType2[\"owner\"] = \"owner\";\n  ModelType2[\"user\"] = \"user\";\n  ModelType2[\"group\"] = \"group\";\n  ModelType2[\"reporttemplate\"] = \"reporttemplate\";\n  ModelType2[\"labeltemplate\"] = \"labeltemplate\";\n  ModelType2[\"pluginconfig\"] = \"pluginconfig\";\n  ModelType2[\"contenttype\"] = \"contenttype\";\n  ModelType2[\"selectionlist\"] = \"selectionlist\";\n  ModelType2[\"error\"] = \"error\";\n  return ModelType2;\n})(ModelType || {});\nexport {\n  ModelType\n};\n//# sourceMappingURL=ModelType.js.map\n","function apiPrefix() {\n  return \"/api/\";\n}\nfunction apiUrl(endpoint, pk, pathParams) {\n  let _url = endpoint;\n  if (!_url.startsWith(\"/\")) {\n    _url = apiPrefix() + _url;\n  }\n  if (_url && pk) {\n    if (_url.indexOf(\":id\") >= 0) {\n      _url = _url.replace(\":id\", `${pk}`);\n    } else {\n      _url += `${pk}/`;\n    }\n  }\n  if (_url && pathParams) {\n    for (const key in pathParams) {\n      _url = _url.replace(`:${key}`, `${pathParams[key]}`);\n    }\n  }\n  return _url;\n}\nexport {\n  apiPrefix,\n  apiUrl\n};\n//# sourceMappingURL=Api.js.map\n","import { Alert, Button, Group, Stack, Text, Title } from '@mantine/core';\nimport { notifications } from '@mantine/notifications';\nimport { useCallback, useMemo, useState } from 'react';\n\n// Import for type checking\nimport { checkPluginVersion, type InvenTreePluginContext } from '@inventreedb/ui';\nimport { ApiEndpoints, apiUrl, ModelType } from '@inventreedb/ui';\n\n/**\n * Render a custom panel with the provided context.\n * Refer to the InvenTree documentation for the context interface\n * https://docs.inventree.org/en/stable/extend/plugins/ui/#plugin-context\n */\nfunction StockEventReportPanel({\n    context\n}: {\n    context: InvenTreePluginContext;\n}) {\n\n    const partId = useMemo(() => {\n        return context.model == ModelType.part ? context.id || null: null;\n    }, [context.model, context.id]);\n\n    // Hello world - counter example\n    const [ counter, setCounter ] = useState<number>(0);\n\n    // Extract context information\n    const instance: string = useMemo(() => {\n        const data = context?.instance ?? {};\n        return JSON.stringify(data, null, 2);\n    }, [context.instance]);\n\n    // Function to open the latest report\n    const openLatestReport = useCallback(async () => {\n        try {\n            // First get the latest report URL\n            const response = await fetch('/plugin/stockeventreport/latest-report/');\n            const data = await response.json();\n            \n            if (data.url) {\n                // Open the report in a new tab\n                window.open(data.url, '_blank');\n            } else {\n                notifications.show({\n                    title: 'No Report Available',\n                    message: 'No report has been generated yet.',\n                    color: 'yellow',\n                });\n            }\n        } catch (error) {\n            notifications.show({\n                title: 'Error',\n                message: 'Failed to fetch report URL',\n                color: 'red',\n            });\n        }\n    }, []);\n\n    // Custom form to edit the selected part\n    const editPartForm = context.forms.edit({\n        url: apiUrl(ApiEndpoints.part_list, partId),\n        title: \"Edit Part\",\n        preFormContent: (\n            <Alert title=\"Custom Plugin Form\" color=\"blue\">\n                This is a custom form launched from within a plugin!\n            </Alert>\n        ),\n        fields: {\n            name: {},\n            description: {},\n            category: {},\n        },\n        successMessage: null,\n        onFormSuccess: () => {\n            notifications.show({\n                title: 'Success',\n                message: 'Part updated successfully!',\n                color: 'green',\n            });\n        }\n    });\n\n    // Custom callback function example\n    const openForm = useCallback(() => {\n        editPartForm?.open();\n    }, [editPartForm]);\n\n    // Navigation functionality example\n    const gotoDashboard = useCallback(() => {\n        context.navigate('/home');\n    }, [context]);\n\n    return (\n        <>\n        {editPartForm.modal}\n        <Stack gap=\"xs\">\n        <Title order={3}>StockEventReport</Title>\n        <Text>\n            This is a custom panel for the StockEventReport plugin.\n        </Text>\n        <Group justify='apart' wrap='nowrap' gap='sm'>\n            <Button color='blue' onClick={gotoDashboard}>\n                Go to Dashboard\n            </Button>\n            {partId && <Button color='green' onClick={openForm}>\n                Edit Part\n            </Button>}\n            <Button onClick={() => setCounter(counter + 1)}>\n                Increment Counter\n            </Button>\n            <Button color='cyan' onClick={openLatestReport}>\n                Open Latest Report\n            </Button>\n            <Text size='xl'>Counter: {counter}</Text>\n        </Group>\n        {instance ? (\n            <Alert title=\"Instance Data\" color=\"blue\">\n                {instance}\n            </Alert>\n        ) : (\n            <Alert title=\"No Instance\" color=\"yellow\">\n                No instance data available\n            </Alert>\n        )}\n        </Stack>\n        </>\n    );\n}\n\n// This is the function which is called by InvenTree to render the actual panel component\nexport function renderStockEventReportPanel(context: InvenTreePluginContext) {\n    checkPluginVersion(context);\n    return <StockEventReportPanel context={context} />;\n}"],"names":["ModelType","ModelType2","apiPrefix","apiUrl","endpoint","pk","pathParams","_url","Alert","notifications","useCallback","StockEventReportPanel","context","partId","useMemo","counter","setCounter","useState","instance","data","openLatestReport","editPartForm","ApiEndpoints","openForm","gotoDashboard","Stack","Title","Text","Group","Button","renderStockEventReportPanel","checkPluginVersion"],"mappings":"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","x_google_ignoreList":[0,1]}