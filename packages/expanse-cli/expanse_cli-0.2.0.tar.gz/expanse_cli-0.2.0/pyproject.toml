[tool.poetry]
name = "expanse-cli"
version = "0.2.0"
description = "The official Expanse CLI"
authors = ["SÃ©bastien Eustace <sebastien@eustace.io>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
cleo = ">=2.1.0"
copier = ">=9.4.1"


[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
mypy = ">=1.11.2"


[tool.poetry.group.dev.dependencies]
pytest = ">=8.3.5"

[tool.poetry.scripts]
expanse = "expanse_cli.main:run"


[tool.ruff]
fix = true
line-length = 88
target-version = "py311"
src = ["src"]
extend-exclude = [
    # External to the project's coding standards:
    "docs/*",
    # ruff disagrees with black when it comes to formatting
    "*.pyi",
]

[tool.ruff.lint]
extend-select = [
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "ERA", # flake8-eradicate/eradicate
    "I", # isort
    "N", # pep8-naming
    "PIE", # flake8-pie
    "PGH", # pygrep
    "RUF", # ruff checks
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "UP", # pyupgrade
]
ignore = [
    "I002",
    "B904", # use 'raise ... from err'
    "B905", # use explicit 'strict=' parameter with 'zip()'
    "N818", #  Exception name should be named with an Error suffix
    "RUF001",
]
unfixable = [
    "ERA", # do not autoremove commented out code
]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.isort]
force-single-line = true
lines-between-types = 1
lines-after-imports = 2
known-first-party = ["expanse_cli"]
known-third-party = []

[tool.mypy]
files = "src"
mypy_path = "src"
show_error_codes = true
pretty = true
warn_unused_ignores = true
warn_no_return = false
follow_imports = "silent"
exclude = []
disable_error_code = ["type-abstract"]


[tool.coverage.run]
omit = []

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:"
]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
