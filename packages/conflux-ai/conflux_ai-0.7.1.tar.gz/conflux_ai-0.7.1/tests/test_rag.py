from unittest.mock import patch

import numpy as np

from conflux import handler


@handler
async def dummy_openai(msg, chain):
    return msg


async def dummy_openai_llm_process_side_effect(hanlder, msg, chain):
    return msg


def dummy_encoder(texts: list[str], mode, dim: int = 512) -> np.ndarray:
    if len(texts) == 1:
        return np.array(
            [
                [
                    0.02649759,
                    -0.01331952,
                    0.03038736,
                    0.01513474,
                    0.02171199,
                    -0.00655367,
                    0.0325562,
                    0.02630899,
                    -0.00429053,
                    0.00715482,
                    -0.02609682,
                    0.04528636,
                    0.02590823,
                    -0.00067076,
                    -0.0437776,
                    0.02208918,
                    -0.05662563,
                    -0.00867537,
                    -0.0417502,
                    -0.00848088,
                    -0.00778543,
                    0.05714426,
                    -0.07048735,
                    0.01170467,
                    0.0334756,
                    -0.00251656,
                    -0.00548104,
                    0.00686603,
                    0.01519368,
                    0.0081803,
                    -0.01180486,
                    -0.0101193,
                ]
            ]
        )
    else:
        return np.array(
            [
                [
                    0.02649759,
                    -0.01331952,
                    0.03038736,
                    0.01513474,
                    0.02171199,
                    -0.00655367,
                    0.0325562,
                    0.02630899,
                    -0.00429053,
                    0.00715482,
                    -0.02609682,
                    0.04528636,
                    0.02590823,
                    -0.00067076,
                    -0.0437776,
                    0.02208918,
                    -0.05662563,
                    -0.00867537,
                    -0.0417502,
                    -0.00848088,
                    -0.00778543,
                    0.05714426,
                    -0.07048735,
                    0.01170467,
                    0.0334756,
                    -0.00251656,
                    -0.00548104,
                    0.00686603,
                    0.01519368,
                    0.0081803,
                    -0.01180486,
                    -0.0101193,
                ],
                [
                    -0.00036378,
                    -0.01805945,
                    0.01971311,
                    0.00529411,
                    -0.01623923,
                    0.02178317,
                    0.02638726,
                    0.04839647,
                    0.05976988,
                    0.02071245,
                    -0.07433165,
                    0.02705348,
                    -0.00773891,
                    -0.0155968,
                    -0.04746851,
                    0.02603035,
                    -0.05363109,
                    -0.0273866,
                    -0.02541172,
                    -0.00083055,
                    -0.0133245,
                    0.05101378,
                    -0.04318564,
                    0.01945138,
                    -0.01543024,
                    0.00762589,
                    -0.00613284,
                    0.00553204,
                    0.00263367,
                    -0.0076021,
                    0.05753326,
                    -0.02272302,
                ],
                [
                    -0.00630416,
                    0.04832515,
                    0.03194649,
                    0.02139226,
                    -0.02752749,
                    0.00881096,
                    0.05540635,
                    0.01973007,
                    0.03789254,
                    -0.00412845,
                    -0.01689218,
                    0.0298924,
                    0.03121675,
                    -0.02501394,
                    -0.01866248,
                    0.02370311,
                    0.00246457,
                    -0.02044629,
                    -0.06151456,
                    0.0630281,
                    -0.01078397,
                    0.04048717,
                    -0.04862245,
                    0.01459484,
                    -0.03391949,
                    -0.00512847,
                    0.01963547,
                    0.03886553,
                    0.00144935,
                    -0.02245984,
                    -0.0085542,
                    -0.02775723,
                ],
                [
                    0.03095594,
                    0.02201909,
                    -0.01410514,
                    0.00181361,
                    -0.00886955,
                    0.00251349,
                    0.04635315,
                    0.02226136,
                    0.00440449,
                    0.00864747,
                    -0.05375566,
                    0.03790084,
                    0.02130576,
                    0.01390325,
                    -0.04387668,
                    0.04150787,
                    -0.02780651,
                    -0.03771241,
                    -0.05372874,
                    0.01354659,
                    -0.03232877,
                    0.06169653,
                    -0.03270562,
                    0.00847251,
                    0.01524916,
                    -0.00768515,
                    0.02199217,
                    -0.00403437,
                    0.03160197,
                    0.04538409,
                    0.01822362,
                    -0.01738916,
                ],
                [
                    0.01750904,
                    0.01065627,
                    0.05863852,
                    0.01664519,
                    -0.00300413,
                    0.00093637,
                    0.06678706,
                    0.02521921,
                    0.00332001,
                    0.00514763,
                    -0.03339353,
                    0.01723828,
                    -0.00511862,
                    0.01328005,
                    -0.05157302,
                    0.02474215,
                    -0.04061375,
                    -0.01802477,
                    -0.0160521,
                    0.00573428,
                    0.00937984,
                    0.05688504,
                    -0.05162459,
                    0.01941724,
                    0.01179088,
                    -0.0026963,
                    -0.00074539,
                    0.02581229,
                    0.02707583,
                    0.0334451,
                    0.01710935,
                    -0.01387314,
                ],
            ]
        ).astype(np.float32)


class dummy_client:
    pass


def test_rag_example():
    with (
        patch("conflux.handlers.OpenAiLLM", type(dummy_openai)),
        patch("examples.rag_example.encode", dummy_encoder),
    ):
        import examples.rag_example as rag

        rag.main(dim=32)


if __name__ == "__main__":
    test_rag_example()
