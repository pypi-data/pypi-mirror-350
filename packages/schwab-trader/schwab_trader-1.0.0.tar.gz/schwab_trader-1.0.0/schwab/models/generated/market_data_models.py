# generated by datamodel-codegen:
#   filename:  market_data.yaml

from __future__ import annotations

from datetime import datetime as datetime_aliased
from enum import Enum
from typing import Dict, List, Optional, Union
from uuid import UUID

from pydantic import BaseModel, Field, RootModel, ValidationError


class AssetType(Enum):
    bond = 'BOND'
    equity = 'EQUITY'
    etf = 'ETF'
    extended = 'EXTENDED'
    forex = 'FOREX'
    future = 'FUTURE'
    future_option = 'FUTURE_OPTION'
    fundamental = 'FUNDAMENTAL'
    index = 'INDEX'
    indicator = 'INDICATOR'
    mutual_fund = 'MUTUAL_FUND'
    option = 'OPTION'
    unknown = 'UNKNOWN'


class Bond(BaseModel):
    cusip: Optional[str] = None
    symbol: Optional[str] = None
    description: Optional[str] = None
    exchange: Optional[str] = None
    asset_type: Optional[AssetType] = Field(None, alias='assetType')
    bond_factor: Optional[str] = Field(None, alias='bondFactor')
    bond_multiplier: Optional[str] = Field(None, alias='bondMultiplier')
    bond_price: Optional[float] = Field(None, alias='bondPrice')
    type: Optional[AssetType] = None


class FundamentalInst(BaseModel):
    symbol: Optional[str] = None
    high52: Optional[float] = None
    low52: Optional[float] = None
    dividend_amount: Optional[float] = Field(None, alias='dividendAmount')
    dividend_yield: Optional[float] = Field(None, alias='dividendYield')
    dividend_date: Optional[str] = Field(None, alias='dividendDate')
    pe_ratio: Optional[float] = Field(None, alias='peRatio')
    peg_ratio: Optional[float] = Field(None, alias='pegRatio')
    pb_ratio: Optional[float] = Field(None, alias='pbRatio')
    pr_ratio: Optional[float] = Field(None, alias='prRatio')
    pcf_ratio: Optional[float] = Field(None, alias='pcfRatio')
    gross_margin_ttm: Optional[float] = Field(None, alias='grossMarginTTM')
    gross_margin_mrq: Optional[float] = Field(None, alias='grossMarginMRQ')
    net_profit_margin_ttm: Optional[float] = Field(None, alias='netProfitMarginTTM')
    net_profit_margin_mrq: Optional[float] = Field(None, alias='netProfitMarginMRQ')
    operating_margin_ttm: Optional[float] = Field(None, alias='operatingMarginTTM')
    operating_margin_mrq: Optional[float] = Field(None, alias='operatingMarginMRQ')
    return_on_equity: Optional[float] = Field(None, alias='returnOnEquity')
    return_on_assets: Optional[float] = Field(None, alias='returnOnAssets')
    return_on_investment: Optional[float] = Field(None, alias='returnOnInvestment')
    quick_ratio: Optional[float] = Field(None, alias='quickRatio')
    current_ratio: Optional[float] = Field(None, alias='currentRatio')
    interest_coverage: Optional[float] = Field(None, alias='interestCoverage')
    total_debt_to_capital: Optional[float] = Field(None, alias='totalDebtToCapital')
    lt_debt_to_equity: Optional[float] = Field(None, alias='ltDebtToEquity')
    total_debt_to_equity: Optional[float] = Field(None, alias='totalDebtToEquity')
    eps_ttm: Optional[float] = Field(None, alias='epsTTM')
    eps_change_percent_ttm: Optional[float] = Field(None, alias='epsChangePercentTTM')
    eps_change_year: Optional[float] = Field(None, alias='epsChangeYear')
    eps_change: Optional[float] = Field(None, alias='epsChange')
    rev_change_year: Optional[float] = Field(None, alias='revChangeYear')
    rev_change_ttm: Optional[float] = Field(None, alias='revChangeTTM')
    rev_change_in: Optional[float] = Field(None, alias='revChangeIn')
    shares_outstanding: Optional[float] = Field(None, alias='sharesOutstanding')
    market_cap_float: Optional[float] = Field(None, alias='marketCapFloat')
    market_cap: Optional[float] = Field(None, alias='marketCap')
    book_value_per_share: Optional[float] = Field(None, alias='bookValuePerShare')
    short_int_to_float: Optional[float] = Field(None, alias='shortIntToFloat')
    short_int_day_to_cover: Optional[float] = Field(None, alias='shortIntDayToCover')
    div_growth_rate3_year: Optional[float] = Field(None, alias='divGrowthRate3Year')
    dividend_pay_amount: Optional[float] = Field(None, alias='dividendPayAmount')
    dividend_pay_date: Optional[str] = Field(None, alias='dividendPayDate')
    beta: Optional[float] = None
    vol1_day_avg: Optional[float] = Field(None, alias='vol1DayAvg')
    vol10_day_avg: Optional[float] = Field(None, alias='vol10DayAvg')
    vol3_month_avg: Optional[float] = Field(None, alias='vol3MonthAvg')
    avg10_days_volume: Optional[int] = Field(None, alias='avg10DaysVolume')
    avg1_day_volume: Optional[int] = Field(None, alias='avg1DayVolume')
    avg3_month_volume: Optional[int] = Field(None, alias='avg3MonthVolume')
    declaration_date: Optional[str] = Field(None, alias='declarationDate')
    dividend_freq: Optional[int] = Field(None, alias='dividendFreq')
    eps: Optional[float] = None
    corpaction_date: Optional[str] = Field(None, alias='corpactionDate')
    dtn_volume: Optional[int] = Field(None, alias='dtnVolume')
    next_dividend_pay_date: Optional[str] = Field(None, alias='nextDividendPayDate')
    next_dividend_date: Optional[str] = Field(None, alias='nextDividendDate')
    fund_leverage_factor: Optional[float] = Field(None, alias='fundLeverageFactor')
    fund_strategy: Optional[str] = Field(None, alias='fundStrategy')


class Instrument(BaseModel):
    cusip: Optional[str] = None
    symbol: Optional[str] = None
    description: Optional[str] = None
    exchange: Optional[str] = None
    asset_type: Optional[AssetType] = Field(None, alias='assetType')
    type: Optional[AssetType] = None


class InstrumentResponse(BaseModel):
    cusip: Optional[str] = None
    symbol: Optional[str] = None
    description: Optional[str] = None
    exchange: Optional[str] = None
    asset_type: Optional[AssetType] = Field(None, alias='assetType')
    bond_factor: Optional[str] = Field(None, alias='bondFactor')
    bond_multiplier: Optional[str] = Field(None, alias='bondMultiplier')
    bond_price: Optional[float] = Field(None, alias='bondPrice')
    fundamental: Optional[FundamentalInst] = None
    instrument_info: Optional[Instrument] = Field(None, alias='instrumentInfo')
    bond_instrument_info: Optional[Bond] = Field(None, alias='bondInstrumentInfo')
    type: Optional[AssetType] = None


class Interval(BaseModel):
    start: Optional[str] = None
    end: Optional[str] = None


class Direction(Enum):
    up = 'up'
    down = 'down'


class Screener(BaseModel):
    """
    Security info of most moved with in an index
    """

    change: Optional[float] = Field(
        None, description='percent or value changed, by default its percent changed'
    )
    description: Optional[str] = Field(None, description='Name of security')
    direction: Optional[Direction] = None
    last: Optional[float] = Field(None, description='what was last quoted price')
    symbol: Optional[str] = Field(None, description='schwab security symbol')
    total_volume: Optional[int] = Field(None, alias='totalVolume')


class Candle(BaseModel):
    close: Optional[float] = None
    datetime: Optional[int] = None
    datetime_iso8601: Optional[str] = Field(None, alias='datetimeISO8601')
    high: Optional[float] = None
    low: Optional[float] = None
    open: Optional[float] = None
    volume: Optional[int] = None


class CandleList(BaseModel):
    candles: Optional[List[Candle]] = None
    empty: Optional[bool] = None
    previous_close: Optional[float] = Field(None, alias='previousClose')
    previous_close_date: Optional[int] = Field(None, alias='previousCloseDate')
    previous_close_date_iso8601: Optional[str] = Field(
        None, alias='previousCloseDateISO8601'
    )
    symbol: Optional[str] = None


class QuoteError(BaseModel):
    """
    Partial or Custom errors per request
    """

    invalid_cusips: Optional[List[str]] = Field(
        None, alias='invalidCusips', description='list of invalid cusips from request'
    )
    invalid_ssi_ds: Optional[List[int]] = Field(
        None, alias='invalidSSIDs', description='list of invalid SSIDs from request'
    )
    invalid_symbols: Optional[List[str]] = Field(
        None, alias='invalidSymbols', description='list of invalid symbols from request'
    )


class ExtendedMarket(BaseModel):
    """
    Quote data for extended hours
    """

    ask_price: Optional[float] = Field(
        None,
        alias='askPrice',
        description='Extended market ask price',
        examples=[124.85],
    )
    ask_size: Optional[int] = Field(
        None, alias='askSize', description='Extended market ask size', examples=[51771]
    )
    bid_price: Optional[float] = Field(
        None,
        alias='bidPrice',
        description='Extended market bid price',
        examples=[124.85],
    )
    bid_size: Optional[int] = Field(
        None, alias='bidSize', description='Extended market bid size', examples=[51771]
    )
    last_price: Optional[float] = Field(
        None,
        alias='lastPrice',
        description='Extended market last price',
        examples=[124.85],
    )
    last_size: Optional[int] = Field(
        None, alias='lastSize', description='Regular market last size', examples=[51771]
    )
    mark: Optional[float] = Field(None, description='mark price', examples=[1.1246])
    quote_time: Optional[int] = Field(
        None,
        alias='quoteTime',
        description='Extended market quote time in milliseconds since Epoch',
        examples=[1621368000400],
    )
    total_volume: Optional[float] = Field(
        None, alias='totalVolume', description='Total volume', examples=[12345]
    )
    trade_time: Optional[int] = Field(
        None,
        alias='tradeTime',
        description='Extended market trade time in milliseconds since Epoch',
        examples=[1621368000400],
    )


class QuoteEquity(BaseModel):
    """
    Quote data of Equity security
    """

    field_52_week_high: Optional[float] = Field(
        None,
        alias='52WeekHigh',
        description='Higest price traded in the past 12 months, or 52 weeks',
        examples=[145.09],
    )
    field_52_week_low: Optional[float] = Field(
        None,
        alias='52WeekLow',
        description='Lowest price traded in the past 12 months, or 52 weeks',
        examples=[77.581],
    )
    ask_mic_id: Optional[str] = Field(
        None, alias='askMICId', description='ask MIC code', examples=['XNYS']
    )
    ask_price: Optional[float] = Field(
        None, alias='askPrice', description='Current Best Ask Price', examples=[124.63]
    )
    ask_size: Optional[int] = Field(
        None, alias='askSize', description='Number of shares for ask', examples=[700]
    )
    ask_time: Optional[int] = Field(
        None,
        alias='askTime',
        description='Last ask time in milliseconds since Epoch',
        examples=[1621376892336],
    )
    bid_mic_id: Optional[str] = Field(
        None, alias='bidMICId', description='bid MIC code', examples=['XNYS']
    )
    bid_price: Optional[float] = Field(
        None, alias='bidPrice', description='Current Best Bid Price', examples=[124.6]
    )
    bid_size: Optional[int] = Field(
        None, alias='bidSize', description='Number of shares for bid', examples=[300]
    )
    bid_time: Optional[int] = Field(
        None,
        alias='bidTime',
        description='Last bid time in milliseconds since Epoch',
        examples=[1621376892336],
    )
    close_price: Optional[float] = Field(
        None,
        alias='closePrice',
        description="Previous day's closing price",
        examples=[126.27],
    )
    high_price: Optional[float] = Field(
        None, alias='highPrice', description="Day's high trade price", examples=[126.99]
    )
    last_mic_id: Optional[str] = Field(
        None, alias='lastMICId', description='Last MIC Code', examples=['XNYS']
    )
    last_price: Optional[float] = Field(None, alias='lastPrice', examples=[122.3])
    last_size: Optional[int] = Field(
        None,
        alias='lastSize',
        description='Number of shares traded with last trade',
        examples=[100],
    )
    low_price: Optional[float] = Field(
        None, alias='lowPrice', description="Day's low trade price"
    )
    mark: Optional[float] = Field(None, description='Mark price', examples=[52.93])
    mark_change: Optional[float] = Field(
        None, alias='markChange', description='Mark Price change', examples=[-0.01]
    )
    mark_percent_change: Optional[float] = Field(
        None,
        alias='markPercentChange',
        description='Mark Price percent change',
        examples=[-0.0189],
    )
    net_change: Optional[float] = Field(
        None, alias='netChange', description='Current Last-Prev Close', examples=[-0.04]
    )
    net_percent_change: Optional[float] = Field(
        None,
        alias='netPercentChange',
        description='Net Percentage Change',
        examples=[-0.0756],
    )
    open_price: Optional[float] = Field(
        None, alias='openPrice', description='Price at market open', examples=[52.8]
    )
    quote_time: Optional[int] = Field(
        None,
        alias='quoteTime',
        description='Last quote time in milliseconds since Epoch',
        examples=[1621376892336],
    )
    security_status: Optional[str] = Field(
        None,
        alias='securityStatus',
        description='Status of security',
        examples=['Normal'],
    )
    total_volume: Optional[int] = Field(
        None,
        alias='totalVolume',
        description='Aggregated shares traded throughout the day, including pre/post market hours.',
        examples=[20171188],
    )
    trade_time: Optional[int] = Field(
        None,
        alias='tradeTime',
        description='Last trade time in milliseconds since Epoch',
        examples=[1621376731304],
    )
    volatility: Optional[float] = Field(
        None, description='Option Risk/Volatility Measurement', examples=[0.0094]
    )


class QuoteForex(BaseModel):
    """
    Quote data of Forex security
    """

    field_52_week_high: Optional[float] = Field(
        None,
        alias='52WeekHigh',
        description='Higest price traded in the past 12 months, or 52 weeks',
        examples=[145.09],
    )
    field_52_week_low: Optional[float] = Field(
        None,
        alias='52WeekLow',
        description='Lowest price traded in the past 12 months, or 52 weeks',
        examples=[77.581],
    )
    ask_price: Optional[float] = Field(
        None, alias='askPrice', description='Current Best Ask Price', examples=[124.63]
    )
    ask_size: Optional[int] = Field(
        None, alias='askSize', description='Number of shares for ask', examples=[700]
    )
    bid_price: Optional[float] = Field(
        None, alias='bidPrice', description='Current Best Bid Price', examples=[124.6]
    )
    bid_size: Optional[int] = Field(
        None, alias='bidSize', description='Number of shares for bid', examples=[300]
    )
    close_price: Optional[float] = Field(
        None,
        alias='closePrice',
        description="Previous day's closing price",
        examples=[126.27],
    )
    high_price: Optional[float] = Field(
        None, alias='highPrice', description="Day's high trade price", examples=[126.99]
    )
    last_price: Optional[float] = Field(None, alias='lastPrice', examples=[122.3])
    last_size: Optional[int] = Field(
        None,
        alias='lastSize',
        description='Number of shares traded with last trade',
        examples=[100],
    )
    low_price: Optional[float] = Field(
        None, alias='lowPrice', description="Day's low trade price", examples=[52.74]
    )
    mark: Optional[float] = Field(None, description='Mark price', examples=[52.93])
    net_change: Optional[float] = Field(
        None, alias='netChange', description='Current Last-Prev Close', examples=[-0.04]
    )
    net_percent_change: Optional[float] = Field(
        None,
        alias='netPercentChange',
        description='Net Percentage Change',
        examples=[-0.0756],
    )
    open_price: Optional[float] = Field(
        None, alias='openPrice', description='Price at market open', examples=[52.8]
    )
    quote_time: Optional[int] = Field(
        None,
        alias='quoteTime',
        description='Last quote time in milliseconds since Epoch',
        examples=[1621376892336],
    )
    security_status: Optional[str] = Field(
        None,
        alias='securityStatus',
        description='Status of security',
        examples=['Normal'],
    )
    tick: Optional[float] = Field(None, description='Tick Price', examples=[0])
    tick_amount: Optional[float] = Field(
        None, alias='tickAmount', description='Tick Amount', examples=[0]
    )
    total_volume: Optional[int] = Field(
        None,
        alias='totalVolume',
        description='Aggregated shares traded throughout the day, including pre/post market hours.',
        examples=[20171188],
    )
    trade_time: Optional[int] = Field(
        None,
        alias='tradeTime',
        description='Last trade time in milliseconds since Epoch',
        examples=[1621376731304],
    )


class QuoteFuture(BaseModel):
    """
    Quote data of Future security
    """

    ask_mic_id: Optional[str] = Field(
        None, alias='askMICId', description='ask MIC code', examples=['XNYS']
    )
    ask_price: Optional[float] = Field(
        None, alias='askPrice', description='Current Best Ask Price', examples=[4083.25]
    )
    ask_size: Optional[int] = Field(
        None, alias='askSize', description='Number of shares for ask', examples=[36]
    )
    ask_time: Optional[int] = Field(
        None,
        alias='askTime',
        description='Last ask time in milliseconds since Epoch',
        examples=[1621376892336],
    )
    bid_mic_id: Optional[str] = Field(
        None, alias='bidMICId', description='bid MIC code', examples=['XNYS']
    )
    bid_price: Optional[float] = Field(
        None, alias='bidPrice', description='Current Best Bid Price', examples=[4083]
    )
    bid_size: Optional[int] = Field(
        None, alias='bidSize', description='Number of shares for bid', examples=[18]
    )
    bid_time: Optional[int] = Field(
        None,
        alias='bidTime',
        description='Last bid time in milliseconds since Epoch',
        examples=[1621376892336],
    )
    close_price: Optional[float] = Field(
        None,
        alias='closePrice',
        description="Previous day's closing price",
        examples=[4123],
    )
    future_percent_change: Optional[float] = Field(
        None,
        alias='futurePercentChange',
        description='Net Percentage Change',
        examples=[-0.0756],
    )
    high_price: Optional[float] = Field(
        None, alias='highPrice', description="Day's high trade price", examples=[4123]
    )
    last_mic_id: Optional[str] = Field(
        None, alias='lastMICId', description='Last MIC Code', examples=['XNYS']
    )
    last_price: Optional[float] = Field(None, alias='lastPrice', examples=[4083])
    last_size: Optional[int] = Field(
        None,
        alias='lastSize',
        description='Number of shares traded with last trade',
        examples=[7],
    )
    low_price: Optional[float] = Field(
        None, alias='lowPrice', description="Day's low trade price", examples=[4075.5]
    )
    mark: Optional[float] = Field(None, description='Mark price', examples=[4083])
    net_change: Optional[float] = Field(
        None, alias='netChange', description='Current Last-Prev Close', examples=[-40]
    )
    open_interest: Optional[int] = Field(
        None, alias='openInterest', description='Open interest', examples=[2517139]
    )
    open_price: Optional[float] = Field(
        None, alias='openPrice', description='Price at market open', examples=[4114]
    )
    quote_time: Optional[int] = Field(
        None,
        alias='quoteTime',
        description='Last quote time in milliseconds since Epoch',
        examples=[1621427004585],
    )
    quoted_in_session: Optional[bool] = Field(
        None,
        alias='quotedInSession',
        description='quoted during trading session',
        examples=[False],
    )
    security_status: Optional[str] = Field(
        None,
        alias='securityStatus',
        description='Status of security',
        examples=['Normal'],
    )
    settle_time: Optional[int] = Field(
        None,
        alias='settleTime',
        description='settlement time in milliseconds since Epoch',
        examples=[1621376892336],
    )
    tick: Optional[float] = Field(None, description='Tick Price', examples=[0.25])
    tick_amount: Optional[float] = Field(
        None, alias='tickAmount', description='Tick Amount', examples=[12.5]
    )
    total_volume: Optional[int] = Field(
        None,
        alias='totalVolume',
        description='Aggregated shares traded throughout the day, including pre/post market hours.',
        examples=[20171188],
    )
    trade_time: Optional[int] = Field(
        None,
        alias='tradeTime',
        description='Last trade time in milliseconds since Epoch',
        examples=[1621376731304],
    )


class QuoteFutureOption(BaseModel):
    """
    Quote data of Option security
    """

    ask_mic_id: Optional[str] = Field(
        None, alias='askMICId', description='ask MIC code', examples=['XNYS']
    )
    ask_price: Optional[float] = Field(
        None, alias='askPrice', description='Current Best Ask Price', examples=[124.63]
    )
    ask_size: Optional[int] = Field(
        None, alias='askSize', description='Number of shares for ask', examples=[700]
    )
    bid_mic_id: Optional[str] = Field(
        None, alias='bidMICId', description='bid MIC code', examples=['XNYS']
    )
    bid_price: Optional[float] = Field(
        None, alias='bidPrice', description='Current Best Bid Price', examples=[124.6]
    )
    bid_size: Optional[int] = Field(
        None, alias='bidSize', description='Number of shares for bid', examples=[300]
    )
    close_price: Optional[float] = Field(
        None,
        alias='closePrice',
        description="Previous day's closing price",
        examples=[126.27],
    )
    high_price: Optional[float] = Field(
        None, alias='highPrice', description="Day's high trade price", examples=[126.99]
    )
    last_mic_id: Optional[str] = Field(
        None, alias='lastMICId', description='Last MIC Code', examples=['XNYS']
    )
    last_price: Optional[float] = Field(None, alias='lastPrice', examples=[122.3])
    last_size: Optional[int] = Field(
        None,
        alias='lastSize',
        description='Number of shares traded with last trade',
        examples=[100],
    )
    low_price: Optional[float] = Field(
        None, alias='lowPrice', description="Day's low trade price", examples=[52.74]
    )
    mark: Optional[float] = Field(None, description='Mark price', examples=[52.93])
    mark_change: Optional[float] = Field(
        None, alias='markChange', description='Mark Price change', examples=[-0.04]
    )
    net_change: Optional[float] = Field(
        None, alias='netChange', description='Current Last-Prev Close', examples=[-0.04]
    )
    net_percent_change: Optional[float] = Field(
        None,
        alias='netPercentChange',
        description='Net Percentage Change',
        examples=[-0.0756],
    )
    open_interest: Optional[int] = Field(
        None, alias='openInterest', description='Open Interest', examples=[317]
    )
    open_price: Optional[float] = Field(
        None, alias='openPrice', description='Price at market open', examples=[52.8]
    )
    quote_time: Optional[int] = Field(
        None,
        alias='quoteTime',
        description='Last quote time in milliseconds since Epoch',
        examples=[1621376892336],
    )
    security_status: Optional[str] = Field(
        None,
        alias='securityStatus',
        description='Status of security',
        examples=['Normal'],
    )
    settlemet_price: Optional[float] = Field(
        None,
        alias='settlemetPrice',
        description='Price at market open',
        examples=[52.8],
    )
    tick: Optional[float] = Field(None, description='Tick Price', examples=[0])
    tick_amount: Optional[float] = Field(
        None, alias='tickAmount', description='Tick Amount', examples=[0]
    )
    total_volume: Optional[int] = Field(
        None,
        alias='totalVolume',
        description='Aggregated shares traded throughout the day, including pre/post market hours.',
        examples=[20171188],
    )
    trade_time: Optional[int] = Field(
        None,
        alias='tradeTime',
        description='Last trade time in milliseconds since Epoch',
        examples=[1621376731304],
    )


class QuoteIndex(BaseModel):
    """
    Quote data of Index security
    """

    field_52_week_high: Optional[float] = Field(
        None,
        alias='52WeekHigh',
        description='Higest price traded in the past 12 months, or 52 weeks',
        examples=[145.09],
    )
    field_52_week_low: Optional[float] = Field(
        None,
        alias='52WeekLow',
        description='Lowest price traded in the past 12 months, or 52 weeks',
        examples=[77.581],
    )
    close_price: Optional[float] = Field(
        None,
        alias='closePrice',
        description="Previous day's closing price",
        examples=[126.27],
    )
    high_price: Optional[float] = Field(
        None, alias='highPrice', description="Day's high trade price", examples=[126.99]
    )
    last_price: Optional[float] = Field(None, alias='lastPrice', examples=[122.3])
    low_price: Optional[float] = Field(
        None, alias='lowPrice', description="Day's low trade price", examples=[52.74]
    )
    net_change: Optional[float] = Field(
        None, alias='netChange', description='Current Last-Prev Close', examples=[-0.04]
    )
    net_percent_change: Optional[float] = Field(
        None,
        alias='netPercentChange',
        description='Net Percentage Change',
        examples=[-0.0756],
    )
    open_price: Optional[float] = Field(
        None, alias='openPrice', description='Price at market open', examples=[52.8]
    )
    security_status: Optional[str] = Field(
        None,
        alias='securityStatus',
        description='Status of security',
        examples=['Normal'],
    )
    total_volume: Optional[int] = Field(
        None,
        alias='totalVolume',
        description='Aggregated shares traded throughout the day, including pre/post market hours.',
        examples=[20171188],
    )
    trade_time: Optional[int] = Field(
        None,
        alias='tradeTime',
        description='Last trade time in milliseconds since Epoch',
        examples=[1621376731304],
    )


class QuoteMutualFund(BaseModel):
    """
    Quote data of Mutual Fund security
    """

    field_52_week_high: Optional[float] = Field(
        None,
        alias='52WeekHigh',
        description='Higest price traded in the past 12 months, or 52 weeks',
        examples=[145.09],
    )
    field_52_week_low: Optional[float] = Field(
        None,
        alias='52WeekLow',
        description='Lowest price traded in the past 12 months, or 52 weeks',
        examples=[77.581],
    )
    close_price: Optional[float] = Field(
        None,
        alias='closePrice',
        description="Previous day's closing price",
        examples=[126.27],
    )
    n_av: Optional[float] = Field(
        None, alias='nAV', description='Net Asset Value', examples=[126.99]
    )
    net_change: Optional[float] = Field(
        None, alias='netChange', description='Current Last-Prev Close', examples=[-0.04]
    )
    net_percent_change: Optional[float] = Field(
        None,
        alias='netPercentChange',
        description='Net Percentage Change',
        examples=[-0.0756],
    )
    security_status: Optional[str] = Field(
        None,
        alias='securityStatus',
        description='Status of security',
        examples=['Normal'],
    )
    total_volume: Optional[int] = Field(
        None,
        alias='totalVolume',
        description='Aggregated shares traded throughout the day, including pre/post market hours.',
        examples=[20171188],
    )
    trade_time: Optional[int] = Field(
        None,
        alias='tradeTime',
        description='Last trade time in milliseconds since Epoch',
        examples=[1621376731304],
    )


class QuoteOption(BaseModel):
    """
    Quote data of Option security
    """

    field_52_week_high: Optional[float] = Field(
        None,
        alias='52WeekHigh',
        description='Higest price traded in the past 12 months, or 52 weeks',
        examples=[145.09],
    )
    field_52_week_low: Optional[float] = Field(
        None,
        alias='52WeekLow',
        description='Lowest price traded in the past 12 months, or 52 weeks',
        examples=[77.581],
    )
    ask_price: Optional[float] = Field(
        None, alias='askPrice', description='Current Best Ask Price', examples=[124.63]
    )
    ask_size: Optional[int] = Field(
        None, alias='askSize', description='Number of shares for ask', examples=[700]
    )
    bid_price: Optional[float] = Field(
        None, alias='bidPrice', description='Current Best Bid Price', examples=[124.6]
    )
    bid_size: Optional[int] = Field(
        None, alias='bidSize', description='Number of shares for bid', examples=[300]
    )
    close_price: Optional[float] = Field(
        None,
        alias='closePrice',
        description="Previous day's closing price",
        examples=[126.27],
    )
    delta: Optional[float] = Field(None, description='Delta Value', examples=[-0.0407])
    gamma: Optional[float] = Field(None, description='Gamma Value', examples=[0.0001])
    high_price: Optional[float] = Field(
        None, alias='highPrice', description="Day's high trade price", examples=[126.99]
    )
    ind_ask_price: Optional[float] = Field(
        None,
        alias='indAskPrice',
        description='Indicative Ask Price applicable only for Indicative Option Symbols',
        examples=[126.99],
    )
    ind_bid_price: Optional[float] = Field(
        None,
        alias='indBidPrice',
        description='Indicative Bid Price applicable only for Indicative Option Symbols',
        examples=[126.99],
    )
    ind_quote_time: Optional[int] = Field(
        None,
        alias='indQuoteTime',
        description='Indicative Quote Time in milliseconds since Epoch applicable only for Indicative Option Symbols',
        examples=[126.99],
    )
    implied_yield: Optional[float] = Field(
        None, alias='impliedYield', description='Implied Yield', examples=[-0.0067]
    )
    last_price: Optional[float] = Field(None, alias='lastPrice', examples=[122.3])
    last_size: Optional[int] = Field(
        None,
        alias='lastSize',
        description='Number of shares traded with last trade',
        examples=[100],
    )
    low_price: Optional[float] = Field(
        None, alias='lowPrice', description="Day's low trade price", examples=[52.74]
    )
    mark: Optional[float] = Field(None, description='Mark price', examples=[52.93])
    mark_change: Optional[float] = Field(
        None, alias='markChange', description='Mark Price change', examples=[-0.01]
    )
    mark_percent_change: Optional[float] = Field(
        None,
        alias='markPercentChange',
        description='Mark Price percent change',
        examples=[-0.0189],
    )
    money_intrinsic_value: Optional[float] = Field(
        None,
        alias='moneyIntrinsicValue',
        description='Money Intrinsic Value',
        examples=[-947.96],
    )
    net_change: Optional[float] = Field(
        None, alias='netChange', description='Current Last-Prev Close', examples=[-0.04]
    )
    net_percent_change: Optional[float] = Field(
        None,
        alias='netPercentChange',
        description='Net Percentage Change',
        examples=[-0.0756],
    )
    open_interest: Optional[float] = Field(
        None, alias='openInterest', description='Open Interest', examples=[317]
    )
    open_price: Optional[float] = Field(
        None, alias='openPrice', description='Price at market open', examples=[52.8]
    )
    quote_time: Optional[int] = Field(
        None,
        alias='quoteTime',
        description='Last quote time in milliseconds since Epoch',
        examples=[1621376892336],
    )
    rho: Optional[float] = Field(None, description='Rho Value', examples=[-0.3732])
    security_status: Optional[str] = Field(
        None,
        alias='securityStatus',
        description='Status of security',
        examples=['Normal'],
    )
    theoretical_option_value: Optional[float] = Field(
        None,
        alias='theoreticalOptionValue',
        description='Theoretical option Value',
        examples=[12.275],
    )
    theta: Optional[float] = Field(None, description='Theta Value', examples=[-0.315])
    time_value: Optional[float] = Field(
        None, alias='timeValue', description='Time Value', examples=[12.22]
    )
    total_volume: Optional[int] = Field(
        None,
        alias='totalVolume',
        description='Aggregated shares traded throughout the day, including pre/post market hours.',
        examples=[20171188],
    )
    trade_time: Optional[int] = Field(
        None,
        alias='tradeTime',
        description='Last trade time in milliseconds since Epoch',
        examples=[1621376731304],
    )
    underlying_price: Optional[float] = Field(
        None,
        alias='underlyingPrice',
        description='Underlying Price',
        examples=[3247.96],
    )
    vega: Optional[float] = Field(None, description='Vega Value', examples=[1.4455])
    volatility: Optional[float] = Field(
        None, description='Option Risk/Volatility Measurement', examples=[0.0094]
    )


class Ssid(RootModel[int]):
    root: int = Field(..., ge=1, le=9999999999)


class Realtime(Enum):
    """
    Get realtime quotes and skip entitlement check
    """

    boolean_true = True
    boolean_false = False


class Indicative(Enum):
    """
    Include indicative symbol quotes for all ETF symbols in request. If ETF symbol ABC is in request and indicative=true API will return quotes for ABC and its corresponding indicative quote for $ABC.IV
    """

    boolean_true = True
    boolean_false = False


class QuoteRequest(BaseModel):
    """
    Request one or more quote data in POST body
    """

    cusips: Optional[List[str]] = Field(
        None,
        description='List of cusip, max of 500 of symbols+cusip+ssids',
        examples=[[808524680, 594918104]],
    )
    fields: Optional[str] = Field(
        None,
        description='comma separated list of nodes in each quote<br/> possible values are quote,fundamental,reference,extended,regular. Dont send this attribute for full response.',
        examples=['quote,reference'],
    )
    ssids: Optional[List[Ssid]] = Field(
        None,
        description='List of Schwab securityid[SSID], max of 500 of symbols+cusip+ssids',
        examples=[[1516105793, 34621523]],
    )
    symbols: Optional[List[str]] = Field(
        None,
        description='List of symbols, max of 500 of symbols+cusip+ssids',
        examples=[
            [
                'MRAD',
                'EATOF',
                'EBIZ',
                'AAPL',
                'BAC',
                'AAAHX',
                'AAAIX',
                '$DJI',
                '$SPX',
                'MVEN',
                'SOBS',
                'TOITF',
                'CNSWF',
                'AMZN  230317C01360000',
                'DJX   231215C00290000',
                '/ESH23',
                './ADUF23C0.55',
                'AUD/CAD',
            ]
        ],
    )
    realtime: Optional[Realtime] = Field(
        None,
        description='Get realtime quotes and skip entitlement check',
        examples=[True],
    )
    indicative: Optional[Indicative] = Field(
        None,
        description='Include indicative symbol quotes for all ETF symbols in request. If ETF symbol ABC is in request and indicative=true API will return quotes for ABC and its corresponding indicative quote for $ABC.IV',
        examples=[True],
    )


class ReferenceEquity(BaseModel):
    """
    Reference data of Equity security
    """

    cusip: Optional[str] = Field(
        None, description='CUSIP of Instrument', examples=['A23456789']
    )
    description: Optional[str] = Field(
        None,
        description='Description of Instrument',
        examples=['Apple Inc. - Common Stock'],
    )
    exchange: Optional[str] = Field(None, description='Exchange Code', examples=['q'])
    exchange_name: Optional[str] = Field(
        None, alias='exchangeName', description='Exchange Name'
    )
    fsi_desc: Optional[str] = Field(
        None, alias='fsiDesc', description='FSI Desc', max_length=50
    )
    htb_quantity: Optional[int] = Field(
        None,
        alias='htbQuantity',
        description='Hard to borrow quantity.',
        examples=[100],
    )
    htb_rate: Optional[float] = Field(
        None, alias='htbRate', description='Hard to borrow rate.', examples=[4.5]
    )
    is_hard_to_borrow: Optional[bool] = Field(
        None,
        alias='isHardToBorrow',
        description='is Hard to borrow security.',
        examples=[False],
    )
    is_shortable: Optional[bool] = Field(
        None,
        alias='isShortable',
        description='is shortable security.',
        examples=[False],
    )
    otc_market_tier: Optional[str] = Field(
        None, alias='otcMarketTier', description='OTC Market Tier', max_length=10
    )


class ReferenceForex(BaseModel):
    """
    Reference data of Forex security
    """

    description: Optional[str] = Field(
        None, description='Description of Instrument', examples=['Euro/USDollar Spot']
    )
    exchange: Optional[str] = Field(None, description='Exchange Code', examples=['q'])
    exchange_name: Optional[str] = Field(
        None, alias='exchangeName', description='Exchange Name'
    )
    is_tradable: Optional[bool] = Field(
        None, alias='isTradable', description='is FOREX tradable', examples=[True]
    )
    market_maker: Optional[str] = Field(
        None, alias='marketMaker', description='Market marker'
    )
    product: Optional[str] = Field(None, description='Product name', examples=[None])
    trading_hours: Optional[str] = Field(
        None, alias='tradingHours', description='Trading hours'
    )


class ReferenceFuture(BaseModel):
    """
    Reference data of Future security
    """

    description: Optional[str] = Field(
        None,
        description='Description of Instrument',
        examples=['E-mini S&P 500 Index Futures,Jun-2021,ETH'],
    )
    exchange: Optional[str] = Field(None, description='Exchange Code', examples=['q'])
    exchange_name: Optional[str] = Field(
        None, alias='exchangeName', description='Exchange Name'
    )
    future_active_symbol: Optional[str] = Field(
        None,
        alias='futureActiveSymbol',
        description='Active symbol',
        examples=['/ESM21'],
    )
    future_expiration_date: Optional[float] = Field(
        None,
        alias='futureExpirationDate',
        description='Future expiration date in milliseconds since epoch',
        examples=[1623988800000],
    )
    future_is_active: Optional[bool] = Field(
        None, alias='futureIsActive', description='Future is active', examples=[True]
    )
    future_multiplier: Optional[float] = Field(
        None, alias='futureMultiplier', description='Future multiplier', examples=[50]
    )
    future_price_format: Optional[str] = Field(
        None, alias='futurePriceFormat', description='Price format', examples=['D,D']
    )
    future_settlement_price: Optional[float] = Field(
        None,
        alias='futureSettlementPrice',
        description='Future Settlement Price',
        examples=[4123],
    )
    future_trading_hours: Optional[str] = Field(
        None,
        alias='futureTradingHours',
        description='Trading Hours',
        examples=[
            'GLBX(de=1640;0=-1700151515301600;1=r-17001515r15301600d-15551640;7=d-16401555)'
        ],
    )
    product: Optional[str] = Field(
        None, description='Futures product symbol', examples=['/ES']
    )


class ReferenceIndex(BaseModel):
    """
    Reference data of Index security
    """

    description: Optional[str] = Field(
        None,
        description='Description of Instrument',
        examples=['DOW JONES 30 INDUSTRIALS'],
    )
    exchange: Optional[str] = Field(None, description='Exchange Code', examples=['q'])
    exchange_name: Optional[str] = Field(
        None, alias='exchangeName', description='Exchange Name'
    )


class ReferenceMutualFund(BaseModel):
    """
    Reference data of MutualFund security
    """

    cusip: Optional[str] = Field(
        None, description='CUSIP of Instrument', examples=['A23456789']
    )
    description: Optional[str] = Field(
        None,
        description='Description of Instrument',
        examples=['Apple Inc. - Common Stock'],
    )
    exchange: Optional[str] = Field('m', description='Exchange Code')
    exchange_name: Optional[str] = Field(
        'MUTUAL_FUND', alias='exchangeName', description='Exchange Name'
    )


class RegularMarket(BaseModel):
    """
    Market info of security
    """

    regular_market_last_price: Optional[float] = Field(
        None,
        alias='regularMarketLastPrice',
        description='Regular market last price',
        examples=[124.85],
    )
    regular_market_last_size: Optional[int] = Field(
        None,
        alias='regularMarketLastSize',
        description='Regular market last size',
        examples=[51771],
    )
    regular_market_net_change: Optional[float] = Field(
        None,
        alias='regularMarketNetChange',
        description='Regular market net change',
        examples=[-1.42],
    )
    regular_market_percent_change: Optional[float] = Field(
        None,
        alias='regularMarketPercentChange',
        description='Regular market percent change',
        examples=[-1.1246],
    )
    regular_market_trade_time: Optional[int] = Field(
        None,
        alias='regularMarketTradeTime',
        description='Regular market trade time in milliseconds since Epoch',
        examples=[1621368000400],
    )


class AssetMainType(Enum):
    """
    Instrument's asset type
    """

    bond = 'BOND'
    equity = 'EQUITY'
    forex = 'FOREX'
    future = 'FUTURE'
    future_option = 'FUTURE_OPTION'
    index = 'INDEX'
    mutual_fund = 'MUTUAL_FUND'
    option = 'OPTION'


class EquityAssetSubTypeEnum(Enum):
    """
    Asset Sub Type (only there if applicable)
    """

    coe = 'COE'
    prf = 'PRF'
    adr = 'ADR'
    gdr = 'GDR'
    cef = 'CEF'
    etf = 'ETF'
    etn = 'ETN'
    uit = 'UIT'
    war = 'WAR'
    rgt = 'RGT'


class EquityAssetSubType(RootModel[Optional[EquityAssetSubTypeEnum]]):
    root: Optional[EquityAssetSubTypeEnum] = Field(
        None, description='Asset Sub Type (only there if applicable)'
    )


class MutualFundAssetSubTypeEnum(Enum):
    """
    Asset Sub Type (only there if applicable)
    """

    oef = 'OEF'
    cef = 'CEF'
    mmf = 'MMF'


class MutualFundAssetSubType(RootModel[Optional[MutualFundAssetSubTypeEnum]]):
    root: Optional[MutualFundAssetSubTypeEnum] = Field(
        None, description='Asset Sub Type (only there if applicable)'
    )


class ContractType(Enum):
    """
    Indicates call or put
    """

    p = 'P'
    c = 'C'


class SettlementType(Enum):
    """
    option contract settlement type AM or PM
    """

    a = 'A'
    p = 'P'


class ExpirationType(Enum):
    """
    M for End Of Month Expiration Calendar Cycle. (To match the last business day of the month), Q for Quarterly expirations (last business day of the quarter month MAR/JUN/SEP/DEC), W for Weekly expiration (also called Friday Short Term Expirations) and S for Expires 3rd Friday of the month (also known as regular options).
    """

    m = 'M'
    q = 'Q'
    s = 'S'
    w = 'W'


class FundStrategyEnum(Enum):
    """
    FundStrategy "A" - Active "L" - Leveraged "P" - Passive "Q" - Quantitative "S" - Short
    """

    a = 'A'
    l = 'L'
    p = 'P'
    q = 'Q'
    s = 'S'


class FundStrategy(RootModel[Optional[FundStrategyEnum]]):
    root: Optional[FundStrategyEnum] = Field(
        None,
        description='FundStrategy "A" - Active "L" - Leveraged "P" - Passive "Q" - Quantitative "S" - Short',
    )


class ExerciseType(Enum):
    """
    option contract exercise type America or European
    """

    a = 'A'
    e = 'E'


class DivFreq(Enum):
    """
    Dividend frequency 1 – once a year or annually 2 – 2x a year or semi-annualy 3 - 3x a year (ex. ARCO, EBRPF) 4 – 4x a year or quarterly 6 - 6x per yr or every other month 11 – 11x a year (ex. FBND, FCOR) 12 – 12x a year or monthly
    """

    integer_1 = 1
    integer_2 = 2
    integer_3 = 3
    integer_4 = 4
    integer_6 = 6
    integer_11 = 11
    integer_12 = 12
    integer_none = None


class QuoteTypeEnum(Enum):
    """
    NBBO - realtime, NFL - Non-fee liable quote.
    """

    nbbo = 'NBBO'
    nfl = 'NFL'


class QuoteType(RootModel[Optional[QuoteTypeEnum]]):
    root: Optional[QuoteTypeEnum] = Field(
        None, description='NBBO - realtime, NFL - Non-fee liable quote.'
    )


class Status(Enum):
    """
    The HTTP status code .
    """

    field_400 = '400'
    field_401 = '401'
    field_404 = '404'
    field_500 = '500'


class ErrorSource(BaseModel):
    """
    Who is responsible for triggering these errors.
    """

    pointer: Optional[List[str]] = Field(
        None,
        description='list of attributes which lead to this error message.',
        examples=[
            [
                '/data/attributes/symbols',
                '/data/attributes/cusips',
                '/data/attributes/ssids',
            ]
        ],
    )
    parameter: Optional[str] = Field(
        None,
        description='parameter name which lead to this error message.',
        examples=['fields'],
    )
    header: Optional[str] = Field(
        None,
        description='header name which lead to this error message.',
        examples=['Schwab-Client-CorrelId'],
    )


class Strategy(Enum):
    single = 'SINGLE'
    analytical = 'ANALYTICAL'
    covered = 'COVERED'
    vertical = 'VERTICAL'
    calendar = 'CALENDAR'
    strangle = 'STRANGLE'
    straddle = 'STRADDLE'
    butterfly = 'BUTTERFLY'
    condor = 'CONDOR'
    diagonal = 'DIAGONAL'
    collar = 'COLLAR'
    roll = 'ROLL'


class ExchangeName(Enum):
    ind = 'IND'
    ase = 'ASE'
    nys = 'NYS'
    nas = 'NAS'
    nap = 'NAP'
    pac = 'PAC'
    opr = 'OPR'
    bats = 'BATS'


class Underlying(BaseModel):
    ask: Optional[float] = None
    ask_size: Optional[int] = Field(None, alias='askSize')
    bid: Optional[float] = None
    bid_size: Optional[int] = Field(None, alias='bidSize')
    change: Optional[float] = None
    close: Optional[float] = None
    delayed: Optional[bool] = None
    description: Optional[str] = None
    exchange_name: Optional[ExchangeName] = Field(None, alias='exchangeName')
    fifty_two_week_high: Optional[float] = Field(None, alias='fiftyTwoWeekHigh')
    fifty_two_week_low: Optional[float] = Field(None, alias='fiftyTwoWeekLow')
    high_price: Optional[float] = Field(None, alias='highPrice')
    last: Optional[float] = None
    low_price: Optional[float] = Field(None, alias='lowPrice')
    mark: Optional[float] = None
    mark_change: Optional[float] = Field(None, alias='markChange')
    mark_percent_change: Optional[float] = Field(None, alias='markPercentChange')
    open_price: Optional[float] = Field(None, alias='openPrice')
    percent_change: Optional[float] = Field(None, alias='percentChange')
    quote_time: Optional[int] = Field(None, alias='quoteTime')
    symbol: Optional[str] = None
    total_volume: Optional[int] = Field(None, alias='totalVolume')
    trade_time: Optional[int] = Field(None, alias='tradeTime')


class OptionDeliverables(BaseModel):
    symbol: Optional[str] = None
    asset_type: Optional[str] = Field(None, alias='assetType')
    deliverable_units: Optional[str] = Field(None, alias='deliverableUnits')
    currency_type: Optional[str] = Field(None, alias='currencyType')


class PutCall(Enum):
    put = 'PUT'
    call = 'CALL'


class OptionContract(BaseModel):
    put_call: Optional[PutCall] = Field(None, alias='putCall')
    symbol: Optional[str] = None
    description: Optional[str] = None
    exchange_name: Optional[str] = Field(None, alias='exchangeName')
    bid_price: Optional[float] = Field(None, alias='bidPrice')
    ask_price: Optional[float] = Field(None, alias='askPrice')
    last_price: Optional[float] = Field(None, alias='lastPrice')
    mark_price: Optional[float] = Field(None, alias='markPrice')
    bid_size: Optional[int] = Field(None, alias='bidSize')
    ask_size: Optional[int] = Field(None, alias='askSize')
    last_size: Optional[int] = Field(None, alias='lastSize')
    high_price: Optional[float] = Field(None, alias='highPrice')
    low_price: Optional[float] = Field(None, alias='lowPrice')
    open_price: Optional[float] = Field(None, alias='openPrice')
    close_price: Optional[float] = Field(None, alias='closePrice')
    total_volume: Optional[int] = Field(None, alias='totalVolume')
    trade_date: Optional[float] = Field(None, alias='tradeDate')
    quote_time_in_long: Optional[int] = Field(None, alias='quoteTimeInLong')
    trade_time_in_long: Optional[int] = Field(None, alias='tradeTimeInLong')
    net_change: Optional[float] = Field(None, alias='netChange')
    volatility: Optional[float] = None
    delta: Optional[float] = None
    gamma: Optional[float] = None
    theta: Optional[float] = None
    vega: Optional[float] = None
    rho: Optional[float] = None
    time_value: Optional[float] = Field(None, alias='timeValue')
    open_interest: Optional[float] = Field(None, alias='openInterest')
    is_in_the_money: Optional[bool] = Field(None, alias='isInTheMoney')
    theoretical_option_value: Optional[float] = Field(
        None, alias='theoreticalOptionValue'
    )
    theoretical_volatility: Optional[float] = Field(None, alias='theoreticalVolatility')
    is_mini: Optional[bool] = Field(None, alias='isMini')
    is_non_standard: Optional[bool] = Field(None, alias='isNonStandard')
    option_deliverables_list: Optional[List[OptionDeliverables]] = Field(
        None, alias='optionDeliverablesList'
    )
    strike_price: Optional[float] = Field(None, alias='strikePrice')
    expiration_date: Optional[str] = Field(None, alias='expirationDate')
    days_to_expiration: Optional[float] = Field(None, alias='daysToExpiration')
    expiration_type: Optional[ExpirationType] = Field(None, alias='expirationType')
    last_trading_day: Optional[float] = Field(None, alias='lastTradingDay')
    multiplier: Optional[float] = None
    settlement_type: Optional[SettlementType] = Field(None, alias='settlementType')
    deliverable_note: Optional[str] = Field(None, alias='deliverableNote')
    is_index_option: Optional[bool] = Field(None, alias='isIndexOption')
    percent_change: Optional[float] = Field(None, alias='percentChange')
    mark_change: Optional[float] = Field(None, alias='markChange')
    mark_percent_change: Optional[float] = Field(None, alias='markPercentChange')
    is_penny_pilot: Optional[bool] = Field(None, alias='isPennyPilot')
    intrinsic_value: Optional[float] = Field(None, alias='intrinsicValue')
    option_root: Optional[str] = Field(None, alias='optionRoot')


class Expiration(BaseModel):
    """
    expiration type
    """

    days_to_expiration: Optional[int] = Field(None, alias='daysToExpiration')
    expiration: Optional[str] = None
    expiration_type: Optional[ExpirationType] = Field(None, alias='expirationType')
    standard: Optional[bool] = None
    settlement_type: Optional[SettlementType] = Field(None, alias='settlementType')
    option_roots: Optional[str] = Field(None, alias='optionRoots')


class Hours(BaseModel):
    date: Optional[str] = None
    market_type: Optional[AssetType] = Field(None, alias='marketType')
    exchange: Optional[str] = None
    category: Optional[str] = None
    product: Optional[str] = None
    product_name: Optional[str] = Field(None, alias='productName')
    is_open: Optional[bool] = Field(None, alias='isOpen')
    session_hours: Optional[Dict[str, List[Interval]]] = Field(
        None, alias='sessionHours'
    )


class ForexResponse(BaseModel):
    """
    Quote info of Forex security
    """

    asset_main_type: Optional[AssetMainType] = Field(None, alias='assetMainType')
    ssid: Optional[int] = Field(
        None, description='SSID of instrument', examples=[1234567890]
    )
    symbol: Optional[str] = Field(
        None, description='Symbol of instrument', examples=['AAPL']
    )
    realtime: Optional[bool] = Field(
        None, description='is quote realtime', examples=[True]
    )
    quote: Optional[QuoteForex] = None
    reference: Optional[ReferenceForex] = None


class Fundamental(BaseModel):
    """
    Fundamentals of a security
    """

    avg10_days_volume: Optional[float] = Field(
        None, alias='avg10DaysVolume', description='Average 10 day volume'
    )
    avg1_year_volume: Optional[float] = Field(
        None, alias='avg1YearVolume', description='Average 1 day volume'
    )
    declaration_date: Optional[datetime_aliased] = Field(
        None,
        alias='declarationDate',
        description='Declaration date in yyyy-mm-ddThh:mm:ssZ',
        examples=['2021-04-28T00:00:00Z'],
        pattern="yyyy-MM-dd'T'HH:mm:ssZ",
    )
    div_amount: Optional[float] = Field(
        None, alias='divAmount', description='Dividend Amount', examples=[0.88]
    )
    div_ex_date: Optional[str] = Field(
        None,
        alias='divExDate',
        description='Dividend date in yyyy-mm-ddThh:mm:ssZ',
        examples=['2021-05-07T00:00:00Z'],
    )
    div_freq: Optional[DivFreq] = Field(None, alias='divFreq')
    div_pay_amount: Optional[float] = Field(
        None, alias='divPayAmount', description='Dividend Pay Amount', examples=[0.22]
    )
    div_pay_date: Optional[datetime_aliased] = Field(
        None,
        alias='divPayDate',
        description='Dividend pay date in yyyy-mm-ddThh:mm:ssZ',
        examples=['2021-05-13T00:00:00Z'],
        pattern="yyyy-MM-dd'T'HH:mm:ssZ",
    )
    div_yield: Optional[float] = Field(
        None, alias='divYield', description='Dividend yield', examples=[0.7]
    )
    eps: Optional[float] = Field(
        None, description='Earnings per Share', examples=[4.45645]
    )
    fund_leverage_factor: Optional[float] = Field(
        None,
        alias='fundLeverageFactor',
        description='Fund Leverage Factor + > 0 <-',
        examples=[-1],
    )
    fund_strategy: Optional[FundStrategy] = Field(None, alias='fundStrategy')
    next_div_ex_date: Optional[datetime_aliased] = Field(
        None,
        alias='nextDivExDate',
        description='Next Dividend date',
        examples=['2021-02-12T00:00:00Z'],
        pattern="yyyy-MM-dd'T'HH:mm:ssZ",
    )
    next_div_pay_date: Optional[datetime_aliased] = Field(
        None,
        alias='nextDivPayDate',
        description='Next Dividend pay date',
        examples=['2021-02-12T00:00:00Z'],
        pattern="yyyy-MM-dd'T'HH:mm:ssZ",
    )
    pe_ratio: Optional[float] = Field(
        None, alias='peRatio', description='P/E Ratio', examples=[28.599]
    )


class FutureResponse(BaseModel):
    """
    Quote info of Future security
    """

    asset_main_type: Optional[AssetMainType] = Field(None, alias='assetMainType')
    ssid: Optional[int] = Field(
        None, description='SSID of instrument', examples=[1234567890]
    )
    symbol: Optional[str] = Field(
        None, description='Symbol of instrument', examples=['AAPL']
    )
    realtime: Optional[bool] = Field(
        None, description='is quote realtime', examples=[True]
    )
    quote: Optional[QuoteFuture] = None
    reference: Optional[ReferenceFuture] = None


class IndexResponse(BaseModel):
    """
    Quote info of Index security
    """

    asset_main_type: Optional[AssetMainType] = Field(None, alias='assetMainType')
    ssid: Optional[int] = Field(
        None, description='SSID of instrument', examples=[1234567890]
    )
    symbol: Optional[str] = Field(
        None, description='Symbol of instrument', examples=['AAPL']
    )
    realtime: Optional[bool] = Field(
        None, description='is quote realtime', examples=[True]
    )
    quote: Optional[QuoteIndex] = None
    reference: Optional[ReferenceIndex] = None


class MutualFundResponse(BaseModel):
    """
    Quote info of MutualFund security
    """

    asset_main_type: Optional[AssetMainType] = Field(None, alias='assetMainType')
    asset_sub_type: Optional[MutualFundAssetSubType] = Field(None, alias='assetSubType')
    ssid: Optional[int] = Field(
        None, description='SSID of instrument', examples=[1234567890]
    )
    symbol: Optional[str] = Field(
        None, description='Symbol of instrument', examples=['AAPL']
    )
    realtime: Optional[bool] = Field(
        None, description='is quote realtime', examples=[True]
    )
    fundamental: Optional[Fundamental] = None
    quote: Optional[QuoteMutualFund] = None
    reference: Optional[ReferenceMutualFund] = None


class ReferenceFutureOption(BaseModel):
    """
    Reference data of Future Option security
    """

    contract_type: Optional[ContractType] = Field(None, alias='contractType')
    description: Optional[str] = Field(
        None,
        description='Description of Instrument',
        examples=['AMZN Aug 20 2021 2300 Put'],
    )
    exchange: Optional[str] = Field(None, description='Exchange Code', examples=['q'])
    exchange_name: Optional[str] = Field(
        None, alias='exchangeName', description='Exchange Name'
    )
    multiplier: Optional[float] = Field(
        None, description='Option multiplier', examples=[100]
    )
    expiration_date: Optional[int] = Field(
        None, alias='expirationDate', description='date of expiration in long'
    )
    expiration_style: Optional[str] = Field(
        None, alias='expirationStyle', description='Style of expiration'
    )
    strike_price: Optional[float] = Field(
        None, alias='strikePrice', description='Strike Price', examples=[2300]
    )
    underlying: Optional[str] = Field(
        None,
        description='A company, index or fund name',
        examples=['AMZN Aug 20 2021 2300 Put'],
    )


class ReferenceOption(BaseModel):
    """
    Reference data of Option security
    """

    contract_type: Optional[ContractType] = Field(None, alias='contractType')
    cusip: Optional[str] = Field(
        None, description='CUSIP of Instrument', examples=['0AMZN.TK12300000']
    )
    days_to_expiration: Optional[int] = Field(
        None, alias='daysToExpiration', description='Days to Expiration', examples=[94]
    )
    deliverables: Optional[str] = Field(
        None,
        description='Unit of trade',
        examples=['$6024.37 cash in lieu of shares, 212 shares of AZN'],
    )
    description: Optional[str] = Field(
        None,
        description='Description of Instrument',
        examples=['AMZN Aug 20 2021 2300 Put'],
    )
    exchange: Optional[str] = Field('o', description='Exchange Code')
    exchange_name: Optional[str] = Field(
        None, alias='exchangeName', description='Exchange Name'
    )
    exercise_type: Optional[ExerciseType] = Field(None, alias='exerciseType')
    expiration_day: Optional[int] = Field(
        None,
        alias='expirationDay',
        description='Expiration Day',
        examples=[20],
        ge=1,
        le=31,
    )
    expiration_month: Optional[int] = Field(
        None,
        alias='expirationMonth',
        description='Expiration Month',
        examples=[8],
        ge=1,
        le=12,
    )
    expiration_type: Optional[ExpirationType] = Field(None, alias='expirationType')
    expiration_year: Optional[int] = Field(
        None, alias='expirationYear', description='Expiration Year', examples=[2021]
    )
    is_penny_pilot: Optional[bool] = Field(
        None,
        alias='isPennyPilot',
        description='Is this contract part of the Penny Pilot program',
        examples=[True],
    )
    last_trading_day: Optional[int] = Field(
        None,
        alias='lastTradingDay',
        description='milliseconds since epoch',
        examples=[1629504000000],
    )
    multiplier: Optional[float] = Field(
        None, description='Option multiplier', examples=[100]
    )
    settlement_type: Optional[SettlementType] = Field(None, alias='settlementType')
    strike_price: Optional[float] = Field(
        None, alias='strikePrice', description='Strike Price', examples=[2300]
    )
    underlying: Optional[str] = Field(
        None,
        description='A company, index or fund name',
        examples=['AMZN Aug 20 2021 2300 Put'],
    )


class Error(BaseModel):
    id: Optional[UUID] = Field(
        None,
        description='Unique error id.',
        examples=['9821320c-8500-4edf-bd46-a9299c13d2e0'],
    )
    status: Optional[Status] = Field(
        None, description='The HTTP status code .', examples=['400']
    )
    title: Optional[str] = Field(
        None, description='Short error description.', examples=['Missing header']
    )
    detail: Optional[str] = Field(
        None,
        description='Detailed error description.',
        examples=['Search combination should not exceed 500.'],
    )
    source: Optional[ErrorSource] = None


class OptionContractMap(RootModel[Optional[Dict[str, OptionContract]]]):
    root: Optional[Dict[str, OptionContract]] = None


class ExpirationChain(BaseModel):
    status: Optional[str] = None
    expiration_list: Optional[List[Expiration]] = Field(None, alias='expirationList')


class EquityResponse(BaseModel):
    """
    Quote info of Equity security
    """

    asset_main_type: Optional[AssetMainType] = Field(None, alias='assetMainType')
    asset_sub_type: Optional[EquityAssetSubType] = Field(None, alias='assetSubType')
    ssid: Optional[int] = Field(
        None, description='SSID of instrument', examples=[1234567890]
    )
    symbol: Optional[str] = Field(
        None, description='Symbol of instrument', examples=['AAPL']
    )
    realtime: Optional[bool] = Field(
        None, description='is quote realtime', examples=[True]
    )
    quote_type: Optional[QuoteType] = Field(None, alias='quoteType')
    extended: Optional[ExtendedMarket] = None
    fundamental: Optional[Fundamental] = None
    quote: Optional[QuoteEquity] = None
    reference: Optional[ReferenceEquity] = None
    regular: Optional[RegularMarket] = None


class FutureOptionResponse(BaseModel):
    """
    Quote info of Future Option security
    """

    asset_main_type: Optional[AssetMainType] = Field(None, alias='assetMainType')
    ssid: Optional[int] = Field(
        None, description='SSID of instrument', examples=[1234567890]
    )
    symbol: Optional[str] = Field(
        None, description='Symbol of instrument', examples=['AAPL']
    )
    realtime: Optional[bool] = Field(
        None, description='is quote realtime', examples=[True]
    )
    quote: Optional[QuoteFutureOption] = None
    reference: Optional[ReferenceFutureOption] = None


class OptionResponse(BaseModel):
    """
    Quote info of Option security
    """

    asset_main_type: Optional[AssetMainType] = Field(None, alias='assetMainType')
    ssid: Optional[int] = Field(
        None, description='SSID of instrument', examples=[1234567890]
    )
    symbol: Optional[str] = Field(
        None, description='Symbol of instrument', examples=['AAPL']
    )
    realtime: Optional[bool] = Field(
        None, description='is quote realtime', examples=[True]
    )
    quote: Optional[QuoteOption] = None
    reference: Optional[ReferenceOption] = None


class QuoteResponseObject(
    RootModel[
        Union[
            EquityResponse,
            OptionResponse,
            ForexResponse,
            FutureResponse,
            FutureOptionResponse,
            IndexResponse,
            MutualFundResponse,
            QuoteError,
        ]
    ]
):
    root: Union[
        EquityResponse,
        OptionResponse,
        ForexResponse,
        FutureResponse,
        FutureOptionResponse,
        IndexResponse,
        MutualFundResponse,
        QuoteError,
    ]


class ErrorResponse(BaseModel):
    errors: Optional[List[Error]] = None


class OptionChain(BaseModel):
    symbol: Optional[str] = None
    status: Optional[str] = None
    underlying: Optional[Underlying] = None
    strategy: Optional[Strategy] = None
    interval: Optional[float] = None
    is_delayed: Optional[bool] = Field(None, alias='isDelayed')
    is_index: Optional[bool] = Field(None, alias='isIndex')
    days_to_expiration: Optional[float] = Field(None, alias='daysToExpiration')
    interest_rate: Optional[float] = Field(None, alias='interestRate')
    underlying_price: Optional[float] = Field(None, alias='underlyingPrice')
    volatility: Optional[float] = None
    call_exp_date_map: Optional[Dict[str, OptionContractMap]] = Field(
        None, alias='callExpDateMap'
    )
    put_exp_date_map: Optional[Dict[str, OptionContractMap]] = Field(
        None, alias='putExpDateMap'
    )


class QuoteResponse(RootModel[Optional[Dict[str, QuoteResponseObject]]]):
    """
    a (symbol, QuoteResponse) map. `SCHW`is an example key
    """

    root: Optional[Dict[str, QuoteResponseObject]] = None
    
# Alias for generic quote data (equity) to satisfy legacy code/tests
QuoteData = EquityResponse
