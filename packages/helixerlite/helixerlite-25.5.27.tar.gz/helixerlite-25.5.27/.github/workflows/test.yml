name: Test Source

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test on ${{ matrix.os }} with Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4

    - name: Set up conda
      uses: conda-incubator/setup-miniconda@v3
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
        channels: conda-forge
        channel-priority: strict

    - name: Install dependencies
      shell: bash -el {0}
      run: |
        if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
          conda install -c conda-forge "hdf5=1.12.2=nompi*" rust maturin gxx_linux-64
        else
          conda install -c conda-forge "hdf5=1.12.2=nompi*" rust maturin
        fi
        python -m pip install --upgrade pip
        python -m pip install pytest pytest-cov

        # Build the Rust code first
        export HDF5_DIR=$CONDA_PREFIX
        if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
          export CARGO_TARGET_X86_64_UNKNOWN_LINUX_GNU_LINKER=$CONDA_PREFIX/bin/x86_64-conda-linux-gnu-gcc
          export RUSTFLAGS="-C linker=$CONDA_PREFIX/bin/x86_64-conda-linux-gnu-gcc"
        fi
        maturin develop --release

        # Install dev dependencies
        python -m pip install -e ".[dev]"

    - name: Run tests
      shell: bash -el {0}
      run: |
        # Run the tests
        python -m pytest --cov=helixerlite

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        fail_ci_if_error: false
