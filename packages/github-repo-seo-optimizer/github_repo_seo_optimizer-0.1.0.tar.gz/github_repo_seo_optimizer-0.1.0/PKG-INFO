Metadata-Version: 2.4
Name: github-repo-seo-optimizer
Version: 0.1.0
Summary: A tool to optimize GitHub repositories for better discoverability through improved descriptions, topics, and documentation
Home-page: https://github.com/chenxingqiang/repo-seo
Author: Chen Xingqiang
Author-email: Chen Xingqiang <chenxingqiang@gmail.com>
Maintainer-email: Chen Xingqiang <chenxingqiang@gmail.com>
License: MIT License
        
        Copyright (c) 2024 Chen Xingqiang
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/chenxingqiang/repo-seo
Project-URL: Documentation, https://github.com/chenxingqiang/repo-seo#readme
Project-URL: Repository, https://github.com/chenxingqiang/repo-seo
Project-URL: Issues, https://github.com/chenxingqiang/repo-seo/issues
Keywords: github,seo,repository,optimization,llm,ai,automation,git,documentation
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Software Development :: Version Control :: Git
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: click>=8.0.0
Requires-Dist: requests>=2.25.0
Requires-Dist: pyyaml>=5.4.0
Requires-Dist: rich>=10.0.0
Requires-Dist: python-dotenv>=0.19.0
Provides-Extra: dev
Requires-Dist: pytest>=7.0.0; extra == "dev"
Requires-Dist: pytest-cov>=3.0.0; extra == "dev"
Requires-Dist: pytest-asyncio>=0.18.0; extra == "dev"
Requires-Dist: black>=22.0.0; extra == "dev"
Requires-Dist: isort>=5.10.0; extra == "dev"
Requires-Dist: flake8>=4.0.0; extra == "dev"
Requires-Dist: mypy>=0.950; extra == "dev"
Requires-Dist: pre-commit>=2.17.0; extra == "dev"
Provides-Extra: openai
Requires-Dist: openai>=1.0.0; extra == "openai"
Provides-Extra: anthropic
Requires-Dist: anthropic>=0.3.0; extra == "anthropic"
Provides-Extra: gemini
Requires-Dist: google-generativeai>=0.3.0; extra == "gemini"
Provides-Extra: all
Requires-Dist: openai>=1.0.0; extra == "all"
Requires-Dist: anthropic>=0.3.0; extra == "all"
Requires-Dist: google-generativeai>=0.3.0; extra == "all"
Dynamic: author
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-python

# GitHub Repository SEO Optimizer üîç [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT) [![Python 3.8+](https://img.shields.io/badge/Python-3.8%2B-blue.svg)](https://www.python.org/) [![Code Style: Black](https://img.shields.io/badge/Code%20Style-Black-000000.svg)](https://github.com/psf/black)

AI-powered toolkit to enhance GitHub repository visibility through automated SEO optimization of READMEs, metadata, and content.

![SEO Optimization Workflow](https://via.placeholder.com/800x400.png?text=SEO+Optimization+Process) *Example workflow visualization*

## Features ‚ú®

- **Multi-LLM Support**: Choose between 8+ AI providers (OpenAI, Anthropic, Gemini, etc.) or local rule-based engine
- **Automated SEO Analysis**: Comprehensive repository content evaluation
- **Smart Content Generation**: Optimized READMEs, descriptions, and topics
- **GitHub Integration**: Direct API interaction for seamless updates
- **Commit Message Optimization**: AI-generated conventional commit messages
- **Pre-commit Hooks**: Automatic optimization before commits
- **Multi-format Output**: Support for Markdown, JSON, and YAML
- **Custom Rules Engine**: Domain-specific optimization rules

## Installation ‚öôÔ∏è

### From PyPI (Recommended)

```bash
pip install repo-seo-optimizer
```

### From Source

```bash
git clone https://github.com/chenxingqiang/repo-seo.git
cd repo-seo
pip install -e .
```

### Development Installation

```bash
git clone https://github.com/chenxingqiang/repo-seo.git
cd repo-seo
pip install -e ".[dev]"
```

## Usage üöÄ

### Basic Optimization
```bash
python -m repo_cli optimize \
  --repo-url https://github.com/yourusername/your-repo \
  --provider openai \
  --update-readme \
  --auto-commit
```

### Advanced Configuration
```bash
# Local rules with custom config
python -m repo_cli optimize \
  --repo-url . \
  --provider local \
  --config-path seo-rules.yaml \
  --output-format markdown \
  --dry-run
```

### Pre-commit Hook
Add to `.pre-commit-config.yaml`:
```yaml
repos:
  - repo: https://github.com/yourusername/repo-seo
    rev: v0.1.0
    hooks:
      - id: repo-seo
        args: [--provider, local, --config-path, seo-rules.yaml]
```

## Configuration ‚öôÔ∏è

### Environment Variables
```bash
# .env file template
OPENAI_API_KEY=sk-your-key-here
GITHUB_TOKEN=ghp_your-token-here
ANTHROPIC_API_KEY=your-antropic-key
LOG_LEVEL=INFO
```

### Configuration File (seo-rules.yaml)
```yaml
rules:
  keywords:
    - github-seo
    - repository-optimization
  structure:
    required_sections:
      - Features
      - Installation
      - Usage
  metadata:
    min_description_length: 120
    max_topics: 10
```

## API Documentation üìö

### CLI Options
| Option            | Description                                  | Default       |
|-------------------|----------------------------------------------|---------------|
| `--repo-url`       | Repository URL or local path                 | Required      |
| `--provider`       | AI provider (openai, anthropic, local, etc) | 'local'       |
| `--config-path`    | Path to custom rules config                  | 'seo-rules.yaml' |
| `--output-format`  | Output format (markdown, json, yaml)         | 'markdown'    |
| `--update-readme`  | Automatically update README.md              | False         |
| `--auto-commit`    | Auto-commit changes with optimized message   | False         |

## Contributing ü§ù

We welcome contributions! Please follow these steps:
1. Fork the repository
2. Create your feature branch (`git checkout -b feature/amazing-feature`)
3. Commit your changes (`git commit -m 'Add some amazing feature'`)
4. Push to the branch (`git push origin feature/amazing-feature`)
5. Open a Pull Request

**Development Requirements:**
- Python 3.8+
- Black code formatting
- flake8 linting
- pytest for testing

## License üìÑ

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## Support & Community üí¨

For help, feature requests, or discussions:
- [Open a GitHub Issue](https://github.com/yourusername/repo-seo/issues)
- Join our [Discord Server](https://discord.gg/your-invite-link)

## Roadmap üó∫Ô∏è

- [ ] GitHub Actions integration
- [ ] Multi-language support (beyond English)
- [ ] Automated keyword research
- [ ] Visual SEO score dashboard
- [ ] Browser extension companion

---

[![Star History Chart](https://api.star-history.com/svg?repos=yourusername/repo-seo&type=Timeline)](https://star-history.com/#yourusername/repo-seo&Timeline)
```

This README includes:
1. Visual hierarchy with clear section headers
2. Multiple usage scenarios with code examples
3. Configuration details for different environments
4. API documentation in table format
5. Contribution guidelines with development requirements
6. Support channels and community links
7. Interactive roadmap and star history
8. Badges for quick project status overview
9. Visual placeholder for workflow diagram (replace with actual image)
10. Clear licensing and compliance information
