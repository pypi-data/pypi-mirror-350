[project]
name = "mccn-engine"
description = "mccn engine"
authors = [
    { name = "Joseph", email = "joseph.sclauzero@adelaide.edu.au" },
]
dependencies = [
    "odc-stac>=0.3.10",
    "pystac-generator>=0.4.0",
    "matplotlib>=3.10.1",
    "pystac-client>=0.8.6",
    "dask==2024.10.0",
    "scipy>=1.15.2",
]
requires-python = ">=3.11"
readme = "README.md"
dynamic = []
version = "0.1.15"

[project.license]
text = "MIT"

[tool.coverage.report]
exclude_also = [
    "def __repr__",
    "@(abc\\.)?abstractmethod",
    "def __getattr__",
    "if TYPE_CHECKING:",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.mccabe]
max-complexity = 12

[tool.ruff.lint.isort]
known-first-party = [
    "mccn",
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.*" = [
    "A",
    "ARG",
    "B",
    "BLE",
    "C901",
    "D",
    "DTZ",
    "EM",
    "FBT",
    "G",
    "N",
    "PGH",
    "PIE",
    "PLR",
    "PLW",
    "PTH",
    "RSE",
    "S",
    "S101",
    "SIM",
    "TCH",
    "TRY",
]

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 90

[tool.mypy]
packages = [
    "mccn",
]
python_version = "3.11"
disallow_any_generics = false
disallow_untyped_decorators = true
disallow_untyped_calls = true
enable_error_code = "ignore-without-code"
implicit_reexport = false
show_error_codes = true
strict = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = false

[[tool.mypy.overrides]]
module = "rasterio.*,tqdm.*,owslib.*,affine.*,geopandas.*,pandas.*"
ignore_missing_imports = true

[tool.pdm]
distribution = true

[tool.pdm.version]
source = "file"
path = "mccn/__version__.py"

[tool.pdm.dev-dependencies]
test = [
    "pytest>=8.3.3",
    "pytest-cov>=5.0.0",
]
analysis = [
    "mypy>=1.11.2",
    "ruff>=0.6.8",
    "pre-commit>=3.8.0",
]
jupyter = [
    "ipykernel>=6.29.5",
    "jupyter>=1.1.1",
]

[tool.pytest.ini_options]
filterwarnings = [
    "ignore::UserWarning",
    "ignore:.*deprecated.*:DeprecationWarning",
]

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[dependency-groups]
docs = [
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.5.39",
    "mkdocstrings-python>=1.11.1",
    "markdown-exec>=1.9.3",
    "mkdocs-version-annotations>=1.0.0",
    "mkdocs-autorefs>=1.2.0",
    "mkdocs-jupyter>=0.25.0",
    "mkdocs-table-reader-plugin>=3.1.0",
]
