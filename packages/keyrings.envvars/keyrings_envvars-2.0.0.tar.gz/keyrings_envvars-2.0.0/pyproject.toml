[build-system]
build-backend = "poetry_dynamic_versioning.backend"
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]

[project]
authors = [{email = "<wirelessduck+py@gmail.com>", name = "wwuck"}]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Typing :: Typed",
]
dependencies = [
  "keyring>=23.4.0",
]
description = "keyring backend plugin to retrieve credentials from environment variables."
dynamic = []
license = {text = "MIT"}
name = "keyrings.envvars"
readme = "README.rst"
requires-python = ">=3.9.0"
version = "2.0.0"

[project.entry-points."keyring.backends"]
envvars = "keyrings.envvars.keyring:EnvvarsKeyring"

[project.urls]
Documentation = "https://codeberg.org/wwuck/keyrings.envvars"
Repository = "https://codeberg.org/wwuck/keyrings.envvars"
Tracker = "https://codeberg.org/wwuck/keyrings.envvars/issues"

[tool.bandit.assert_used]
skips = [
  "*_test.py",
]

[tool.check-wheel-contents]
package = "src/keyrings"

[tool.mypy]
check_untyped_defs = true
disallow_any_decorated = true
disallow_any_explicit = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
implicit_reexport = true
namespace_packages = true
no_implicit_optional = true
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.numpydoc_validation]
checks = [
  'ES01',
  'EX01',
  'SA01',
  'SS05',
  'all',
]
exclude = [
  '\.__init__$',
]

[tool.poetry]
packages = [{from = "src", include = "keyrings"}]
requires-poetry = ">=2.0"

[tool.poetry.group.build-check.dependencies]
check-wheel-contents = "^0.6.1"
twine = "^6.0.0"

[tool.poetry.group.mypy.dependencies]
keyring = "^25.6.0"
mypy = "^1.14.1"
nox = "^2024.10.9"
pytest = "^8.3.4"

[tool.poetry.group.ruff.dependencies]
ruff = "^0.8.6"

[tool.poetry.group.test.dependencies]
pytest = "^8.3.4"
pytest-antilru = "^2.0.0"
pytest-cov = "^6.0.0"
pytest-flakefinder = "^1.1.0"
pytest-randomly = "^3.16.0"
pytest-socket = {python = "<4", version = "^0.7.0"}
pytest-xdist = {extras = ["psutil"], version = "^3.6.1"}

[tool.poetry.group.yamllint.dependencies]
yamllint = "^1.35.0"

[tool.poetry.requires-plugins]
poetry-dynamic-versioning = {extras = ["plugin"], version = ">=1.0.0,<2.0.0"}

[tool.poetry-dynamic-versioning]
enable = false
pattern = "default-unprefixed"
vcs = "git"

[tool.pydoclint]
arg-type-hints-in-docstring = false
style = "sphinx"

[tool.pytest.ini_options]
filterwarnings = [
  "error",
  "ignore:The --rsyncdir command line argument and rsyncdirs config variable are deprecated.:DeprecationWarning",
]

[tool.ruff]
line-length = 120
preview = true
target-version = "py39"

[tool.ruff.format]
line-ending = "lf"
quote-style = "single"

[tool.ruff.lint]
extend-select = ["D213"]
ignore = ["CPY001", "D107", "D203", "D212"]
select = ["ALL"]

[tool.ruff.lint.flake8-implicit-str-concat]
allow-multiline = false

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.ruff.lint.flake8-type-checking]
strict = true

[tool.ruff.lint.isort]
known-first-party = ["src"]

[tool.ruff.lint.per-file-ignores]
"src/keyrings/envvars/keyring.py" = ["ARG002", "PLR6301"]
"src/keyrings/envvars/tests/*.py" = ["PLR6301", "S101", "S105", "SLF001", "TID252"]

[tool.ruff.lint.pydocstyle]
convention = 'numpy'

[tool.tomlsort]
all = true
in_place = true
trailing_comma_inline_array = true

[tool.yamlfix]
section_whitelines = 1
sequence_style = "block_style"
