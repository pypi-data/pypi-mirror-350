[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
authors = [{ name = "Hunter Hogan", email = "HunterHogan@pm.me" }]
classifiers = [
	"Development Status :: 4 - Beta",
	"Environment :: Console",
	"Intended Audience :: Developers",
	"Intended Audience :: Science/Research",
	"Natural Language :: English",
	"Operating System :: OS Independent",
	"Programming Language :: Python",
	"Programming Language :: Python :: 3",
	"Programming Language :: Python :: 3.10",
	"Programming Language :: Python :: 3.11",
	"Programming Language :: Python :: 3.12",
	"Programming Language :: Python :: 3.13",
	"Typing :: Typed",
	"Topic :: Software Development :: Code Generators",
	"Topic :: Software Development :: Libraries :: Python Modules",
	"Topic :: Scientific/Engineering :: Information Analysis",]
dependencies = ["autoflake", "python_minifier", "tomli", "Z0Z_tools"]
description = "A powerfully composable, type-safe toolkit for Python abstract syntax tree (AST) manipulation, analysis, transformation, and code generation with a layered architecture designed for building sophisticated code processing assembly-lines."
keywords = ["ast", "abstract syntax tree", "code generation", "code transformation", "ast-analysis", "ast-manipulation", "ast-traversal", "ast-visitor", "code-analysis", "code-refactoring", "static-analysis", "python-ast", "metaprogramming", "visitor-pattern", "typed-ast", "type-safe", "composable-apis", "function-inlining", "source-code-generation", "ast-predicate"]
license = { 'text' = "CC-BY-NC-4.0" }
name = "astToolkit"
optional-dependencies = { testing = [
	"mypy",
	"pytest",
	"pytest-cov",
	"pytest-xdist",
	"pyupgrade",
	"trove_classifiers",] }
readme = { file = "README.md", content-type = "text/markdown" }
requires-python = ">=3.12"
urls = { Donate = "https://www.patreon.com/integrated", Homepage = "https://github.com/hunterhogan/astToolkit", Issues = "https://github.com/hunterhogan/astToolkit/issues", Repository = "https://github.com/hunterhogan/astToolkit.git" }
version = "0.3.4"

[tool.coverage]
report = { exclude_lines = [
	"if TYPE_CHECKING:",
	"if __name__ == \"__main__\":",
], ignore_errors = false }
run = { branch = true, concurrency = [
	"multiprocessing",
], data_file = "tests/coverage/.coverage", omit = [
	"tests/*",
], parallel = true, source = [
	".",] }
xml = { output = "tests/coverage/coverage.xml" }

[tool.pytest.ini_options]
log_auto_indent = true
addopts = ["--color=auto"]
testpaths = ["tests"]

[tool.setuptools]
package-data = { "*" = ["py.typed"] }
packages = { find = {} }

[tool.updateCitation]
filenameCitationDOTcff = 'CITATION.cff'
pathFilenameCitationSSOT = "citations/CITATION.cff"
