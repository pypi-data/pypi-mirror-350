[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pgraf"
version = "1.0.0a2"
description = "pgraf turns Postgres into a lightning fast property graph engine for use in AI Agents"
readme = "README.md"
requires-python = ">=3.12"
license = 'BSD-3-clause'
license-files = ["LICENSE"]
authors = [{ name = "Gavin M. Roy", email = "gavinr@aweber.com" }]
classifiers = [
  "Development Status :: 3 - Alpha",
  "License :: OSI Approved :: BSD License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: PL/SQL",
  "Programming Language :: SQL",
  "Topic :: Database",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Software Development :: Libraries",
  "Typing :: Typed"
]
dependencies = [
  "asyncstdlib>=3.13.1,<4",
  "openai>=1.74.0,<2",
  "orjson>=3.10,<4",
  "pgvector>=0.4.1,<5",
  "psycopg[pool]>=3.2.4,<4",
  "pydantic>=2.11.3,<3",
  "sentence_transformers>=4.1.0,<5",
  "uuid_utils>=0.10.0,<0.11.0"
]

[project.optional-dependencies]
dev = [
  "build>=1,<2",
  "mypy>=1.7,<2",
  "pre-commit>=4,<6",
  "pytest>=8,<9",
  "pytest-cov",
  "ruff>=0.8,<1",
  "pyyaml"
]
docs = [
  "black",  # used by mkdocs for signature formatting
  "mkdocs>=1.5,<2",
  "mkdocs-material>9.5,<10",
  "mkdocstrings[python]>=0.26,<0.27",
  "mkdocstrings-python-xref>=1.6,<2"
]

[project.urls]
"Homepage" = "https://github.com/gmr/pgraf"
"Documentation" = "https://gmr.github.io/pgraf/"
"Bug Tracker" = "https://github.com/gmr/pgraf/issues"

[tool.coverage.report]
fail_under = 90
show_missing = true

[tool.coverage.run]
branch = true
source = ["pgraf"]
command_line = "-m unittest discover tests --buffer --verbose"

[tool.hatch.build.targets.sdist]
include = ["LICENSE", "README.md", "docs", "pgraf", "schema"]

[tool.hatch.build.targets.wheel]
include = ["LICENSE", "README.md", "docs", "pgraf", "schema"]

[tool.hatch.build.force-include]
"pgraf/py.typed" = "pgraf/py.typed"

[tool.hatch.envs.ci]
dependencies = [
  "coverage[toml]>=7.4,<8",
  "pytest>=8,<9",
]

[tool.hatch.envs.default.scripts]
github-pages = ["mkdocs gh-deploy --force"]
serve-docs = ["mkdocs serve"]

[tool.mkdocs]
config-file = "mkdocs.yml"

[tool.mypy]
disallow_redefinition = true
implicit_optional = false
mypy_path = ["pgraf"]
plugins = "pydantic.mypy"
skip_version_check = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = ["pgvector.psycopg.*"]
follow_untyped_imports = true
disable_error_code = [
  # until mypy undestands self.assertIsNone() python/mypy#4063
  "union-attr",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"

[tool.ruff]
line-length = 79
respect-gitignore = true
target-version = "py312"

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 40
quote-style = "single"
skip-magic-trailing-comma = true

[tool.ruff.lint]
select = [
  "ASYNC", # flake8-async
  "B", # flake8-bugbear
  "BLE", # flake8-blind-except
  "C4", # flake8-comprehensions
  "DTZ", # flake8-datetimez
  "E", "W", # pycodestyle
  "F", # pyflakes
  "G", # flake8-logging-format
  "I", # isort
  "S", # flake8-bandit
  "T20", # flake8-print
  "UP", # pyupgrade
  "F401", # unused imports
  "F841", # unused variables
  "B027", # empty method in abstract base class
  "B905", # zip() without explicit strict parameter
]
ignore = [
  "RSE", # contradicts Python Style Guide
]
flake8-quotes = { inline-quotes = "single" }
isort.split-on-trailing-comma = false
