Metadata-Version: 2.4
Name: geniac
Version: 3.7.0
Summary: Automatic Configuration GENerator and Installer for nextflow pipeline
Home-page: https://gitlab.curie.fr/bioinfo-guidelines/geniac
Author: Philippe Hupé, Julien Roméjon, Fabrice Allain
Author-email: philippe.hupe@curie.fr
License: CeCILL
Project-URL: Documentation, https://geniac.readthedocs.io/en/latest/
Project-URL: Demonstration, https://github.com/bioinfo-pf-curie/geniac-demo.git
Platform: any
Classifier: Development Status :: 4 - Beta
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.12
Requires-Python: >=3.12
Description-Content-Type: text/markdown; charset=UTF-8
License-File: LICENSE
Requires-Dist: cmake==3.30.2
Requires-Dist: colorlog==6.8.2
Requires-Dist: dotty-dict==1.3.1
Requires-Dist: gitpython==3.1.43
Requires-Dist: pre-commit==3.8.0
Requires-Dist: pytest==8.3.2
Requires-Dist: pytest-cov==5.0.0
Requires-Dist: pytest-datadir==1.5.0
Requires-Dist: pytest-datafiles==3.0.0
Requires-Dist: pytest-icdiff==0.9
Requires-Dist: pytest-sugar==1.0.0
Requires-Dist: pyyaml==6.0.2
Requires-Dist: setuptools-scm==8.1.0
Requires-Dist: tox==3.28.0
Requires-Dist: tox-conda==0.10.2
Requires-Dist: validators==0.33.0
Provides-Extra: testing
Requires-Dist: setuptools; extra == "testing"
Requires-Dist: pytest; extra == "testing"
Requires-Dist: pytest-cov; extra == "testing"
Requires-Dist: pytest-sugar; extra == "testing"
Requires-Dist: pytest-icdiff; extra == "testing"
Requires-Dist: pytest-datafiles; extra == "testing"
Dynamic: license-file

# Geniac

*Geniac* is an **A**utomatic **C**onfiguration **GEN**erator and **I**nstaller for nextflow pipelines.

* [Documentation](#documentation)
* [Acknowledgements](#acknowledgements)
* [Release notes](CHANGELOG)
* [Citation](#citation)

## Documentation

* The [geniac documentation](https://geniac.readthedocs.io) provides a set of best practises to implement *Nextflow* pipelines.
* The [geniac](https://github.com/bioinfo-pf-curie/geniac) source code provides the set of utilities.
* The [geniac demo](https://github.com/bioinfo-pf-curie/geniac-demo) provides a toy pipeline to test and practise *Geniac*.
* The [geniac demo DSL2](https://github.com/bioinfo-pf-curie/geniac-demo-dsl2) provides a toy pipeline to test and practise *Geniac* with *Nextflow* DSL2.
* The [geniac template](https://github.com/bioinfo-pf-curie/geniac-template) provides a pipeline template to start a new pipeline.

## Acknowledgements

* [Institut Curie](https://www.curie.fr)
* [Centre national de la recherche scientifique](http://www.cnrs.fr)
* This project has received funding from the European Union’s Horizon 2020 research and innovation programme and the Canadian Institutes of Health Research under the grant agreement No 825835 in the framework on the [European-Canadian Cancer Network](https://eucancan.com/)

## Citation

[Allain F, Roméjon J, La Rosa P et al. Geniac: Automatic Configuration GENerator and Installer for nextflow pipelines. Open Research Europe 2021, 1:76](https://open-research-europe.ec.europa.eu/articles/1-76)

version-3.7.0
05/23/2025

NEW FEATURES
   - almalinux:9.5 set as default for the containers
   - remove the use of the defaults conda channel to comply with anaconda license:
       * conda 24.11.3-2 from miniforge set as default for the containers
       * options '--condaNoDefaultsChannel' can to passed to nextflow to include the defaults conda channel in the yml files automatically generated by geniac
   - git: geniac checks for production tage with patterns 'version-1.2.3' or 'v1.2.3'
   - the geniac conda env does not use the defaults channel but the nodefaults channel
   - Geniac CLI:
    	 * remove the use of the defaults conda channel to comply with anaconda license:
       * Check that the defaults channel is not used to comply with anaconda license
       * option 'condaNoDefaultsChannel' in geniac.ini file allows the use of the defaults conda channel if needeed
 

version-3.6.0
01/10/2025

NEW FEATURES
   - Geniac CLI:
      * Environment variables from the user space are passed to the sudo command
      * Conda env with nextflow 24.04.4, pip 24.2, make 4.4.1, python 3.12.5
      * geniac must be installed using pip after the geniac conda env is created

BUGFIX
   - Geniac CLI:
      * Both ADD and COPY directives in Dockerfile are considered to check file dependencies

version-3.5.0

08/27/2024

NEW FEATURES
   - a sha256sum signature is generated for each container recipe (including its dependencies). The list of signatures is provided both as global file (sha256sum) and individual files for each tool (eg python.sha256sum)
   - new cmake option 'ap_container_list' to build only a subset of container provided as a list in a txt file.

BUGFIX
   - Missing ':' added in PATH variable when information from params.containers.git is provided

version-3.4.0
08/08/2024

NEW FEATURES
   - nextflow scripts have been migrated to DSL2
   - Geniac CLI:
      * Return exit code 1 on any error with the CLI.

version-3.3.0
04/12/2024

NEW FEATURES
   - almalinux:9.3 set as default for the containers
   - conda 23.10.0 set as default for the containers

DOCUMENTATION
   - Update readthedocs config file

version-3.2.1
10/12/2023

BUGFIX
   - singularity/docker profiles:
     * post commands were written twice in the recipes generated by geniac

version-3.2.0
09/08/2023

NEW FEATURES
   - singularity/docker profiles:
      * params.yumOptions added ine the nextflow.config file, and options set with '--setopt=fastestmirror=1 --setopt=metadata_expire=0'
   - new profile created by geniac: apptainer (since 'apptainer.enabled' has been introduced in nextflow 23.04.0)
   - Geniac CLI:
      * 'geniac lint': consider that the nextflow pipeline is implemented using DSL2. Modifications have been made only for process using renv. 'geniac lint' could still work on DSL1 pipeline provided that there is no process using renv.
      * Update conda env with new tool versions

version-3.1.0
08/14/2023

NEW FEATURES
   - almalinux:8.8 set as default for the containers
   - conda 23.5.1 set as default for the containers
   - micromamba is used to create conda envs and install conda packages
   - conda/multiconda profiles:
	 * conda.enable has been added
   - Geniac CLI:
      * Conda env with apptainer 1.2.2, nextflow 22.10.6, pip 23.2.1

DOCUMENTATION
   - renv updated with BioC 3.17

version-3.0.0
05/05/2023

NEW FEATURES
   - singularity profile:
      * the profile has been simplified since the option '--containall' has been removed and the profile now sets 'autoMounts = true'
	  * functionalities introduced in version 2.6.* to manage singularity bindings are not needed anymore
      * option 'params.containers.specificBinds' (used in the geniac-template) introduced in version-2.1.0 is not needed anymore 
      * cmake option 'ap_mount_dir' introduced in version-2.0.0 to bind folders inside containers is now deprecated since it is not needed anymore
   - Possibility to define label with variable: label (params.someValue ?: 'toolPrefix')
   - Geniac CLI:
      * 'geniac lint': improve error message when name of a conda recipe is not coherent with the label

version-2.6.3
01/06/2023

NEW FEATURES
   - singularity profile:
      * Allow the binding of relative (to launchDir) paths
      * Order the bindings according to the natural ordering
   - Geniac CLI:
      * Possibility to use 'geniac lint' on a repo even if the folder "geniac" is not present
      * 'geniac init':  improve error message display 

DOCUMENTATION
   - Git clone using geniac submodule from remote release branch

BUGFIX
   - Geniac CLI:
      * Avoid to launch Cmake init on several geniac CLI commands
      * 'geniac options': display missing options

version-2.6.2
12/16/2022

NEW FEATURES
   - Geniac CLI:
      *  Conda env with apptainer 1.1.4

BUGFIX
   - singularity profile:
      * checkSymlink: avoid infinite loop in some limit conditions

version-2.6.1
12/07/2022

BUGFIX
   - singularity profile:
      * checkSamplePlan: conditions added to consider files with either 2, 3 or 4 columns

version-2.6.0
11/19/2022

NEW FEATURES
   - almalinux:8.7 set as default for the containers
   - singularity profile:
      * checkBindinds function takes into account the binding of possible symlink inside a path. It also binds the directory defined in 'params.outDir' if it is defined in the nextflow.config file.

BUGFIX
   - Geniac CLI:
      * 'geniac init' will throw an error if it is launched from the working directory to be created

version-2.5.0
08/04/2022

NEW FEATURES
   - Add support to apptainer
   - Upgrade tool versions for the geniac conda env
   - Check during the cmake configuration that mininal version for each software is met
   - Geniac CLI:
      * geniac lint adds an error message if conda recipe is not correctly formatted
      * geniac lint will ignore config file that are not explicitly declared in geniac.ini
      * when installing with sudo privilege, check that singularity and nextflow versions are the same as the one detected in the user environment during cmake configuration
      * avoid 'sudo' command with 'geniac install' if launched by the root user

BUGFIX
   - Geniac CLI:
      * Fix geniac lint error when comment in the middle of a line
      * geniac lint will throw an error if the withLabel process selector is single-line formatted in the process.config file
      * allow '.' in softName in the pip section of a conda recipe

DOCUMENTATION
   - Minimal conda version (4.12.0) required

version-2.4.1
06/10/2022

NEW FEATURES
   - Geniac CLI:
      * allow both patterns ('condaChannelName::softName=version=buildString' and 'softName=version=buildString') in conda yml recipe file

version-2.4.0
06/08/2022

NEW FEATURES
   - conda 4.12.0 and almalinux:8.6 set as default for the containers
   - Geniac CLI:
      * check that conda recipe with a yml file contains an env name
      * check that conda recipe with a yml file have a unique env name
      * check that all dependencies with conda follow the pattern 'condaChannelName::softName=version=buildString'
      * check that pip dependencies with conda follow the pattern 'softName==version'

DOCUMENTATION
   - Guidelines to write conda recipe with a yml file

version-2.3.0
05/20/2022

NEW FEATURES
   - New cmake option:
      * ap_singularity_build_options: allow to pass specific options when building singularity images.
   - Geniac CLI:
      * singularityfakeroot mode added to "geniac install"
   - default runOption expected to "" in geniac.config
   - New profile available: podman

BUGFIX
   - Delete files generated by geniac when "geniac init" uses a path

DOCUMENTATION
   - Describe how to build singularity images with fakeroot option
   - Admin: explain how to build the doc

version-2.2.0
04/27/2022

NEW FEATURES
   - generate container recipes with renv and R tool
   - conda 4.11.0 and almalinux:8.5 set as default for the containers
   - Geniac CLI:
      * "clean", "configs" and "recipes" commands have been added
      * allow labels defined in params.geniac.tools in conf/geniac.config to use the content from other tools defined in params.geniac.tools
      * allow labels in params.geniac.containers.yum or params.geniac.containers.git scopes for all kind of labels (and not only for labels defined in params.geniac.tools)
      * check that the container recipes generated by geniac are not in the repo
      * allow custom scope in params.geniac.tools (which is required for a tool with R and renv)
      * geniac folder with the same version of geniac CLI is now included in the python package
      * add "sudo chown" after sudo operation to restore permission to the user
      * "geniac lint" now checks that a conda recipe must have its label in conf/geniac.config

DOCUMENTATION
   - New section with the Geniac CLI commands
   - Explain how to add a process with R and renv to manage package dependencies

BUGFIX:
   - Geniac CLI:
      * change regex to check that a module fromSource is in the ExternalProject_Add directive

version-2.1.0
03/24/2022

NEW FEATURES
   - Geniac CLI:
      * geniac folder with the same version of geniac CLI is downloaded in src dir to ensure that the pipeline will be installed using the same geniac version
      * config files generated by geniac are deleted at init if they are present in the src dir

DOCUMENTATION
   - option containers.specificBinds

version-2.0.1
03/18/2022

DOCUMENTATION
   - Update the config file examples generated by geniac

BUGFIX
   - Geniac CLI: allow the usage of --ap_singularity_image_path

version-2.0.0
02/10/2022

NEW FEATURES
   - Tools from source: 
      * they are installed in ${projectDir}/bin/fromSource in order to allow their usage inside the containers
      * the sh script which allowed the installation inside the container is not needed anymore
      * allow multi-stage building when building docker containers
   - Tools with custom install:
      * their dependencies files needed to build the containers have to be located in recipes/dependencies/label_name (to allow the -resume option)
   - New cmake options:
      * ap_linux_distro and ap_conda_release to bootstrap on containers available on 4geniac docker hub repositories (https://hub.docker.com/u/4geniac)
      * ap_mount_dir to bind folders inside containers
   - singularity profile:
      * 'autoMounts = false' when nextflow launches singularity profile
      * checkBindinds function added in singularity.config to avoid any interaction with HOME of the host for better reproducibility
      * image extension is now '.sif' instead of '.simg'
   - singularity/docker profile:
      * the conda environment is activated inside images
   - Geniac CLI:
      * options, init, install, test commands have been added
      * available on PyPI (https://pypi.org/project/geniac)
   - Use the nextflow '-resume' options when building the configuration files en containers
   - Add params.yum to use 'dnf' instead of yum to install packages in the linux distros
   - New custom target 'build_config_files'
   - Minimal versions for nextflow (21.10.6) and singularity (3.8.5)
   - environment.yml includes all dependencies required by geniac and geniac CLI

BUGFIX
   - Copy files in /usr/local/bin in the singularity image when the tool is built from source code
   - Fix extra quotes in the beforeScript directive added in the conda.config and multiconda.config files
   - Some environment variables from the deffile were not correctly exported inside the image

DOCUMENTATION
   - How to write singularity and docker recipes to activate conda environment
   - New Miscellaneous section
   - Binary or executable script: new use cases added as onlyLinux can not always be used
   - Updates with new functionalities and modifications from version-2.0.0

version-1.1.0
08/09/2021

NEW FEATURES
   - Add retry errorStrategy in the nextflow.config
   - New cmake option ap_docker_registry to bootstrap on custom registry when building the containers
   - baseDir replaced by projectDir
   - New method to detect is the source directory is a git repository

BUGFIX
   - Geniac linter supports empty recipes folder

DOCUMENTATION
   - Update the documentation and fix typos
   - Reference to the article added
   - Custom install section: add missing information where to save the custom recipes
   - Install from source code section: add missing link to modules/CMakeLists.txt template

version-1.0.0
05/31/2021

NEW FEATURES
   - Harmonization of docker.nf / singularity.nf files
   - Add missing indentation in singularity definition files

DOCUMENTATION
   - Update the documentation and fix typos

version-0.2.3
05/21/2021

BUGFIX
   - In the dependencies section of the file environment.yml generated by geniac, pip has been added

DOCUMENTATION
   - Update the documentation and fix typos
   - Example with the use of the cluster profile in useCases.bash

version-0.2.2
05/20/2021

NEW FEATURES
   - Geniac linter allows params.geniac.tools, params.geniac.containers.yum
     and params.geniac.containers.git as optional

version-0.2.1
05/19/2021

NEW FEATURES
   - Option ap_check_config_file_from_source
   - Geniac linter support multiline comments in nf files

DOCUMENTATION
  - Examples to generate the containers recipes

version-0.2.0
03/30/2021

NEW FEATURES
   - Geniac command line interface (linter)

version-0.1.2
03/26/2021

DOCUMENTATION
  - Update documentation with geniac-demo-dsl2

version-0.1.1
11/25/2020

DOCUMENTATION
  - Update documentation with new labels for resource tuning

version-0.1.0
11/06/2020

NEW FEATURES
  - generation of the conda recipe environment.yml
  - checkProfile* function added for path, multipath and singularity profiles
  - reorganisation of the config files with geniac.config added

BUGFIX
  - add condition when empty modules folder is empty
  - symlink to singularity path can be created

version-0.0.2

NEW FEATURES
  - utils folder has been renamed geniac

version-0.0.1

NEW FEATURES
  - set of utilities to build the containers and deploy the pipeline


  CeCILL FREE SOFTWARE LICENSE AGREEMENT

Version 2.1 dated 2013-06-21


    Notice

This Agreement is a Free Software license agreement that is the result
of discussions between its authors in order to ensure compliance with
the two main principles guiding its drafting:

  * firstly, compliance with the principles governing the distribution
    of Free Software: access to source code, broad rights granted to users,
  * secondly, the election of a governing law, French law, with which it
    is conformant, both as regards the law of torts and intellectual
    property law, and the protection that it offers to both authors and
    holders of the economic rights over software.

The authors of the CeCILL (for Ce[a] C[nrs] I[nria] L[ogiciel] L[ibre])
license are:

Commissariat à l'énergie atomique et aux énergies alternatives - CEA, a
public scientific, technical and industrial research establishment,
having its principal place of business at 25 rue Leblanc, immeuble Le
Ponant D, 75015 Paris, France.

Centre National de la Recherche Scientifique - CNRS, a public scientific
and technological establishment, having its principal place of business
at 3 rue Michel-Ange, 75794 Paris cedex 16, France.

Institut National de Recherche en Informatique et en Automatique -
Inria, a public scientific and technological establishment, having its
principal place of business at Domaine de Voluceau, Rocquencourt, BP
105, 78153 Le Chesnay cedex, France.


    Preamble

The purpose of this Free Software license agreement is to grant users
the right to modify and redistribute the software governed by this
license within the framework of an open source distribution model.

The exercising of this right is conditional upon certain obligations for
users so as to preserve this status for all subsequent redistributions.

In consideration of access to the source code and the rights to copy,
modify and redistribute granted by the license, users are provided only
with a limited warranty and the software's author, the holder of the
economic rights, and the successive licensors only have limited liability.

In this respect, the risks associated with loading, using, modifying
and/or developing or reproducing the software by the user are brought to
the user's attention, given its Free Software status, which may make it
complicated to use, with the result that its use is reserved for
developers and experienced professionals having in-depth computer
knowledge. Users are therefore encouraged to load and test the
suitability of the software as regards their requirements in conditions
enabling the security of their systems and/or data to be ensured and,
more generally, to use and operate it in the same conditions of
security. This Agreement may be freely reproduced and published,
provided it is not altered, and that no provisions are either added or
removed herefrom.

This Agreement may apply to any or all software for which the holder of
the economic rights decides to submit the use thereof to its provisions.

Frequently asked questions can be found on the official website of the
CeCILL licenses family (http://www.cecill.info/index.en.html) for any
necessary clarification.


    Article 1 - DEFINITIONS

For the purpose of this Agreement, when the following expressions
commence with a capital letter, they shall have the following meaning:

Agreement: means this license agreement, and its possible subsequent
versions and annexes.

Software: means the software in its Object Code and/or Source Code form
and, where applicable, its documentation, "as is" when the Licensee
accepts the Agreement.

Initial Software: means the Software in its Source Code and possibly its
Object Code form and, where applicable, its documentation, "as is" when
it is first distributed under the terms and conditions of the Agreement.

Modified Software: means the Software modified by at least one
Contribution.

Source Code: means all the Software's instructions and program lines to
which access is required so as to modify the Software.

Object Code: means the binary files originating from the compilation of
the Source Code.

Holder: means the holder(s) of the economic rights over the Initial
Software.

Licensee: means the Software user(s) having accepted the Agreement.

Contributor: means a Licensee having made at least one Contribution.

Licensor: means the Holder, or any other individual or legal entity, who
distributes the Software under the Agreement.

Contribution: means any or all modifications, corrections, translations,
adaptations and/or new functions integrated into the Software by any or
all Contributors, as well as any or all Internal Modules.

Module: means a set of sources files including their documentation that
enables supplementary functions or services in addition to those offered
by the Software.

External Module: means any or all Modules, not derived from the
Software, so that this Module and the Software run in separate address
spaces, with one calling the other when they are run.

Internal Module: means any or all Module, connected to the Software so
that they both execute in the same address space.

GNU GPL: means the GNU General Public License version 2 or any
subsequent version, as published by the Free Software Foundation Inc.

GNU Affero GPL: means the GNU Affero General Public License version 3 or
any subsequent version, as published by the Free Software Foundation Inc.

EUPL: means the European Union Public License version 1.1 or any
subsequent version, as published by the European Commission.

Parties: mean both the Licensee and the Licensor.

These expressions may be used both in singular and plural form.


    Article 2 - PURPOSE

The purpose of the Agreement is the grant by the Licensor to the
Licensee of a non-exclusive, transferable and worldwide license for the
Software as set forth in Article 5 <#scope> hereinafter for the whole
term of the protection granted by the rights over said Software.


    Article 3 - ACCEPTANCE

3.1 The Licensee shall be deemed as having accepted the terms and
conditions of this Agreement upon the occurrence of the first of the
following events:

  * (i) loading the Software by any or all means, notably, by
    downloading from a remote server, or by loading from a physical medium;
  * (ii) the first time the Licensee exercises any of the rights granted
    hereunder.

3.2 One copy of the Agreement, containing a notice relating to the
characteristics of the Software, to the limited warranty, and to the
fact that its use is restricted to experienced users has been provided
to the Licensee prior to its acceptance as set forth in Article 3.1
<#accepting> hereinabove, and the Licensee hereby acknowledges that it
has read and understood it.


    Article 4 - EFFECTIVE DATE AND TERM


      4.1 EFFECTIVE DATE

The Agreement shall become effective on the date when it is accepted by
the Licensee as set forth in Article 3.1 <#accepting>.


      4.2 TERM

The Agreement shall remain in force for the entire legal term of
protection of the economic rights over the Software.


    Article 5 - SCOPE OF RIGHTS GRANTED

The Licensor hereby grants to the Licensee, who accepts, the following
rights over the Software for any or all use, and for the term of the
Agreement, on the basis of the terms and conditions set forth hereinafter.

Besides, if the Licensor owns or comes to own one or more patents
protecting all or part of the functions of the Software or of its
components, the Licensor undertakes not to enforce the rights granted by
these patents against successive Licensees using, exploiting or
modifying the Software. If these patents are transferred, the Licensor
undertakes to have the transferees subscribe to the obligations set
forth in this paragraph.


      5.1 RIGHT OF USE

The Licensee is authorized to use the Software, without any limitation
as to its fields of application, with it being hereinafter specified
that this comprises:

 1. permanent or temporary reproduction of all or part of the Software
    by any or all means and in any or all form.

 2. loading, displaying, running, or storing the Software on any or all
    medium.

 3. entitlement to observe, study or test its operation so as to
    determine the ideas and principles behind any or all constituent
    elements of said Software. This shall apply when the Licensee
    carries out any or all loading, displaying, running, transmission or
    storage operation as regards the Software, that it is entitled to
    carry out hereunder.


      5.2 ENTITLEMENT TO MAKE CONTRIBUTIONS

The right to make Contributions includes the right to translate, adapt,
arrange, or make any or all modifications to the Software, and the right
to reproduce the resulting software.

The Licensee is authorized to make any or all Contributions to the
Software provided that it includes an explicit notice that it is the
author of said Contribution and indicates the date of the creation thereof.


      5.3 RIGHT OF DISTRIBUTION

In particular, the right of distribution includes the right to publish,
transmit and communicate the Software to the general public on any or
all medium, and by any or all means, and the right to market, either in
consideration of a fee, or free of charge, one or more copies of the
Software by any means.

The Licensee is further authorized to distribute copies of the modified
or unmodified Software to third parties according to the terms and
conditions set forth hereinafter.


        5.3.1 DISTRIBUTION OF SOFTWARE WITHOUT MODIFICATION

The Licensee is authorized to distribute true copies of the Software in
Source Code or Object Code form, provided that said distribution
complies with all the provisions of the Agreement and is accompanied by:

 1. a copy of the Agreement,

 2. a notice relating to the limitation of both the Licensor's warranty
    and liability as set forth in Articles 8 and 9,

and that, in the event that only the Object Code of the Software is
redistributed, the Licensee allows effective access to the full Source
Code of the Software for a period of at least three years from the
distribution of the Software, it being understood that the additional
acquisition cost of the Source Code shall not exceed the cost of the
data transfer.


        5.3.2 DISTRIBUTION OF MODIFIED SOFTWARE

When the Licensee makes a Contribution to the Software, the terms and
conditions for the distribution of the resulting Modified Software
become subject to all the provisions of this Agreement.

The Licensee is authorized to distribute the Modified Software, in
source code or object code form, provided that said distribution
complies with all the provisions of the Agreement and is accompanied by:

 1. a copy of the Agreement,

 2. a notice relating to the limitation of both the Licensor's warranty
    and liability as set forth in Articles 8 and 9,

and, in the event that only the object code of the Modified Software is
redistributed,

 3. a note stating the conditions of effective access to the full source
    code of the Modified Software for a period of at least three years
    from the distribution of the Modified Software, it being understood
    that the additional acquisition cost of the source code shall not
    exceed the cost of the data transfer.


        5.3.3 DISTRIBUTION OF EXTERNAL MODULES

When the Licensee has developed an External Module, the terms and
conditions of this Agreement do not apply to said External Module, that
may be distributed under a separate license agreement.


        5.3.4 COMPATIBILITY WITH OTHER LICENSES

The Licensee can include a code that is subject to the provisions of one
of the versions of the GNU GPL, GNU Affero GPL and/or EUPL in the
Modified or unmodified Software, and distribute that entire code under
the terms of the same version of the GNU GPL, GNU Affero GPL and/or EUPL.

The Licensee can include the Modified or unmodified Software in a code
that is subject to the provisions of one of the versions of the GNU GPL,
GNU Affero GPL and/or EUPL and distribute that entire code under the
terms of the same version of the GNU GPL, GNU Affero GPL and/or EUPL.


    Article 6 - INTELLECTUAL PROPERTY


      6.1 OVER THE INITIAL SOFTWARE

The Holder owns the economic rights over the Initial Software. Any or
all use of the Initial Software is subject to compliance with the terms
and conditions under which the Holder has elected to distribute its work
and no one shall be entitled to modify the terms and conditions for the
distribution of said Initial Software.

The Holder undertakes that the Initial Software will remain ruled at
least by this Agreement, for the duration set forth in Article 4.2 <#term>.


      6.2 OVER THE CONTRIBUTIONS

The Licensee who develops a Contribution is the owner of the
intellectual property rights over this Contribution as defined by
applicable law.


      6.3 OVER THE EXTERNAL MODULES

The Licensee who develops an External Module is the owner of the
intellectual property rights over this External Module as defined by
applicable law and is free to choose the type of agreement that shall
govern its distribution.


      6.4 JOINT PROVISIONS

The Licensee expressly undertakes:

 1. not to remove, or modify, in any manner, the intellectual property
    notices attached to the Software;

 2. to reproduce said notices, in an identical manner, in the copies of
    the Software modified or not.

The Licensee undertakes not to directly or indirectly infringe the
intellectual property rights on the Software of the Holder and/or
Contributors, and to take, where applicable, vis-à-vis its staff, any
and all measures required to ensure respect of said intellectual
property rights of the Holder and/or Contributors.


    Article 7 - RELATED SERVICES

7.1 Under no circumstances shall the Agreement oblige the Licensor to
provide technical assistance or maintenance services for the Software.

However, the Licensor is entitled to offer this type of services. The
terms and conditions of such technical assistance, and/or such
maintenance, shall be set forth in a separate instrument. Only the
Licensor offering said maintenance and/or technical assistance services
shall incur liability therefor.

7.2 Similarly, any Licensor is entitled to offer to its licensees, under
its sole responsibility, a warranty, that shall only be binding upon
itself, for the redistribution of the Software and/or the Modified
Software, under terms and conditions that it is free to decide. Said
warranty, and the financial terms and conditions of its application,
shall be subject of a separate instrument executed between the Licensor
and the Licensee.


    Article 8 - LIABILITY

8.1 Subject to the provisions of Article 8.2, the Licensee shall be
entitled to claim compensation for any direct loss it may have suffered
from the Software as a result of a fault on the part of the relevant
Licensor, subject to providing evidence thereof.

8.2 The Licensor's liability is limited to the commitments made under
this Agreement and shall not be incurred as a result of in particular:
(i) loss due the Licensee's total or partial failure to fulfill its
obligations, (ii) direct or consequential loss that is suffered by the
Licensee due to the use or performance of the Software, and (iii) more
generally, any consequential loss. In particular the Parties expressly
agree that any or all pecuniary or business loss (i.e. loss of data,
loss of profits, operating loss, loss of customers or orders,
opportunity cost, any disturbance to business activities) or any or all
legal proceedings instituted against the Licensee by a third party,
shall constitute consequential loss and shall not provide entitlement to
any or all compensation from the Licensor.


    Article 9 - WARRANTY

9.1 The Licensee acknowledges that the scientific and technical
state-of-the-art when the Software was distributed did not enable all
possible uses to be tested and verified, nor for the presence of
possible defects to be detected. In this respect, the Licensee's
attention has been drawn to the risks associated with loading, using,
modifying and/or developing and reproducing the Software which are
reserved for experienced users.

The Licensee shall be responsible for verifying, by any or all means,
the suitability of the product for its requirements, its good working
order, and for ensuring that it shall not cause damage to either persons
or properties.

9.2 The Licensor hereby represents, in good faith, that it is entitled
to grant all the rights over the Software (including in particular the
rights set forth in Article 5 <#scope>).

9.3 The Licensee acknowledges that the Software is supplied "as is" by
the Licensor without any other express or tacit warranty, other than
that provided for in Article 9.2 <#good-faith> and, in particular,
without any warranty as to its commercial value, its secured, safe,
innovative or relevant nature.

Specifically, the Licensor does not warrant that the Software is free
from any error, that it will operate without interruption, that it will
be compatible with the Licensee's own equipment and software
configuration, nor that it will meet the Licensee's requirements.

9.4 The Licensor does not either expressly or tacitly warrant that the
Software does not infringe any third party intellectual property right
relating to a patent, software or any other property right. Therefore,
the Licensor disclaims any and all liability towards the Licensee
arising out of any or all proceedings for infringement that may be
instituted in respect of the use, modification and redistribution of the
Software. Nevertheless, should such proceedings be instituted against
the Licensee, the Licensor shall provide it with technical and legal
expertise for its defense. Such technical and legal expertise shall be
decided on a case-by-case basis between the relevant Licensor and the
Licensee pursuant to a memorandum of understanding. The Licensor
disclaims any and all liability as regards the Licensee's use of the
name of the Software. No warranty is given as regards the existence of
prior rights over the name of the Software or as regards the existence
of a trademark.


    Article 10 - TERMINATION

10.1 In the event of a breach by the Licensee of its obligations
hereunder, the Licensor may automatically terminate this Agreement
thirty (30) days after notice has been sent to the Licensee and has
remained ineffective.

10.2 A Licensee whose Agreement is terminated shall no longer be
authorized to use, modify or distribute the Software. However, any
licenses that it may have granted prior to termination of the Agreement
shall remain valid subject to their having been granted in compliance
with the terms and conditions hereof.


    Article 11 - MISCELLANEOUS


      11.1 EXCUSABLE EVENTS

Neither Party shall be liable for any or all delay, or failure to
perform the Agreement, that may be attributable to an event of force
majeure, an act of God or an outside cause, such as defective
functioning or interruptions of the electricity or telecommunications
networks, network paralysis following a virus attack, intervention by
government authorities, natural disasters, water damage, earthquakes,
fire, explosions, strikes and labor unrest, war, etc.

11.2 Any failure by either Party, on one or more occasions, to invoke
one or more of the provisions hereof, shall under no circumstances be
interpreted as being a waiver by the interested Party of its right to
invoke said provision(s) subsequently.

11.3 The Agreement cancels and replaces any or all previous agreements,
whether written or oral, between the Parties and having the same
purpose, and constitutes the entirety of the agreement between said
Parties concerning said purpose. No supplement or modification to the
terms and conditions hereof shall be effective as between the Parties
unless it is made in writing and signed by their duly authorized
representatives.

11.4 In the event that one or more of the provisions hereof were to
conflict with a current or future applicable act or legislative text,
said act or legislative text shall prevail, and the Parties shall make
the necessary amendments so as to comply with said act or legislative
text. All other provisions shall remain effective. Similarly, invalidity
of a provision of the Agreement, for any reason whatsoever, shall not
cause the Agreement as a whole to be invalid.


      11.5 LANGUAGE

The Agreement is drafted in both French and English and both versions
are deemed authentic.


    Article 12 - NEW VERSIONS OF THE AGREEMENT

12.1 Any person is authorized to duplicate and distribute copies of this
Agreement.

12.2 So as to ensure coherence, the wording of this Agreement is
protected and may only be modified by the authors of the License, who
reserve the right to periodically publish updates or new versions of the
Agreement, each with a separate number. These subsequent versions may
address new issues encountered by Free Software.

12.3 Any Software distributed under a given version of the Agreement may
only be subsequently distributed under the same version of the Agreement
or a subsequent version, subject to the provisions of Article 5.3.4
<#compatibility>.


    Article 13 - GOVERNING LAW AND JURISDICTION

13.1 The Agreement is governed by French law. The Parties agree to
endeavor to seek an amicable solution to any disagreements or disputes
that may arise during the performance of the Agreement.

13.2 Failing an amicable solution within two (2) months as from their
occurrence, and unless emergency proceedings are necessary, the
disagreements or disputes shall be referred to the Paris Courts having
jurisdiction, by the more diligent Party.
