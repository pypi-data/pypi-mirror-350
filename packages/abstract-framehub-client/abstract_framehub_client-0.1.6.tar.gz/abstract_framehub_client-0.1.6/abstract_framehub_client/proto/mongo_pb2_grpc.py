# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from abstract_framehub_client.proto import mongo_pb2 as abstract__framehub__client_dot_proto_dot_mongo__pb2

GRPC_GENERATED_VERSION = '1.71.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in abstract_framehub_client/proto/mongo_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class AdminStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Schema = channel.unary_unary(
                '/grpcmongo.Admin/Schema',
                request_serializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.InsertSchemaRequest.SerializeToString,
                response_deserializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.GenericResponse.FromString,
                _registered_method=True)
        self.CreateDatabase = channel.unary_unary(
                '/grpcmongo.Admin/CreateDatabase',
                request_serializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.InsertDatabaseRequest.SerializeToString,
                response_deserializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.GenericResponse.FromString,
                _registered_method=True)
        self.DropDatabase = channel.unary_unary(
                '/grpcmongo.Admin/DropDatabase',
                request_serializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.DropDatabaseRequest.SerializeToString,
                response_deserializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.GenericResponse.FromString,
                _registered_method=True)
        self.Transform = channel.unary_unary(
                '/grpcmongo.Admin/Transform',
                request_serializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.InsertTransformRequest.SerializeToString,
                response_deserializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.GenericResponse.FromString,
                _registered_method=True)
        self.CreateUser = channel.unary_unary(
                '/grpcmongo.Admin/CreateUser',
                request_serializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.InsertUserRequest.SerializeToString,
                response_deserializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.GenericResponse.FromString,
                _registered_method=True)
        self.UpdateUser = channel.unary_unary(
                '/grpcmongo.Admin/UpdateUser',
                request_serializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.UpdateUserRequest.SerializeToString,
                response_deserializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.GenericResponse.FromString,
                _registered_method=True)
        self.DropUser = channel.unary_unary(
                '/grpcmongo.Admin/DropUser',
                request_serializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.DropUserRequest.SerializeToString,
                response_deserializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.GenericResponse.FromString,
                _registered_method=True)


class AdminServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Schema(self, request, context):
        """Admin
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateDatabase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DropDatabase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Transform(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DropUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AdminServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Schema': grpc.unary_unary_rpc_method_handler(
                    servicer.Schema,
                    request_deserializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.InsertSchemaRequest.FromString,
                    response_serializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.GenericResponse.SerializeToString,
            ),
            'CreateDatabase': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateDatabase,
                    request_deserializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.InsertDatabaseRequest.FromString,
                    response_serializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.GenericResponse.SerializeToString,
            ),
            'DropDatabase': grpc.unary_unary_rpc_method_handler(
                    servicer.DropDatabase,
                    request_deserializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.DropDatabaseRequest.FromString,
                    response_serializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.GenericResponse.SerializeToString,
            ),
            'Transform': grpc.unary_unary_rpc_method_handler(
                    servicer.Transform,
                    request_deserializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.InsertTransformRequest.FromString,
                    response_serializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.GenericResponse.SerializeToString,
            ),
            'CreateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUser,
                    request_deserializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.InsertUserRequest.FromString,
                    response_serializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.GenericResponse.SerializeToString,
            ),
            'UpdateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUser,
                    request_deserializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.UpdateUserRequest.FromString,
                    response_serializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.GenericResponse.SerializeToString,
            ),
            'DropUser': grpc.unary_unary_rpc_method_handler(
                    servicer.DropUser,
                    request_deserializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.DropUserRequest.FromString,
                    response_serializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.GenericResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'grpcmongo.Admin', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('grpcmongo.Admin', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Admin(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Schema(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpcmongo.Admin/Schema',
            abstract__framehub__client_dot_proto_dot_mongo__pb2.InsertSchemaRequest.SerializeToString,
            abstract__framehub__client_dot_proto_dot_mongo__pb2.GenericResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateDatabase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpcmongo.Admin/CreateDatabase',
            abstract__framehub__client_dot_proto_dot_mongo__pb2.InsertDatabaseRequest.SerializeToString,
            abstract__framehub__client_dot_proto_dot_mongo__pb2.GenericResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DropDatabase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpcmongo.Admin/DropDatabase',
            abstract__framehub__client_dot_proto_dot_mongo__pb2.DropDatabaseRequest.SerializeToString,
            abstract__framehub__client_dot_proto_dot_mongo__pb2.GenericResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Transform(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpcmongo.Admin/Transform',
            abstract__framehub__client_dot_proto_dot_mongo__pb2.InsertTransformRequest.SerializeToString,
            abstract__framehub__client_dot_proto_dot_mongo__pb2.GenericResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpcmongo.Admin/CreateUser',
            abstract__framehub__client_dot_proto_dot_mongo__pb2.InsertUserRequest.SerializeToString,
            abstract__framehub__client_dot_proto_dot_mongo__pb2.GenericResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpcmongo.Admin/UpdateUser',
            abstract__framehub__client_dot_proto_dot_mongo__pb2.UpdateUserRequest.SerializeToString,
            abstract__framehub__client_dot_proto_dot_mongo__pb2.GenericResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DropUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpcmongo.Admin/DropUser',
            abstract__framehub__client_dot_proto_dot_mongo__pb2.DropUserRequest.SerializeToString,
            abstract__framehub__client_dot_proto_dot_mongo__pb2.GenericResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class MongoServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Login = channel.unary_unary(
                '/grpcmongo.MongoService/Login',
                request_serializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.LoginRequest.SerializeToString,
                response_deserializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.LoginResponse.FromString,
                _registered_method=True)
        self.Authenticate = channel.unary_unary(
                '/grpcmongo.MongoService/Authenticate',
                request_serializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.AuthenticateRequest.SerializeToString,
                response_deserializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.AuthenticateResponse.FromString,
                _registered_method=True)
        self.FindOne = channel.unary_unary(
                '/grpcmongo.MongoService/FindOne',
                request_serializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.MongoRequest.SerializeToString,
                response_deserializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.MongoResponse.FromString,
                _registered_method=True)
        self.FindMany = channel.unary_unary(
                '/grpcmongo.MongoService/FindMany',
                request_serializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.MongoRequest.SerializeToString,
                response_deserializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.MongoListResponse.FromString,
                _registered_method=True)
        self.InsertOne = channel.unary_unary(
                '/grpcmongo.MongoService/InsertOne',
                request_serializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.InsertRequest.SerializeToString,
                response_deserializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.InsertResponse.FromString,
                _registered_method=True)
        self.InsertMany = channel.unary_unary(
                '/grpcmongo.MongoService/InsertMany',
                request_serializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.InsertManyRequest.SerializeToString,
                response_deserializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.InsertManyResponse.FromString,
                _registered_method=True)
        self.UpdateOne = channel.unary_unary(
                '/grpcmongo.MongoService/UpdateOne',
                request_serializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.UpdateRequest.SerializeToString,
                response_deserializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.UpdateResponse.FromString,
                _registered_method=True)
        self.UpdateMany = channel.unary_unary(
                '/grpcmongo.MongoService/UpdateMany',
                request_serializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.UpdateRequest.SerializeToString,
                response_deserializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.UpdateResponse.FromString,
                _registered_method=True)
        self.DeleteOne = channel.unary_unary(
                '/grpcmongo.MongoService/DeleteOne',
                request_serializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.DeleteRequest.SerializeToString,
                response_deserializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.DeleteResponse.FromString,
                _registered_method=True)
        self.DeleteMany = channel.unary_unary(
                '/grpcmongo.MongoService/DeleteMany',
                request_serializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.DeleteRequest.SerializeToString,
                response_deserializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.DeleteResponse.FromString,
                _registered_method=True)
        self.Aggregate = channel.unary_unary(
                '/grpcmongo.MongoService/Aggregate',
                request_serializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.AggregateRequest.SerializeToString,
                response_deserializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.MongoListResponse.FromString,
                _registered_method=True)


class MongoServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Login(self, request, context):
        """Auth
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Authenticate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindOne(self, request, context):
        """CRUD operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindMany(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InsertOne(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InsertMany(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateOne(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateMany(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteOne(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteMany(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Aggregate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MongoServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Login': grpc.unary_unary_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.LoginRequest.FromString,
                    response_serializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.LoginResponse.SerializeToString,
            ),
            'Authenticate': grpc.unary_unary_rpc_method_handler(
                    servicer.Authenticate,
                    request_deserializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.AuthenticateRequest.FromString,
                    response_serializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.AuthenticateResponse.SerializeToString,
            ),
            'FindOne': grpc.unary_unary_rpc_method_handler(
                    servicer.FindOne,
                    request_deserializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.MongoRequest.FromString,
                    response_serializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.MongoResponse.SerializeToString,
            ),
            'FindMany': grpc.unary_unary_rpc_method_handler(
                    servicer.FindMany,
                    request_deserializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.MongoRequest.FromString,
                    response_serializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.MongoListResponse.SerializeToString,
            ),
            'InsertOne': grpc.unary_unary_rpc_method_handler(
                    servicer.InsertOne,
                    request_deserializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.InsertRequest.FromString,
                    response_serializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.InsertResponse.SerializeToString,
            ),
            'InsertMany': grpc.unary_unary_rpc_method_handler(
                    servicer.InsertMany,
                    request_deserializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.InsertManyRequest.FromString,
                    response_serializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.InsertManyResponse.SerializeToString,
            ),
            'UpdateOne': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateOne,
                    request_deserializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.UpdateRequest.FromString,
                    response_serializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.UpdateResponse.SerializeToString,
            ),
            'UpdateMany': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateMany,
                    request_deserializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.UpdateRequest.FromString,
                    response_serializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.UpdateResponse.SerializeToString,
            ),
            'DeleteOne': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteOne,
                    request_deserializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.DeleteRequest.FromString,
                    response_serializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.DeleteResponse.SerializeToString,
            ),
            'DeleteMany': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteMany,
                    request_deserializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.DeleteRequest.FromString,
                    response_serializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.DeleteResponse.SerializeToString,
            ),
            'Aggregate': grpc.unary_unary_rpc_method_handler(
                    servicer.Aggregate,
                    request_deserializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.AggregateRequest.FromString,
                    response_serializer=abstract__framehub__client_dot_proto_dot_mongo__pb2.MongoListResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'grpcmongo.MongoService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('grpcmongo.MongoService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class MongoService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpcmongo.MongoService/Login',
            abstract__framehub__client_dot_proto_dot_mongo__pb2.LoginRequest.SerializeToString,
            abstract__framehub__client_dot_proto_dot_mongo__pb2.LoginResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Authenticate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpcmongo.MongoService/Authenticate',
            abstract__framehub__client_dot_proto_dot_mongo__pb2.AuthenticateRequest.SerializeToString,
            abstract__framehub__client_dot_proto_dot_mongo__pb2.AuthenticateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FindOne(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpcmongo.MongoService/FindOne',
            abstract__framehub__client_dot_proto_dot_mongo__pb2.MongoRequest.SerializeToString,
            abstract__framehub__client_dot_proto_dot_mongo__pb2.MongoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FindMany(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpcmongo.MongoService/FindMany',
            abstract__framehub__client_dot_proto_dot_mongo__pb2.MongoRequest.SerializeToString,
            abstract__framehub__client_dot_proto_dot_mongo__pb2.MongoListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def InsertOne(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpcmongo.MongoService/InsertOne',
            abstract__framehub__client_dot_proto_dot_mongo__pb2.InsertRequest.SerializeToString,
            abstract__framehub__client_dot_proto_dot_mongo__pb2.InsertResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def InsertMany(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpcmongo.MongoService/InsertMany',
            abstract__framehub__client_dot_proto_dot_mongo__pb2.InsertManyRequest.SerializeToString,
            abstract__framehub__client_dot_proto_dot_mongo__pb2.InsertManyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateOne(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpcmongo.MongoService/UpdateOne',
            abstract__framehub__client_dot_proto_dot_mongo__pb2.UpdateRequest.SerializeToString,
            abstract__framehub__client_dot_proto_dot_mongo__pb2.UpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateMany(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpcmongo.MongoService/UpdateMany',
            abstract__framehub__client_dot_proto_dot_mongo__pb2.UpdateRequest.SerializeToString,
            abstract__framehub__client_dot_proto_dot_mongo__pb2.UpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteOne(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpcmongo.MongoService/DeleteOne',
            abstract__framehub__client_dot_proto_dot_mongo__pb2.DeleteRequest.SerializeToString,
            abstract__framehub__client_dot_proto_dot_mongo__pb2.DeleteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteMany(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpcmongo.MongoService/DeleteMany',
            abstract__framehub__client_dot_proto_dot_mongo__pb2.DeleteRequest.SerializeToString,
            abstract__framehub__client_dot_proto_dot_mongo__pb2.DeleteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Aggregate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpcmongo.MongoService/Aggregate',
            abstract__framehub__client_dot_proto_dot_mongo__pb2.AggregateRequest.SerializeToString,
            abstract__framehub__client_dot_proto_dot_mongo__pb2.MongoListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
