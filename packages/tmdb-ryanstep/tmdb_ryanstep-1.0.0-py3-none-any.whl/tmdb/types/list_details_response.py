# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .list_details_response_comments import ListDetailsResponseComments
from .list_details_response_created_by import ListDetailsResponseCreatedBy
from .list_details_response_object_ids import ListDetailsResponseObjectIds
from .list_details_response_results_item import ListDetailsResponseResultsItem


class ListDetailsResponse(UniversalBaseModel):
    average_rating: typing.Optional[float] = None
    backdrop_path: typing.Optional[str] = None
    results: typing.Optional[typing.List[ListDetailsResponseResultsItem]] = None
    comments: typing.Optional[ListDetailsResponseComments] = None
    created_by: typing.Optional[ListDetailsResponseCreatedBy] = None
    description: typing.Optional[str] = None
    id: typing.Optional[int] = None
    iso_3166_1: typing.Optional[str] = None
    iso_639_1: typing.Optional[str] = None
    item_count: typing.Optional[int] = None
    name: typing.Optional[str] = None
    object_ids: typing.Optional[ListDetailsResponseObjectIds] = None
    page: typing.Optional[int] = None
    poster_path: typing.Optional[str] = None
    public: typing.Optional[bool] = None
    revenue: typing.Optional[int] = None
    runtime: typing.Optional[int] = None
    sort_by: typing.Optional[str] = None
    total_pages: typing.Optional[int] = None
    total_results: typing.Optional[int] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
