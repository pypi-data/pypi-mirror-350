[build-system]
requires = ["setuptools", "setuptools_scm", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "FACILE-RS"
description = "FACILE-RS (Findability and Accessibility through Continuous Integration with Less Effort) automates tasks around the archival and long term preservation of software repositories."
authors = [
    {name = "openCARP consortium", email = "info@opencarp.org"},
    {name = "Marie Houillon"},
    {name = "Jochen Klar", email = "mail@jochenklar.de"},
    {name = "Axel Loewe"},
    {name = "Tomas Stary"},
]
maintainers = [
    {name = "Jochen Klar", email = "mail@jochenklar.de"},
]
readme = "README.md"
requires-python = ">=3.9"
license = {file = "LICENSE"}
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Environment :: Web Environment',
    'Intended Audience :: Science/Research',
    'License :: OSI Approved :: Apache Software License',
    'Operating System :: OS Independent',
    "Programming Language :: Python :: 3 :: Only",
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Programming Language :: Python :: 3.13',
]
dependencies = [
    "bagit~=1.7",
    "pypandoc~=1.6",
    "python-dotenv~=1.1",
    "python-frontmatter~=1.1",
    "PyYaml~=6.0.2",
    "requests~=2.23",
    "python-resize-image~=1.1.20",
    "Pillow~=9.4.0; python_version <= '3.11'",
    "Pillow~=11.0; python_version > '3.11'",
    "setuptools",
]
dynamic = ["version"]

[project.optional-dependencies]
dev = [
    "build",
    "pre-commit",
    "ruff",
    "twine",
]
test = [
    "pytest",
    "pytest-cov",
    "coverage",
    "cffconvert",
]

[project.urls]
repository = "https://git.opencarp.org/openCARP/FACILE-RS"

[project.scripts]
facile-rs = "facile_rs.utils.cli:main"
create_bag = "facile_rs.create_bag:main_deprecated"
create_bagpack = "facile_rs.create_bagpack:main_deprecated"
create_cff = "facile_rs.create_cff:main_deprecated"
create_datacite = "facile_rs.create_datacite:main_deprecated"
create_radar = "facile_rs.create_radar:main_deprecated"
create_release = "facile_rs.create_release:main_deprecated"
create_zenodo = "facile_rs.create_zenodo:main_deprecated"
prepare_radar = "facile_rs.prepare_radar:main_deprecated"
prepare_release = "facile_rs.prepare_release:main_deprecated"
prepare_zenodo = "facile_rs.prepare_zenodo:main_deprecated"
run_bibtex_pipeline = "facile_rs.run_bibtex_pipeline:main_deprecated"
run_docstring_pipeline = "facile_rs.run_docstring_pipeline:main_deprecated"
run_markdown_pipeline = "facile_rs.run_markdown_pipeline:main_deprecated"

[tool.setuptools_scm]
version_file = "facile_rs/_version.py"

[tool.setuptools.packages.find]
include = ["facile_rs*"]

[tool.setuptools.package-data]
"*" = ["*"]

[tool.ruff]
target-version = "py38"
line-length = 120
lint.select = [
  "B",    # flake8-bugbear
  "C4",   # flake8-comprehensions
  "E",    # pycodestyle
  "F",    # pyflakes
  "I",    # isort
  "PGH",  # pygrep-hooks
  "RUF",  # ruff
  "UP",   # pyupgrade
  "W",    # pycodestyle
  "YTT",  # flake8-2020
]
lint.ignore = [
  "B006",   # mutable-argument-default
  "B007",   # unused-loop-control-variable
  "B018",   # useless-expression
  "RUF012", # mutable-class-default
]

[tool.sphinx-pyproject]

[tool.coverage.report]
omit = [
    "test_*.py",
]
exclude_lines = [
    "cli.main_deprecated(__name__)",
    "main_deprecated()",
]
