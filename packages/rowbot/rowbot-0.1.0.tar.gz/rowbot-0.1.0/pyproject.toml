# ---------------------------------------------------------------------------- #
# Build:
# ---------------------------------------------------------------------------- #

[build-system]
requires = ["setuptools>=70.0.0", "wheel==0.45.1"]
build-backend = "setuptools.build_meta"


[tool.setuptools]
include-package-data = true
package-dir = {"" = "src"}


[tool.setuptools.package-data]
rowbot = ["configs/*.json"]


[tool.setuptools.packages.find]
where = ["src"] # ["."] by default

# ---------------------------------------------------------------------------- #
# Project:
# ---------------------------------------------------------------------------- #

[project]
authors = [{name = "Santiago La Corte", email = "selacorte@uc.cl"}]
description = "Interactive tool to simplify commands management in a shell."
license = {file = "LICENSE"}
name = "rowbot"
readme = "README.md"
requires-python = ">=3.10,<4.0"
version = "0.1.0"

classifiers = [
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "click>=8.1,<9.0",
    "dependency-injector>=4.4.0,<5.0",
    "pydantic>=2.1,<3.0",
    "pydantic-settings>=2.8,<3.0",
    "windows-curses; sys_platform == 'win32'"
]


[project.optional-dependencies]
build = [
    "build==1.2.2.post1",
    "python-semantic-release==9.21.0",
    "setuptools>=70.0.0",
    "twine==6.1.0",
    "wheel==0.45.1"
]

dev = [
    "bandit==1.8.3",
    "black==24.8.0",
    "commitizen==4.4.1",
    "isort==5.13.2",
    "pre-commit==4.1.0",
    "pydocstyle==6.3.0",
    "pylint==3.2.6"
]

test = [
    "pytest==8.3.2",
    "pytest-cov==5.0.0"
]


[project.scripts]
rowbot = "rowbot.cli:rowbot"


[project.urls]
homepage = "https://gitlab.com/slacorte/rowbot"
documentation = "https://gitlab.com/slacorte/rowbot-/tree/main/README.md"
issues = "https://gitlab.com/slacorte/rowbot-/issues"
changelog = "https://gitlab.com/slacorte/rowbot-/tree/main/CHANGELOG.md"
download = "https://gitlab.com/slacorte/rowbot-/releases"

# ---------------------------------------------------------------------------- #
# Coverage:
# ---------------------------------------------------------------------------- #

[tool.coverage.paths]
# e2e tests can run against a local package, and coverage will still recognize
# them as if everything were in the local "src/" directory:
source = ["src/rowbot", "*/site-packages/rowbot"]


[tool.coverage.run]
branch = true
omit = ["**/__init__.py"]
source = ["rowbot"]

# ---------------------------------------------------------------------------- #
# Style:
# ---------------------------------------------------------------------------- #

[tool.black]
line-length = 80


[tool.commitizen]
name = "cz_conventional_commits"


[tool.isort]
combine_as_imports = true
force_grid_wrap = 0
include_trailing_comma = true
line_length = 80
multi_line_output = 3
profile = "black"
use_parentheses = true


[tool.mccabe]
complexity = 50


[tool.pydocstyle]
convention = "numpy"


[tool.pylint]
disable = ["C0114", "C0301", "I1101", "W0511", "W0718"]
expected-line-ending-format = "LF"
ignore-patterns = [".*__init__\\.py", ".*tests.*"]
known-third-party = ["enchant"]
max-line-length = 80
min-public-methods = 0
output-format = "text:reports/lint-report.txt,colorized"
reports = true

# ---------------------------------------------------------------------------- #
# Semantic Release:
# ---------------------------------------------------------------------------- #

[tool.semantic_release]
build_command = "python3 -m build"
vcs = "gitlab"
version_toml = ["pyproject.toml:project.version"]
version_variables = ["src/rowbot/__init__.py:__version__"]


[tool.semantic_release.branches.develop]
match = "(dev.*)"
prerelease = true
prerelease_token = "beta"


[tool.semantic_release.branches.feature]
match = "feature/.*"
prerelease = true
prerelease_token = "alpha"


[tool.semantic_release.branches.hotfix]
match = "hotfix/.*"
prerelease = true
prerelease_token = "rc"


[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease = false


[tool.semantic_release.branches.staging]
match = "(int.*|staging)"
prerelease = true
prerelease_token = "rc"


[tool.semantic_release.commit_parser_options]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
allowed_tags = [
    "build",
    "chore",
    "ci",
    "debug",
    "docs",
    "feat",
    "fix",
    "perf",
    "refactor",
    "remove",
    "style",
    "test"
]


[tool.semantic_release.remote]
type = "gitlab"
token = { default_env = "GITLAB_TOKEN", env = "GL_TOKEN" }
