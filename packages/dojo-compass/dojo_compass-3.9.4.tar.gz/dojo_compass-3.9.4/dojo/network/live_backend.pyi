from _typeshed import Incomplete
from datetime import datetime
from dojo.common.constants import Chain as Chain
from dojo.config import cfg as cfg
from dojo.network.base_backend import BaseBackend as BaseBackend
from web3.contract.contract import ContractFunction as ContractFunction
from web3.types import PendingTx as PendingTx

logger: Incomplete

class LiveBackend(BaseBackend):
    def __init__(self, chain: Chain) -> None: ...
    web3: Incomplete
    def connect(self, date_range: tuple[datetime, datetime], backend: str = 'anvil'): ...
    def contract_call(self, function: ContractFunction, function_params: list | tuple, call_params: dict | None = None): ...
    def contract_transact(self, function: ContractFunction, function_params: list | tuple, transact_params: dict | None = None) -> PendingTx: ...
    def disconnect(self) -> None: ...
    def save_state(self) -> None: ...
    def load_state(self) -> None: ...
