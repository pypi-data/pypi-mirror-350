import abc
from _typeshed import Incomplete
from decimal import Decimal
from dojo.agents.base_agent import BaseAgent as BaseAgent
from dojo.observations import AAVEv3Observation as AAVEv3Observation
from typing import Any

class AAVEv3Agent(BaseAgent[AAVEv3Observation], metaclass=abc.ABCMeta):
    initial_wealth: Incomplete
    def __init__(self, initial_portfolio: dict[str, Decimal], policy: Any, name: str | None = None) -> None: ...
    def get_health_factor(self, obs: AAVEv3Observation) -> float: ...
    def get_pnl(self, obs: AAVEv3Observation) -> float: ...
    def get_total_current_wealth(self, obs: AAVEv3Observation) -> float: ...
    def get_hodling_difference(self, obs: AAVEv3Observation) -> float: ...
