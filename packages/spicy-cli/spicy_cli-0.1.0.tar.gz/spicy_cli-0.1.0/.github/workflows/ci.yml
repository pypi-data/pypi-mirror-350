name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.13"] #, "3.12", "3.13"] # Uncomment to test multiple Python versions as needed (reduces minutes burnt on CI)

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"

    - name: Install dependencies
      run: |
        uv venv
        uv pip install -e ".[dev]"

    - name: Run tests
      run: |
        uv run pytest -v --cov=spicy_cli --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      uses: codecov/codecov-action@v5
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"

    - name: Install dependencies
      run: |
        uv venv
        uv pip install -e ".[dev]"

    - name: Run black
      run: uv run black --check .

    - name: Run isort
      run: uv run isort --check-only .

    - name: Run ruff
      run: uv run ruff check .

    - name: Run mypy
      run: uv run mypy src/

    - name: Run pylint
      run: uv run pylint src/spicy_cli/

  build:
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"

    - name: Install build dependencies
      run: |
        uv venv
        uv pip install build

    - name: Build package
      run: uv run python -m build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"

    - name: Install dependencies
      run: |
        uv venv
        uv pip install -e ".[dev]"
        uv pip install safety bandit
        
    # Disabled until account setup completed    
    #- name: Run safety check
    #  run: uv run safety scan --json

    - name: Run bandit security linter
      run: uv run bandit -r src/ -f json
