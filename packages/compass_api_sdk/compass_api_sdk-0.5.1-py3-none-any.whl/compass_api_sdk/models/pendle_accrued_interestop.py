"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from compass_api_sdk.types import BaseModel
from compass_api_sdk.utils import FieldMetadata, QueryParamMetadata
from enum import Enum
from typing_extensions import Annotated, TypedDict


class PendleAccruedInterestChain(str, Enum):
    r"""The chain to use."""

    BASE_MAINNET = "base:mainnet"
    ETHEREUM_MAINNET = "ethereum:mainnet"
    ARBITRUM_MAINNET = "arbitrum:mainnet"


class PendleAccruedInterestRequestTypedDict(TypedDict):
    chain: PendleAccruedInterestChain
    r"""The chain to use."""
    market_address: str
    r"""The address of the market to get the accrued interest for."""
    user_address: str
    r"""The address of the user to get the accrued interest for."""


class PendleAccruedInterestRequest(BaseModel):
    chain: Annotated[
        PendleAccruedInterestChain,
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = PendleAccruedInterestChain.ARBITRUM_MAINNET
    r"""The chain to use."""

    market_address: Annotated[
        str, FieldMetadata(query=QueryParamMetadata(style="form", explode=True))
    ] = "0xff4d6991658c5844856faef5da9232c252896fca"
    r"""The address of the market to get the accrued interest for."""

    user_address: Annotated[
        str, FieldMetadata(query=QueryParamMetadata(style="form", explode=True))
    ] = "0xebdddbafc3fc3742fe2a3cfec17a20a50e84d598"
    r"""The address of the user to get the accrued interest for."""
